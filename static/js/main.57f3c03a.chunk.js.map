{"version":3,"sources":["system/base/design/styles.tsx","system/contents/dialog/confirmDialog.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/redux/store/store.tsx","system/contents/dialog/globalDialog.tsx","system/utils/systemConst.tsx","system/utils/canvasUtil.tsx","system/utils/form/validateUtil.tsx","system/utils/localStorageUtil.tsx","system/base/components/tab/tabbedPane.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/utils/treeUtil.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/base/components/tab/channelPane.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/util/drawableVectorChooser.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/util/logicFormUtil.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/sp/spUtil.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/previewLauncherFrameSp.tsx","system/contents/create/preview/buildUtil.tsx","system/contents/create/preview/previewLogicFrame.tsx","system/contents/create/manage/nameDefDialog.tsx","system/contents/create/factory/logicMainteTab.tsx","system/sp/contents/create/etc/shareCloudUtil.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/createChannel.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/pCRoot.tsx","system/sp/directLinkManager.tsx","system/sp/contents/sPLibraryChannel.tsx","system/sp/contents/create/etc/shareDialog.tsx","system/sp/contents/create/etc/libraryLoader.tsx","system/sp/contents/create/etc/newScenarioDialog.tsx","system/sp/contents/create/etc/nameDefDialogLocal.tsx","system/sp/contents/create/etc/saveOptionDIalog.tsx","system/sp/contents/create/sPManageFrame.tsx","system/sp/contents/create/edit/fuseMainteDialog.tsx","system/sp/contents/create/edit/fuseList.tsx","system/sp/contents/create/edit/frameLine.tsx","system/sp/contents/create/edit/seedSelectDialog.tsx","system/contents/create/preview/previewLauncherFrame.tsx","system/sp/contents/create/edit/sPEditStoryFrame.tsx","system/sp/contents/create/sPCreateChannel.tsx","system/sp/contents/sPPropertyChannel.tsx","system/sp/contents/sPInfoChannel.tsx","system/contents/dialog/syncBlind.tsx","system/sp/sPRoot.tsx","system/redux/dispatcher/dispatcher.tsx","system/contents/entry/systemEntry.tsx","system/utils/form/formUtiil.tsx","system/utils/dataUtil.tsx"],"names":["Styles","_Styles","FONT_SMALL","FONT_MIDIUM","FONT_LARGE","CSS_LABEL","css","_templateObject7","_taggedTemplateLiteral","CSS_LABEL_SMALL","_templateObject8","CSS_LABEL_MIDIUM","_templateObject9","CSS_LABEL_LARGE","_templateObject10","CSS_BUTTON_DISABLE","_templateObject11","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ConfirmDialog","Component","props","_props$width","_props$height","_props$buttons","_useContext","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_objectSpread","_jsxs","_Frame","children","_jsx","_Main","_Inner","message","split","map","msg","i","FormUtil","Message","isCenter","ButtonRecord","align","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","SystemEntry","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","window","addEventListener","navigator","serviceWorker","register","registration","console","log","catch","error","warn","documentElement","touches","length","preventDefault","passive","t","now","Date","getTime","ReactDOM","render","React","StrictMode","getElementById","initialStore","isSplash","user","isSync","canDialogClose","isSPMode","logoutActions","channelIndex","cloud","env","screenRate","scrollLock","libraryData","storyData","fuseCacheList","local","maxSeq","projects","putInterval","isDispPreset","editing","localSeq","libName","fileHandle","GloballDialog","_Fragment","_Blind","onClick","_SystemConst","AUTH_TEXT_WIDTH","AUTH_TEXT_HEIGHT","IS_SP","APP_VERSION","APP_PRODUCT_SERVER_DOMAIN","APP_SERVER_DOMAIN","EDGE_PREFIX","SystemConst","CanvasUtil","_CanvasUtil","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","getLogoURL","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","getAuthTextURL","text","WIDTH","SIZE","rotate","Math","PI","char","charAt","fontRand","random","alphaRand","concat","ValidateUtil","_ValidateUtil","checkRequired","str","checkStringLength","min","max","checkAsciiChars","checkIncludesChars","list","ch","indexOf","checkNumber","isNaN","Number","checkNumberRange","num","checkAll","conditions","result","checkArrayNumber","value","undefined","find","v","LocalStorageUtil","TabbedPane","_props$tabRecordNum","_useState","useState","activeNo","_useState2","_slicedToArray","setActiveNo","tabRecordNum","_LabelList","tabElements","tab","index","TabLabel","name","isActive","isEnable","enable","selectTab","selectTabIndex","_ContList","TabContents","cont","_TabLabel","_Contents","AccountFrame","tabIndex","setTabIndex","_useState3","errors","_useState4","userId","setUserId","_useState5","_useState6","oldPass","setOldPass","_useState7","_useState8","newPass","setNewPass","_useState9","_useState10","newPassConfirm","setNewPassConfirm","_useState11","_useState12","email","setEmail","_useState13","_useState14","userIdList","setUserIdList","_useState15","_useState16","emailList","setEmailList","_useState17","_useState18","isModify","setModify","loginProps","reloadInfo","id","password","DataUtil","findUserInfoList","forEach","info","push","hash","getHashedFromUserSeq","seq","history","replaceState","userTabJsx","_Wrap","InputTextFormBak","titleLabel","checkable","setCheckable","validates","checker","errorType","marginTop","isReadOnly","isPassword","dependency","permitRegist","_Header","_Body","_Footer","passwordStr","sendQueryRequestToAPI","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","useMemo","isVisible","BorderPanel","title","innerJsx","placeholder","InfoFrame","textRecords","_AuthText","src","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","results","nextSeq","wrap","_context","prev","next","sent","json","JSON","stringify","cnt","getNextUserSeq","stop","MessageLink","clickAction","img","_LocalStorageUtil","DEFAULT_FILE_NAME_PREFIX","KEY_LOGIN_HASH","KEY_SCENARIO_SEQ","KEY_SCENARIO_PREFIX","KEY_DISP_PRESET","KEY_PROP_PUT_INTERVAL","load","update","userHash","localStorage","getItem","userSeq","getDecryptionedUserSeq","resPrjList","findUserInfoSeq","findUserLibdvList","res","source","lastmod","removeItem","scenarioSeq","setItem","toString","parse","TreeUtil","_TreeUtil","LoginLogin","isForget","setForget","findUserInfoLogin","type","findUserInfoFromEmail","url","sendQueryRequestToMailAPI","from","to","subject","LoginFrame","isCreate","setCreate","logo","_LogoDiv","_TypeSwitch","TotalHeader","input","authButtonJsx","_LoginButton","location","origin","ImUser","_UserName","isEntry","func","_Logo","replace","_Menu","_MenuItem","TOTAL_HEADER_WIDTH","ChannelPane","_props$isLandscape","isLandscape","ChannelLabel","icon","ChannelContents","_Item","_Icon","_Label","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","createNode","data","parent","depth","isOpen","getChildIndex","node","parentNode","Frame","_props$isDisable","_props$focusNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","buildJsxRecords","element","spaceList","isCurrent","_Record","current","scrollWidth","isRelation","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","slice","invalidate","Instance","_createClass","_this","_classCallCheck","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","x","xy","y","this","_Particle","Particle","_DrawUtil","createGradDrawer","param","_param$radius","radiusBase","radius","self","_convertRgbaFromColor","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","color","r","b","a","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","parseInt","substring","r1","g1","b1","a1","toWhite","rate","DrawUtil","Vector","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","_VectorUtil","VectorUtil","VisualParamType","_ParamUtil","VisualParams","Object","values","BehaviorParamType","BehaviorParams","SelfParamType","SelfParams","ExtendParamType","ExtendParams","EffectParamType","EffectParams","ModulateParamType","ModulateParams","ConstantType","Constants","ParamUtil","ModulateBuilder","extendList","decayRate","decayLimit","gravity","gravityLimit","PreviewUtil","_PreviewUtil","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","buildLogicProps","rootData","initialValueMapList","initailArrayMapList","createParticleRec","cur","parentValueMapList","parentArrayMapList","_searchElement","_searchElement2","valueMapList","ConstantValueMap","arr","array","fieldMng","mngs","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","_connector$disable","_searchElement3","connector","disable","logicItem","method","logicMng","defs","def","searchDependLogic","depend","_convertParamsToBoole","addValueMap","item","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","_loop","_searchElement4","iterateValueMap","LOOP_ITERATE","iterateArrayMap","_arr$array$i","sendValueMapList","filter","isArray","_convertParamsToValue","sendArrayMapList","_convertParamsToArray","convertParamsToArray","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","warpList","_warpList$find","formula","valueMap","m","formulaStr","varCnt","formulaItems","convertFormulaToBoolean","arrayMapList","RADIAN_ROUND","ModifyOperations","EditorArgumentMng","FactoryTreeContext","setFocusNode","newNode","LogicElementUtil","addChild","_props$isInputOK","removeSelf","isComplete","isCompleteCheck","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","SendTemplateDialog","EditorArgumentItem","_node$parent","_useContext2","logicNode","setName","argType","setArgType","reservedList","_node$parent2","_node$parent2$parent","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","FormRecord","jsx","TextField","LogicUtil","checkFieldName","Combobox","ArgTypes","labelText","headBlank","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","mng","visualMng","behaviorMng","inhMng","inh","_LogicElementUtil$get","_LogicElementUtil$get2","inhfld","getInnerWrap","syncParamName","_logicNode$parent","runRec","logic","conn","inhLogic","getInnerWrapFixed","sendMng","seedMng","interfaceWrap","_logicNode$parent2","connWrap","syncArgumentCallback","_logicNode$parent3","inhMngNode","getInnerNodeFixed","seedNode","interfaceNode","sendNode","entry","newArgName","paramWrap","createParamWrap","delArgName","delIndex","some","splice","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","_useMemo","el","_useMemo2","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","listPos","wrapElement","removeChild","insertChild","getDefaultLogicMngs","syncLogicName","Record","textAlign","Switch","isUse","argumentNode","getInnerNode","hasArgument","args","fieldNode","hasField","inheritNode","hasInherit","getReplicateButton","getLocgicRefers","logicName","searchLogicReferInherit","logicMngNode","Level","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","SEED","argumentList","arrayArgList","fieldKeys","parentType","_getLogicNode","_node$parent3","_node$parent4","_node$parent4$parent","_node$parent4$parent$","getLogicNode","argMng","arg","fieldName","_node$parent5","Error","_node$parent6","inhfldNode","_node$parent7","fieldKeyList","paramNameList","_node$parent8","_node$parent8$parent","addNum","delNum","parenthesisBalance","formJsxList","labelWidth","ParamInputTypes","_param$isArray","marginLeft","isNumber","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","_param$isArray2","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","_mngNode$parent","_mngNode$parent2","_LogicElementUtil$get3","_LogicElementUtil$get4","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","size","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","_disable","identify","setIdentify","setMethod","setDepend","defaultName","getNumberingOnPrefixName","logicList","idList","initConnectorNode","syncTreeElementFromWrap","_newNode$parent","initSendParams","sendParamList","_sendNode$parent","dependItem","argWrap","getSendParamList","curParamList","isChange","ConnectTypes","isEnabled","dependLogic","inherit","newWrap","getChildrenElementNode","rootNode","clone","_SendTemplateDialog","COMPONENT_WIDTH","ConnectParentPosition","xName","setXName","yName","setYName","_props$node$parent","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","SetParentPosition","paramList","xParam","yParam","DrawableVectorChooser","_DrawableVectorChooser","EditorSendManager","isDepend","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","disp","setDisp","setEntry","permit","setPermit","_param$disp","logicNameList","seed","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","WND_SIZE","EditorThumbnailItem","_node$parent$parent","seedWrap","setFrame","urls","setUrls","setTimeout","sample","getThumbnailURL","targetFrame","sampleNo","frameCnt","_node$parent3$parent","argMap","sendParams","send","_PreviewUtil$convertP","getSeedValueMap","_LogicElementUtil$get5","_PreviewUtil$convertP2","getSeedArrayMap","par","_ret","pictureJsxList","_LogicElementUtil$get6","imgJsx","_IMG","_SampleDiv","_SampleName","_CanvasDiv","FRAME_WIDTH","ComponentNormal","isDraw","setDraw","pointJsxList","xList","yList","_Point","putAction","clientRect","getBoundingClientRect","posX","posY","addPoint","moveAction","subX","subY","releaseAction","FixedText","isRecordItem","onMouseDown","clientX","clientY","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","pageX","pageY","onTouchMove","onTouchEnd","onTouchCancel","_Center","clear","ComponentColorable","colorHistory","setColorHistory","setR","setG","setB","rList","gList","bList","colorCode","_PointColorable","colorHistoryJsxList","_ColorItem","shift","addColorHistory","_Color","onChange","target","LogicFormUtil","buildPreviewForms","formgrpList","formList","setFormList","usedGrps","form","argument","formgrp","grp","targetForms","j","_Message","_Type","_Range","formIndex","disabled","xValue","yValue","join","rValue","gValue","bValue","labelName","step","_Tsumami","EditorSampleItem","paramForms","setParamForms","argInfoList","formgrpMng","defines","seedargList","defval","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","setStep","setDefval","isPosX","setPosX","setArray","_param$isPosX","curIndex","getCurrentIndex","getSwapButtonsCallback","isUpper","sampleMng","swapNode","sendMngWrap","_arg$defval","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","_LogicUtil","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","getNodeDisplayJsx","isFocus","_Category","backgroundColor","detailJsx","_Span","_Field","_EditableValue","_data2$disable","_Signature","_Detail","nameJsx","_ValueType","getTypeName","getDetailComponent","FactDetSeedMng","FactDetArgumentMng","FactDetBehiviorMng","wrapNode","get","listName","elementNode","getChildrenDataNode","_LogicElementUtil","_len","arguments","typeList","_key","_len2","_key2","innerNode","apply","_len3","_key3","getListParamName","_len4","_key4","innerWrap","isHead","isTail","ownerChildren","parentWrap","findIndex","swapOrder","ownDataChildren","curNo","swapData","_len5","dependencyMngNodes","_key5","depNode","replicateSameLevel","cloneBase","cloneDest","namable","getNamableProps","targetElement","getIdentifyParamName","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","findSeedWrap","getInitialData","nameList","curWrap","nameParam","mngWrap","listParam","getLogicNameList","curLogicOwner","prefix","_getLogicItem","mngType","_node$parent5$parent","_node$parent5$parent$","_node$parent5$parent$2","getLogicItem","seedId","doParticleJob","fuse","_logicMng$defs$find","getOrigin","seedargMng","seedarg","getSendingValueMap","getSendingArrayMap","getSeedProperties","seedsendList","thumbnailList","_logicMng$defs$find2","SPUtil","_SPUtil","PreviewLogicInputForm","logicWrap","setSendingValueMap","setSendingArrayMap","PreviewSeedInputForm","template","setTemplate","formgrpWrap","presetList","arrayMap","ButtonItem","button","selectedIndex","PreviewLauncherFrameSp","setCur","isPlay","setPlay","sceens","previewTabJsx","_ProgressDiv","clickX","left","pageXOffset","_ProgressVal","isIconButton","interval","AiFillStepBackward","AiFillStepForward","IoStopOutline","VscDebugStart","RxReset","onKeyDown","_CloseButton","closeAction","BuildUtil","_BuildUtil","run","_props$guaranteeFrame","minFrame","guaranteeFrame","doIterate","particle","limitFrame","limitParticle","doEnd","runPaging","beginFrame","advanceFrame","_props$guaranteeFrame2","BuildFrame","dispatcher","storyPreviewProps","setStoryPreviewProps","useFrame","curFrame","buildCache","setBuildCache","logicData","fuseList","updateStore","isStandby","_ProgressBox","_RateVal","getJsx","PreviewLogicFrame","setSceens","setFrameCnt","isBuild","setBuild","sendingValueMap","sendingArrayMap","isSeed","master","buildTabJsx","_Msg","_FormDiv","closeButtonAction","NameDefDialog","createContext","LogicMainteTab","setInvalidate","masterNode","openPreviewDialog","n","_TreeDiv","_TreeHead","_TreeBody","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","Provider","setRootData","_DetailMainDiv","_store$cloud","targetSeq","p","existNames","findProjectMaxSeq","_store$system$user","newProject","insertProject","targetItem","updateProjectName","registUpdate","marginBottom","ShareCloudUtil","abrupt","_ref2","_callee2","req","_context2","_x","_x2","_ref3","_callee3","_context3","_x3","_x4","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","project","_ListItem","getHashedFromProjectSeq","_Name","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","fuseCnt","elementSize","logicCnt","uploadCloud","gZip","overwriteCloudFile","curPrj","updateProjectSource","saveLocalFile","saveLibraryFile","cloudJsx","_ContDiv","unZip","deleteProject","_ListDiv","localJsx","loadFile","_HeaderDiv","_BodyDiv","_LeftDiv","_RighttDiv","assert","getNewSaveButton","getOverwriteButton","getSHA256Hash","CreateChannel","projectType","getProjectType","SCORE_TAB_MARGIN","PublishFrame","libList","setLibList","findAllReleaseProjectList","resList","ownerId","seedList","argCount","setLibCnt","libListJsx","lib","dispCnt","count","_Owner","_CName","plainData","showSaveFilePicker","types","accept","handle","writable","createWritable","write","close","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedName","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","releaseNote","record","note","version","date","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","_Left","_MessageRecord","_Right","MainFrame","AiFillHome","VscGitPullRequestCreate","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_Title","_VERSION","_NowLoading","_Copylight","fadeIn","keyframes","PCRoot","splashJsx","_MainDiv","DirectLinkManager","setStoryData","findScenarioData","library","scenario","scenarioData","getBlindJsx","VscSettingsGear","_Banner","sql","SPLibraryChannel","_ShareCloudUtil","uploadShareScenario","cloudSeq","isExists","sourcePlain","sourceZip","libhash","libSourcePlain","libSourceZip","getNextSeq","isExistsAlreadySameSeq","overwriteSnrshRecord","insertSnrshRecord","isExistsSameHash","insertLibhsRecord","deleteShareScenario","deleteSnrshRecord","records","_ref4","_callee4","_context4","_x5","_x6","_ref5","_callee5","_context5","_x7","_x8","_x9","_ref6","_callee6","_context6","c","_x10","_ref7","_callee7","_context7","_x11","_ref8","_callee8","_context8","_x12","_ref9","_callee9","_context9","_x13","_x14","_x15","_x16","ShareDialog","share","syncProccess","isShared","fileKey","getURL","getURLAddQueryParam","_UrlDiv","readOnly","InstapaperShareButton","_SnsIconFrame","AiOutlineInstagram","TwitterShareButton","AiOutlineTwitter","MailruShareButton","AiOutlineMail","FacebookShareButton","AiOutlineFacebook","LineShareButton","BsLine","SwitchTwoFace","label1","label2","rate1","rate2","LibraryLoader","_LibraryLoader","textarea","getOfficialList","libraries","outline","getExtendList","NewScenarioDialog","focusLibIndex","setFocusLibIndex","isExtend","setExtend","officialPackList","extendPackList","libPackJsxList","pack","_LibItem","_CheckDiv","AiOutlineCheck","_LibInfo","_LibName","_LibVersion","_LibOutline","MdCancelPresentation","AiOutlineEnter","getStringFromDate","extendAction","isEditable","NameDefDialogLocal","focusIndex","checkName","getDefaultName","curProject","SaveOptionDIalog","SPManageFrame","setUpdate","projectItemJsxList","onContextMenu","_Share","isShare","BsFillShareFill","thumbJsxList","thumbJsx","cache","thumbList","thumb","_Img","thumn","isEdit","MdClear","IoCreateOutline","setEdit","FiDownload","story","updateCache","ImCopy","MdOutlineDriveFileRenameOutline","RiDeleteBinLine","FuseMainteDialog","newFrame","setNewFrame","setSeed","preset","setPreset","focus","curFuse","mapping","propertiesFormJsx","activeSeed","formgrps","presets","initFormList","_seed$disp","cancelAction","reduce","fuseSeq","COL_WIDTH_LIST","OPTION_BUTTON_WIDTH","FuseList","recordJsxList","_curSeed$disp","curSeed","_RecordWrap","_RecordCont","setFocus","_ColWrap","_TextItem","_ImageItem","_Option","FiEdit","modifyAction","cloneFuse","focusSeq","cloneCache","GrView","openPreviewSoloDialog","_HeaderItem","_BodyScrollDiv","_templateObject17","FrameLine","startY","setStartY","startX","setStartX","frameRateJsxList","clientWidth","clientHeight","posXIndex","range","top","_FrameRate","isCurr","prevFocusSeq","sort","nowFocusSeq","_FrameLineDiv","SeedSelectDialog","setFocusIndex","seedJsxList","addSeed","newSeq","PreviewLauncherFrame","SPEditStoryFrame","isPreview","setPreview","presetIndex","seedWrapList","groupMng","dispName","getNewFuseProps","s","VscPreview","IoSaveOutline","editingDataVal","editingData","_SeedDiv","AiOutlineAppstoreAdd","newFuse","newFuseProps","_FuseListFrame","isDisp","SPCreateChannel","_SwitchWrap","isLarge","SPPropertyChannel","setInterval","setDispPreset","reload","MdOutlineCleaningServices","seqMax","SPInforChannel","SyncBlind","_Animation","ThreeDots","SPRoot","isPermit","adjLeft","adjTop","screen","setScreen","_SplashDiv","rect","cw","isFitSide","userAgent","isSmartPhone","orientation","alert","_Error","mainJsx","hashKey","projectSeq","getDecryptionedProjectSeq","BiInfoSquare","TbLogicAnd","VscSymbolProperty","_ChannelWrap","match","Dispatcher","proc","sys","openPreviewAllDialog","seedProps","RouterManage","HashRouter","basename","process","URLSearchParams","useLocation","search","Route","path","exact","_FormUtil","checkables","_props$isPassword","_props$validates","_props$dependency","_props$isEnable","_props$isCenter","_props$marginTop","_props$marginBottom","_props$isCenter2","validaters","dep","getErrors","validater","_ItemnLabel","_ItemnInputBak","hasTitle","_props$isEnable2","_props$textAlign","_props$marginTop2","_props$marginBottom2","_props$labelWidth","_props$isEnabled","_props$isVisible","_props$textAlign2","_props$marginTop3","_props$marginBottom3","lablelWidth","DEFAULT_LABEL_WIDTH","_FixedLabel","_props$isPassword2","_props$isNumber","_props$isEnabled2","_props$validates2","_props$dependency2","_props$step","setNaN","_ItemnInput","valueAsNumber","onBlur","_props$validates3","_props$dependency3","_props$headBlank","_props$isEnabled3","_props$width2","unshift","_ItemCombobox","_item$isDisabled","_item$isDisabled2","isDisabled","TextArea","_props$validates4","_props$dependency4","_ItemnTextArea","_props$align","_props$interval","_props$marginTop4","_props$marginBottom4","_button$isEnable","_button$isEnable2","_Button","_IconButton","_button$interval","_button$isEnable3","_button$isEnable4","_props$isCenter3","_props$marginTop5","_props$marginBottom5","_props$isCenter4","_props$isCenter5","_props$marginTop6","_props$marginBottom6","_props$isCenter6","isLink","_props$isVisible2","_props$isEnable3","_props$backgroundColo","_BorderText","_BorderPanel","_props$height2","_InfoDiv","_props$isRelation","_props$isEnable4","_Switch","_props$isEnable5","_props$isEditable","_props$isLarge","_props$isLarge2","_props$isLarge3","_SwitchTwoFace","_SwitchItem","isLeft","_props$marginLeft","select","_props$marginLeft2","option","_templateObject18","_templateObject19","_templateObject21","_templateObject20","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject28","_templateObject27","_templateObject29","_templateObject30","_templateObject31","_templateObject33","_templateObject32","_templateObject34","_templateObject35","_templateObject36","_templateObject38","_templateObject37","_templateObject40","_templateObject39","_templateObject41","_templateObject43","_templateObject42","_templateObject44","_templateObject45","_templateObject46","_templateObject47","_templateObject49","_templateObject48","_templateObject50","_templateObject51","_templateObject53","_templateObject52","_templateObject55","_templateObject54","_templateObject56","_templateObject57","_templateObject59","_templateObject58","_templateObject60","_templateObject61","_templateObject62","_templateObject63","_templateObject64","_templateObject65","_DataUtil","DB_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","hashedSeq","hashids","decryptioned","decode","fetch","mode","headers","Accept","body","createSendMailRequestInit","queryType","databaseName","createQueryRequestInit","saveFile","findUserInfoFromSeq","findUserScoreList","_callee10","_yield$window$showOpe","_yield$window$showOpe2","file","fileContents","scenarioProps","_context10","showOpenFilePicker","getFile","hasOwnProperty","saveFileBak","_callee11","_context11","_callee12","_context12","saveScenarioFile","extension","options","_callee13","_context13","_callee14","_context14","original","sha256","val","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str"],"mappings":"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","file":"static/js/main.57f3c03a.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 38;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_LABEL_LARGE = css`\r\n    ${CSS_LABEL}\r\n    height: 50px;\r\n    font-size: ${FONT_LARGE}px;\r\n    line-height: 44px;\r\n`;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import React, { useEffect } from 'react';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nconst App = () => {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport DataUtil from './system/utils/dataUtil';\r\nimport SystemConst from './system/utils/systemConst';\r\n\r\nwindow.addEventListener('load', function () {\r\n  if ('serviceWorker' in navigator) {\r\n    // navigator.serviceWorker.register(`/pf_apps/${SystemConst.APP_VERSION}/serviceWorker.js`)\r\n    navigator.serviceWorker.register(`/serviceWorker.js`)\r\n      .then(function (registration) {\r\n        console.log(\"serviceWorker registed.\");\r\n      }).catch(function (error) {\r\n        console.warn(\"serviceWorker error.\", error);\r\n      });\r\n  }\r\n});\r\n\r\n/* ピッチインピッチアウトによる拡大縮小を禁止 */\r\ndocument.documentElement.addEventListener('touchstart', function (e) {\r\n  if (e.touches.length >= 2) { e.preventDefault(); }\r\n}, { passive: false });\r\n/* ダブルタップによる拡大を禁止 */\r\nvar t = 0;\r\ndocument.documentElement.addEventListener('touchend', function (e) {\r\n  var now = new Date().getTime();\r\n  if ((now - t) < 350) {\r\n    e.preventDefault();\r\n  }\r\n  t = now;\r\n}, false);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreEditing from \"./storeEditing\";\r\nimport StoreLocalStorage from \"./storeLocalStrage\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    env: StoreSystem.Env;\r\n    libraryData: LogicUtil.WrapElement | null;\r\n    storyData: StoryUtil.StoryData | null;\r\n    fuseCacheList: StoryUtil.Cache[];\r\n    local: StoreLocalStorage.Param;\r\n    editing: StoreEditing.Props;\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null;\r\n}\r\n\r\nexport const ProjectTypes = ['library', 'story'] as const;\r\nexport type ProjectType = typeof ProjectTypes[number];\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: true,\r\n        user: null,\r\n        dialog: null,\r\n        isSync: false,\r\n        canDialogClose: false,\r\n        isSPMode: false,\r\n        logoutActions: [],\r\n        channelIndex: 1\r\n    },\r\n    cloud: null,\r\n    env: {\r\n        screenRate: 1,\r\n        scrollLock: false,\r\n    },\r\n    libraryData: null,\r\n    storyData: null,\r\n    fuseCacheList: [],\r\n    local: {\r\n        maxSeq: 0,\r\n        projects: [],\r\n        putInterval: 0,\r\n        isDispPreset: true\r\n    },\r\n    editing: {\r\n        localSeq: -1,\r\n        libName: ''\r\n    },\r\n    fileHandle: null,\r\n}","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            if (!store.system.canDialogClose) return;\r\n            store.system.dialog = null;\r\n            store.system.canDialogClose = false;\r\n            setStore({ ...store });\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n\r\n    // export const IS_SP = false;\r\n    export const IS_SP = true;\r\n    export const APP_VERSION = 'v1.10.3';\r\n    // export const APP_TEST_SERVER_DOMAIN = 'http://localhost:4333/pf_apps/' + APP_VERSION;\r\n    // export const APP_PRODUCT_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pf_apps/' + APP_VERSION;\r\n    export const APP_PRODUCT_SERVER_DOMAIN = 'https://create-app.pixelflare.tech/';\r\n    // export const APP_SERVER_DOMAIN = 'https://develop-app.pixelflare.tech/';\r\n    export const APP_SERVER_DOMAIN = APP_PRODUCT_SERVER_DOMAIN;\r\n\r\n    export const EDGE_PREFIX = 'microsoft-edge:';\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(360, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#c6dce2';\r\n            ctx.fillText('Pixel ', 14, 64);\r\n            const adjust = ctx.measureText('Pixel ').width;\r\n            ctx.fillStyle = '#768fc4';\r\n            ctx.fillText('Flare', 14 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    export const checkArrayNumber = (value: string) => value.split(',').find(v => isNaN(Number(v))) == undefined;\r\n}\r\nexport default ValidateUtil;\r\n","import LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport DataUtil from \"./dataUtil\";\r\n\r\nnamespace LocalStorageUtil {\r\n    export const DEFAULT_FILE_NAME_PREFIX = 'project_';\r\n\r\n    export const KEY_LOGIN_HASH = 'login-hash';\r\n    // export const KEY_SCENARIO_NAMES = 'scenario-names';\r\n    export const KEY_SCENARIO_SEQ = 'scenario-seq';\r\n    export const KEY_SCENARIO_PREFIX = 'scenario-data-';\r\n    export const KEY_DISP_PRESET = 'display-put-preset';\r\n    export const KEY_PROP_PUT_INTERVAL = 'prop-put-interval';\r\n\r\n    export const load = (store: Store, update: () => void) => {\r\n\r\n        // ログイン\r\n        if (store.system.user == null) {\r\n            const userHash = localStorage.getItem(KEY_LOGIN_HASH);\r\n            if (userHash != null) {\r\n                const userSeq = DataUtil.getDecryptionedUserSeq(userHash);\r\n                if (userSeq !== -1) {\r\n                    (async () => {\r\n                        const results = await DataUtil.findUserInfoSeq(userSeq);\r\n                        if (results.length > 0) {\r\n                            store.system.user = {\r\n                                seq: results[0].seq,\r\n                                id: results[0].id,\r\n                                password: results[0].password,\r\n                                email: results[0].email,\r\n                            };\r\n\r\n                            // developの場合、クラウドのライブラリを読み込む\r\n                            if (!store.system.isSPMode) {\r\n                                const resPrjList = await DataUtil.findUserLibdvList(results[0].seq);\r\n                                store.cloud = {\r\n                                    projects: resPrjList.map(res => ({\r\n                                        source: res.source,\r\n                                        name: res.name,\r\n                                        seq: res.seq,\r\n                                        lastmod: res.lastmod\r\n                                    }))\r\n                                };\r\n                            }\r\n                            // update();\r\n                        }\r\n                    })();\r\n                } else {\r\n                    localStorage.removeItem(KEY_LOGIN_HASH);\r\n                }\r\n            }\r\n        }\r\n\r\n        // シナリオファイルのロード\r\n        const scenarioSeq = localStorage.getItem(KEY_SCENARIO_SEQ);\r\n        if (scenarioSeq == null) {\r\n            localStorage.setItem(KEY_SCENARIO_SEQ, '0');\r\n        } else {\r\n            const seq = Number(scenarioSeq);\r\n            store.local.maxSeq = seq;\r\n            for (let i = 0; i <= seq; i++) {\r\n                const source = localStorage.getItem(KEY_SCENARIO_PREFIX + i.toString());\r\n                if (source != null) {\r\n                    store.local.projects.push(JSON.parse(source));\r\n                }\r\n            }\r\n        }\r\n\r\n        // シード配置のインターバル初期値\r\n        let putInterval = localStorage.getItem(KEY_PROP_PUT_INTERVAL);\r\n        if(putInterval == null) {\r\n            putInterval = '50';\r\n            localStorage.setItem(KEY_PROP_PUT_INTERVAL, putInterval);\r\n        }\r\n        console.log(putInterval);\r\n        store.local.putInterval = Number(putInterval);\r\n\r\n        // プリセットフォームの表示有無\r\n        let isDispPreset = localStorage.getItem(KEY_DISP_PRESET);\r\n        if(isDispPreset == null) {\r\n            isDispPreset = '1';\r\n            localStorage.setItem(KEY_DISP_PRESET, isDispPreset);\r\n        }\r\n        store.local.isDispPreset = isDispPreset === '0';\r\n    }\r\n}\r\n\r\nexport default LocalStorageUtil;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: (index: number)=>void;\r\n    tabRecordNum?: number;\r\n}\r\n\r\nexport type TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    /* box-shadow: 0 2px 0 0 #000b3a48; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\nimport SystemConst from \"../../../utils/systemConst\";\r\nimport LocalStorageUtil from \"../../../utils/localStorageUtil\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            if (results.length > 0) {\r\n                localStorage.setItem(LocalStorageUtil.KEY_LOGIN_HASH, DataUtil.getHashedFromUserSeq(results[0].seq));\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await DataUtil.findUserLibdvList(results[0].seq);\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        type: res.type,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport SystemConst, { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport LocalStorageUtil from \"../../utils/localStorageUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.canDialogClose = true;\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            localStorage.removeItem(LocalStorageUtil.KEY_LOGIN_HASH);\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            store.system.logoutActions.forEach(func => func());\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Logo src={logo} onClick={() => window.location.replace(SystemConst.APP_SERVER_DOMAIN)} />\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                {/* <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language> */}\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #a6bdc7, #7895b1, #a6bdc7);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    border: 1px solid #7e7e7e;\r\n    box-sizing: border-box;\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n    /** 横向き */\r\n    isLandscape?: boolean;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const isLandscape = props.isLandscape ?? true;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isLandscape ? css`\r\n        width: 100px;\r\n        height: 100%;\r\n    ` : css`\r\n        width: 100%;\r\n        height: 100px;\r\n    `}\r\n    margin-right: 5px;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    ${props => props.isLandscape ? css`\r\n        width: calc(100% - 105px);\r\n        height: 100%;\r\n    ` : css`\r\n        height: calc(100% - 100px);\r\n        width: 100%;\r\n    `}\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid #8d9aaa7b;\r\n    box-sizing: border-box;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #d5dddf;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #cacecf;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if (param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if ((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            // ctx.fillStyle = param.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r1 = (Math.floor(rgba.r));\r\n        const g1 = (Math.floor(rgba.g));\r\n        const b1 = (Math.floor(rgba.b));\r\n        const a1 = (Math.floor(rgba.a));\r\n        const r = ('00' + r1.toString(16)).slice(-2);\r\n        const g = ('00' + g1.toString(16)).slice(-2);\r\n        const b = ('00' + b1.toString(16)).slice(-2);\r\n        const a = ('00' + a1.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export type ArrayMap = {\r\n        name: string;\r\n        array: number[];\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        initialValueMapList: ValueMap[],\r\n        initailArrayMapList: ArrayMap[]\r\n    ): Particle.Props => {\r\nconsole.log(initailArrayMapList);\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param parentValueMapList 親要素から送られてきたValueMap\r\n         * @param parentArrayMapList 親要素から送られてきたArrayMap\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, parentValueMapList: ValueMap[], parentArrayMapList: ArrayMap[]): Particle.Props => {\r\n            const valueMapList: ValueMap[] = parentValueMapList.concat(ConstantValueMap);\r\n\r\n            // 配列Mapのプロパティ変数を生成\r\n            parentArrayMapList.forEach(arr => {\r\n                valueMapList.push({ name: arr.name + '.len', value: arr.array.length });\r\n            });\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                // 配列Mapのイテレータ変数を追加\r\n                                const iterateArrayMap: ValueMap[] = parentArrayMapList.map(arr => {\r\n                                    return { name: arr.name + '.itr', value: arr.array[i] ?? 0 };\r\n                                });\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params\r\n                                    .filter(item => !item.isArray)\r\n                                    .map(item => {\r\n                                        return {\r\n                                            name: item.name, value: convertParamsToValue(item.name, params, valueMapList\r\n                                                .concat(itrfldValueMap)\r\n                                                .concat(iterateValueMap)\r\n                                                .concat(iterateArrayMap)\r\n                                            ) ?? 0\r\n                                        };\r\n                                    });\r\n                                const sendArrayMapList: ArrayMap[] = params\r\n                                    .filter(item => item.isArray)\r\n                                    .map(item => {\r\n                                        return { name: item.name, array: convertParamsToArray(item.name, params, parentArrayMapList) ?? [] }\r\n                                    });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList,\r\n                                    sendArrayMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, initialValueMapList, initailArrayMapList);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param arrayMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToArray = (name: string, params: LogicUtil.NodeParamItem[], arrayMapList: ArrayMap[]): number[] | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        const item = formula.values[0];\r\n        if (item.type === 'array') {\r\n            return item.value.split(',').map(v => Number(v));\r\n        } else if (item.type === 'argument') {\r\n            const map = arrayMapList.find(array => array.name === item.value);\r\n            return map == undefined ? [] : map.array;\r\n        }\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n}\r\n\r\nexport default PreviewUtil;","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value, argType.value as LogicUtil.ArgumentType);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        // ロジックを全て調査する\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        const root = (rootNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n        const defs = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        console.log(defs.length);\r\n        defs.forEach(wrap => {\r\n            const interfaceWrap = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng');\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(interfaceWrap, 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            syncParamName(sendMng.params);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        rootNode.children[0].children.forEach(seedNode => {\r\n            const interfaceNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'interface-mng');\r\n            const sendNode = LogicElementUtil.getInnerNodeFixed(interfaceNode, 'seedsend-mng');\r\n            const seed = (seedNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n            if (seed.entry === logicItem.name) {\r\n                callback(sendNode);\r\n            }\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string, type: LogicUtil.ArgumentType) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const isArray = type === 'array';\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            {\r\n                name: newArgName,\r\n                formulaItems: ['var'],\r\n                values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                isArray: isArray ? true : undefined\r\n            }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {LogicElementUtil.getReplicateButton(node, !isModify, 'logic', store, setStore, invalidate)}\r\n                    {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isModify,\r\n                                // isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Replicate this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                                    const name = wrap.data[namable] as string;\r\n                                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    // mappingForm();\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    /> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND,\r\n    SEED = -1,\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        console.log('mapping');\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return Level.SEED;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, arrayArgList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        let arrayArgList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'number';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'array';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return !data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, arrayArgList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else if (type === 'array') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    const isArray = (wrap.data as LogicUtil.NodeParamItem).isArray;\r\n                    let list: string[] = [];\r\n                    switch (type) {\r\n                        case 'argument': {\r\n                            list = !isArray ? argumentList : arrayArgList;\r\n                        } break;\r\n                        case 'field': {\r\n                            list = fieldKeyList;\r\n                        } break;\r\n                        case 'self': {\r\n                            list = ParamUtil.SelfParams;\r\n                        } break;\r\n                        case 'constant': {\r\n                            list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                        } break;\r\n                        case 'array.itr': {\r\n                            list = arrayArgList.map(name => name + '.itr');\r\n                        } break;\r\n                        case 'array.len': {\r\n                            list = arrayArgList.map(name => name + '.len');\r\n                        } break;\r\n                    }\r\n                    // if (type === 'argument') {\r\n                    //     list = argumentList;\r\n                    // } else if (type === 'field') {\r\n                    //     list = fieldKeyList;\r\n                    // } else if (type === 'self') {\r\n                    //     list = ParamUtil.SelfParams;\r\n                    // } else if (type === 'constant') {\r\n                    //     list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    // }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            const param = wrap.data as LogicUtil.NodeParamItem;\r\n                            const isArray = param == undefined ? false : param.isArray ?? false;\r\n                            if (!isArray) {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'argument': return true;\r\n                                    case 'field': return level >= Level.INITIAL;\r\n                                    case 'array.len':\r\n                                    case 'self': return level >= Level.INHERIT_FIELD;\r\n                                    case 'array.itr': return level >= Level.INHERIT_SEND;\r\n                                    case 'array': return false;\r\n                                }\r\n                            } else {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'self':\r\n                                    case 'field': return false;\r\n                                    case 'array':\r\n                                    case 'argument': return true;\r\n                                }\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        const isArray = param == undefined ? false : param.isArray ?? false;\r\n        return {\r\n            label, width, isEnable: isArray ? false : isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'field', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnabled={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'inherit', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled, { css } from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\n\r\nconst FRAME_WIDTH = 402;\r\nnamespace DrawableVectorChooser {\r\n\r\n    export const ComponentNormal = (props: {\r\n        addPoint: (x: number, y: number) => void;\r\n        clear: () => void;\r\n        xList: number[];\r\n        yList: number[];\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const screenRate = store.env.screenRate;\r\n\r\n        const [isDraw, setDraw] = useState(false);\r\n        const ref = useRef<HTMLDivElement>(null);\r\n\r\n        const pointJsxList = useMemo(() => {\r\n            return props.xList.map((x, i) => {\r\n\r\n                const y = props.yList[i];\r\n                return (\r\n                    <_Point key={i}\r\n                        x={x}\r\n                        y={y}\r\n                    />\r\n                );\r\n            });\r\n        }, [props.xList.length]);\r\n\r\n\r\n        const putAction = (x: number, y: number) => {\r\n            setDraw(true);\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n            store.env.scrollLock = true;\r\n            setStore({ ...store });\r\n        }\r\n\r\n        const moveAction = (x: number, y: number) => {\r\n            if (!isDraw) return;\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            const subX = posX - (props.xList[props.xList.length - 1] + FRAME_WIDTH / 2);\r\n            const subY = posY - (props.yList[props.yList.length - 1] + FRAME_WIDTH / 2);\r\n            const distance = Math.sqrt(subX * subX + subY * subY);\r\n            if (distance > 10) props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n        }\r\n\r\n        const releaseAction = () => {\r\n            setDraw(false);\r\n            store.env.scrollLock = false;\r\n            setStore({ ...store });\r\n        }\r\n\r\n        return (<>\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Point\"\r\n                jsx={\r\n                    <FormUtil.FixedText\r\n                        value={props.xList.length.toString()}\r\n                        isRecordItem\r\n                    />\r\n                }\r\n            />\r\n            <_Frame\r\n                ref={ref}\r\n                onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n                onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n                onMouseUp={releaseAction}\r\n                onMouseLeave={releaseAction}\r\n                onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchEnd={releaseAction}\r\n                onTouchCancel={releaseAction}\r\n                isDraw={store.env.scrollLock}\r\n            >\r\n                <_Center />\r\n                {pointJsxList}\r\n            </_Frame>\r\n            <FormUtil.ButtonRecord buttons={[\r\n                {\r\n                    label: 'Clear',\r\n                    isEnable: props.xList.length > 0,\r\n                    callback: props.clear,\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n\r\n    export const ComponentColorable = (props: {\r\n        addPoint: (x: number, y: number, r: number, g: number, b: number) => void;\r\n        clear: () => void;\r\n        xList: number[];\r\n        yList: number[];\r\n        rList: number[];\r\n        gList: number[];\r\n        bList: number[];\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const screenRate = store.env.screenRate;\r\n\r\n        const [isDraw, setDraw] = useState(false);\r\n        const [colorHistory, setColorHistory] = useState<string[]>([]);\r\n\r\n        const [r, setR] = useState(255);\r\n        const [g, setG] = useState(255);\r\n        const [b, setB] = useState(255);\r\n\r\n        const ref = useRef<HTMLDivElement>(null);\r\n\r\n        const pointJsxList = useMemo(() => {\r\n            return props.xList.map((x, i) => {\r\n                const y = props.yList[i];\r\n                const r = props.rList[i];\r\n                const g = props.gList[i];\r\n                const b = props.bList[i];\r\n                const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                    r: Number(r),\r\n                    g: Number(g),\r\n                    b: Number(b),\r\n                    a: 255\r\n                }).substring(0, 7);\r\n                return (\r\n                    <_PointColorable key={i}\r\n                        x={x}\r\n                        y={y}\r\n                        color={colorCode}\r\n                    />\r\n                );\r\n            });\r\n        }, [props.xList.length]);\r\n\r\n\r\n        const colorHistoryJsxList = useMemo(() => {\r\n            return colorHistory.map((history, i) => {\r\n                return (\r\n                    <_ColorItem key={i}\r\n                        color={history}\r\n                        onClick={()=> {\r\n                            const rgba = DrawUtil.convertRgbaFromColorCode(history + 'ff');\r\n                            if (rgba != null) {\r\n                                setR(rgba.r);\r\n                                setG(rgba.g);\r\n                                setB(rgba.b);\r\n                            }\r\n                        }}\r\n                    />\r\n                );\r\n            });\r\n        }, [colorHistory]);\r\n\r\n        const addColorHistory = () => {\r\n            const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                r: Number(r),\r\n                g: Number(g),\r\n                b: Number(b),\r\n                a: 255\r\n            }).substring(0, 7);\r\n            if (colorHistory.find(ch => ch === colorCode) == undefined) {\r\n                colorHistory.push(colorCode);\r\n                if(colorHistory.length > 15) colorHistory.shift();\r\n                setColorHistory(colorHistory.slice());\r\n            }\r\n        };\r\n\r\n        const putAction = (x: number, y: number) => {\r\n            setDraw(true);\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2, r, g, b);\r\n            store.env.scrollLock = true;\r\n            setStore({ ...store });\r\n            addColorHistory();\r\n        }\r\n\r\n        const moveAction = (x: number, y: number) => {\r\n            if (!isDraw) return;\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            const subX = posX - (props.xList[props.xList.length - 1] + FRAME_WIDTH / 2);\r\n            const subY = posY - (props.yList[props.yList.length - 1] + FRAME_WIDTH / 2);\r\n            const distance = Math.sqrt(subX * subX + subY * subY);\r\n            if (distance > 10) props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2, r, g, b);\r\n        }\r\n\r\n        const releaseAction = () => {\r\n            setDraw(false);\r\n            store.env.scrollLock = false;\r\n            setStore({ ...store });\r\n        }\r\n\r\n        const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n            r: Number(r),\r\n            g: Number(g),\r\n            b: Number(b),\r\n            a: 255\r\n        }).substring(0, 7);\r\n        return (<>\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Point\"\r\n                jsx={\r\n                    <FormUtil.FixedText\r\n                        value={props.xList.length.toString()}\r\n                        isRecordItem\r\n                    />\r\n                }\r\n            />\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Color\"\r\n                jsx={\r\n                    <_Color type=\"color\" value={colorCode}\r\n                        // disabled={isReadOnly}\r\n                        onChange={(value) => {\r\n                            const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                            if (rgba != null) {\r\n                                setR(rgba.r);\r\n                                setG(rgba.g);\r\n                                setB(rgba.b);\r\n                            }\r\n                        }}\r\n                    />\r\n                }\r\n            />\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"History\"\r\n                jsx={<>{colorHistoryJsxList}</>}\r\n            />\r\n            <_Frame\r\n                ref={ref}\r\n                onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n                onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n                onMouseUp={releaseAction}\r\n                onMouseLeave={releaseAction}\r\n                onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchEnd={releaseAction}\r\n                onTouchCancel={releaseAction}\r\n                isDraw={store.env.scrollLock}\r\n            >\r\n                <_Center />\r\n                {pointJsxList}\r\n            </_Frame>\r\n            <FormUtil.ButtonRecord buttons={[\r\n                {\r\n                    label: 'Clear',\r\n                    isEnable: props.xList.length > 0,\r\n                    callback: () => {\r\n                        props.clear();\r\n                        setColorHistory([]);\r\n                    },\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default DrawableVectorChooser;\r\n\r\nconst _Frame = styled.div<{\r\n    isDraw: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${FRAME_WIDTH}px;\r\n    height: ${FRAME_WIDTH}px;\r\n    margin: 0 0 0 3px;\r\n    background-color: #2e7085;\r\n    ${props => !props.isDraw ? '' : css`\r\n        background-color: #5c9caf;\r\n    `}\r\n    border: 2px solid #800;\r\n    box-sizing: border-box;\r\n    touch-action: none;\r\n`;\r\n\r\nconst _Point = styled.div<{\r\n    x: number;\r\n    y: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x + FRAME_WIDTH / 2 - 5}px;\r\n    top: ${props => props.y + FRAME_WIDTH / 2 - 5}px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 10px;\r\n    background-color: #fcfeff9d;\r\n    border: 1px solid #dfe5ff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _PointColorable = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x + FRAME_WIDTH / 2 - 5}px;\r\n    top: ${props => props.y + FRAME_WIDTH / 2 - 5}px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 10px;\r\n    background-color: ${props => props.color};\r\n    border: 1px solid #dfe5ff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ColorItem = styled.div<{\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    border-radius: 4px;\r\n    background-color: ${props => props.color};\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    margin: 6px 0 0 3px;\r\n    width: 15px;\r\n    height: 28px;\r\n`;\r\n\r\nconst _Center = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${FRAME_WIDTH / 2 - 10}px;\r\n    top: ${FRAME_WIDTH / 2 - 10}px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 20px;\r\n    background-color: #800;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): LogicUtil.NodeArgumentItem[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return arg.data as LogicUtil.NodeArgumentItem;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param.name)) {\r\n                const isArray = param.valueType === 'array';\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    {\r\n                        name: param.name,\r\n                        formulaItems: ['var'],\r\n                        values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                        isArray: isArray ? true : undefined\r\n                    }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={200}\r\n                            // 更新時は編集できない\r\n                            isReadOnly={!isModify || wrap.data != null}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'seed', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            // isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(!item.isArray) {\r\n                const name = item.name;\r\n                const value = Number(samples[sampleNo].values[i]);\r\n                argMap.push( { name, value });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => !item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n    const getSeedArrayMap = (sampleNo: number): PreviewUtil.ArrayMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ArrayMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(item.isArray) {\r\n                const name = item.name;\r\n                const array = samples[sampleNo].values[i].split(',').map(v => Number(v));\r\n                argMap.push( { name, array });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, array: PreviewUtil.convertParamsToArray(item.name, sendParams, argMap) ?? [] }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                const sendArrayMapList = getSeedArrayMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList, sendArrayMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport DrawableVectorChooser from \"./drawableVectorChooser\";\r\n\r\nnamespace LogicFormUtil {\r\n\r\n    export const buildPreviewForms = (\r\n        isReadOnly: boolean,\r\n        argumentList: LogicUtil.NodeSeedArgItem[],\r\n        formgrpList: LogicUtil.NodeFromGrpItem[],\r\n        formList: FormUtil.CheckableValue[],\r\n        setFormList: ((formList: FormUtil.CheckableValue[]) => void)\r\n    ): JSX.Element[] => {\r\n        /** 入力フォームのJSX */\r\n        const formJsxList: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n\r\n            // フォームグループが設定されている場合、独自の入力UIを表示する\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                switch (formgrp.method) {\r\n                    case 'color': {\r\n                        const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                            r: Number(formList[targetForms[0]].value),\r\n                            g: Number(formList[targetForms[1]].value),\r\n                            b: Number(formList[targetForms[2]].value),\r\n                            a: 255\r\n                        }).substring(0, 7);\r\n                        // console.log(colorCode);\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <FormUtil.Record\r\n                                jsx={<>\r\n                                    {targetForms.map((formIndex, j) => {\r\n                                        return (\r\n                                            <FormUtil.TextField\r\n                                                key={formIndex}\r\n                                                width={72}\r\n                                                marginLeft={j === 0 ? 5 : 4}\r\n                                                isNumber\r\n                                                isReadOnly={isReadOnly}\r\n                                                checkable={formList[formIndex]}\r\n                                                setCheckable={() => {\r\n                                                    setFormList(formList.slice());\r\n                                                }}\r\n                                                validates={[\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                        errorType: \"required\"\r\n                                                    },\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min as number, argument.max as number),\r\n                                                        errorType: 'value'\r\n                                                    }\r\n                                                ]}\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                    <_Color type=\"color\" value={colorCode}\r\n                                        disabled={isReadOnly}\r\n                                        onChange={(value) => {\r\n                                            const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                            if (rgba != null) {\r\n                                                formList[targetForms[0]].value = rgba.r.toString();\r\n                                                formList[targetForms[1]].value = rgba.g.toString();\r\n                                                formList[targetForms[2]].value = rgba.b.toString();\r\n                                            }\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                    />\r\n                                </>}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                    case 'draw': {\r\n                        const xValue = formList[targetForms[0]].value;\r\n                        const yValue = formList[targetForms[1]].value;\r\n                        const xList = (xValue === '' ? [] : xValue.split(',').map(v => Number(v)));\r\n                        const yList = (xValue === '' ? [] : yValue.split(',').map(v => Number(v)));\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>point </_Type><_Range>(～ {255} drawing)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <DrawableVectorChooser.ComponentNormal\r\n                                addPoint={(x, y) => {\r\n                                    xList.push(x);\r\n                                    yList.push(y);\r\n                                    formList[targetForms[0]].value = xList.join(',');\r\n                                    formList[targetForms[1]].value = yList.join(',');\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                clear={() => {\r\n                                    formList[targetForms[0]].value = '';\r\n                                    formList[targetForms[1]].value = '';\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                xList={xList}\r\n                                yList={yList}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                    case 'draw-colorable': {\r\n                        const xValue = formList[targetForms[0]].value;\r\n                        const yValue = formList[targetForms[1]].value;\r\n                        const rValue = formList[targetForms[2]].value;\r\n                        const gValue = formList[targetForms[3]].value;\r\n                        const bValue = formList[targetForms[4]].value;\r\n                        const xList = (xValue === '' ? [] : xValue.split(',').map(v => Number(v)));\r\n                        const yList = (xValue === '' ? [] : yValue.split(',').map(v => Number(v)));\r\n                        const rList = (rValue === '' ? [] : rValue.split(',').map(v => Number(v)));\r\n                        const gList = (gValue === '' ? [] : gValue.split(',').map(v => Number(v)));\r\n                        const bList = (bValue === '' ? [] : bValue.split(',').map(v => Number(v)));\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>point </_Type><_Range>(～ {255} drawing)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <DrawableVectorChooser.ComponentColorable\r\n                                addPoint={(x, y, r, g, b) => {\r\n                                    xList.push(x);\r\n                                    yList.push(y);\r\n                                    rList.push(r);\r\n                                    gList.push(g);\r\n                                    bList.push(b);\r\n                                    formList[targetForms[0]].value = xList.join(',');\r\n                                    formList[targetForms[1]].value = yList.join(',');\r\n                                    formList[targetForms[2]].value = rList.join(',');\r\n                                    formList[targetForms[3]].value = gList.join(',');\r\n                                    formList[targetForms[4]].value = bList.join(',');\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                clear={() => {\r\n                                    formList[targetForms[0]].value = '';\r\n                                    formList[targetForms[1]].value = '';\r\n                                    formList[targetForms[2]].value = '';\r\n                                    formList[targetForms[3]].value = '';\r\n                                    formList[targetForms[4]].value = '';\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                xList={xList}\r\n                                yList={yList}\r\n                                rList={rList}\r\n                                gList={gList}\r\n                                bList={bList}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                }\r\n            } else {\r\n                let labelName = argument.name;\r\n                if (argument.disp != undefined) labelName = argument.disp;\r\n                formJsxList.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{labelName}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={142}\r\n                                marginLeft={6}\r\n                                isNumber\r\n                                isReadOnly={isReadOnly}\r\n                                step={argument.step}\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min as number, argument.max as number),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max} step={argument.step}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return formJsxList;\r\n    }\r\n}\r\n\r\nexport default LogicFormUtil;\r\n\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    overflow: hidden;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 6px;\r\n    width: calc(100% - 160px);\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'array'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'array', 'constant', 'argument', 'self', 'field', 'array.len', 'array.itr'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'draw', 'draw-colorable'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n        isArray?: boolean;\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: string[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        disp?: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        disp?: string;\r\n        isArray?: boolean;\r\n        min?: number;\r\n        max?: number;\r\n        step?: number;\r\n        defval?: string;\r\n        isPosX?: boolean;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let detailJsx = <>...</>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedItem;\r\n                    detailJsx = <span>{data.name}&nbsp;<_Span color=\"#ffe89ba6\">entry:&nbsp;</_Span><_Field>{data.entry}</_Field></span>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n\r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'seedsend-item':\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'send-item':\r\n            case 'seedsend-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../util/logicFormUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const [seedargList, formgrpList]: [LogicUtil.NodeSeedArgItem[], LogicUtil.NodeFromGrpItem[]] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        const argInfoList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n            args.map(arg => {\r\n                return arg.data as LogicUtil.NodeSeedArgItem;\r\n            });\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        const formgrpMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'formgrp-mng');\r\n        if (formgrpMng != null) {\r\n            formgrpList = (formgrpMng.data as LogicUtil.NodeFromgrpManager).\r\n                defines.map(arg => {\r\n                    return arg.data as LogicUtil.NodeFromGrpItem;\r\n                });\r\n        }\r\n        return [argInfoList, formgrpList];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(seedargList.map(arg => {\r\n                let defval = '';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return LogicFormUtil.buildPreviewForms(\r\n            !isModify, seedargList, formgrpList, paramForms, setParamForms\r\n        );\r\n        // return paramForms.map((paramForm, i) => {\r\n        //     const arg = argInfoList[i];\r\n        //     return <FormUtil.FormRecord key={i}\r\n        //         titleLabel={arg.name}\r\n        //         jsx={\r\n        //             <FormUtil.TextField\r\n        //                 width={150}\r\n        //                 isReadOnly={!isModify}\r\n        //                 checkable={paramForm}\r\n        //                 setCheckable={(checkable) => {\r\n        //                     paramForms[i] = checkable;\r\n        //                     setParamForms(paramForms.slice());\r\n        //                 }}\r\n        //                 isNumber\r\n        //                 step={arg.step}\r\n        //                 validates={[\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkRequired(value),\r\n        //                         errorType: \"required\"\r\n        //                     },\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n        //                         errorType: \"value\"\r\n        //                     },\r\n        //                 ]}\r\n        //             />\r\n        //         }\r\n        //     />\r\n        // });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = form.value;\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = form.value;\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 22),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'preset', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: ''\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isPosX, setPosX] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isArray, setArray] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setMin({ ...min, value: (param.min != undefined) ? param.min.toString() : '' });\r\n        setMax({ ...max, value: (param.max != undefined) ? param.max.toString() : '' });\r\n        setStep({ ...step, value: (param.step != undefined) ? param.step.toString() : '' });\r\n        setDefval({ ...defval, value: (param.defval != undefined) ? param.defval.toString() : ''});\r\n        setPosX({ ...isPosX, value: (param.isPosX ?? false) ? '1' : '' });\r\n        setArray({ ...isArray, value: (param.isArray ?? false) ? '1' : '' });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : defval.value,\r\n                    isPosX: isPosX.value === '' ? undefined : true,\r\n                    isArray: isArray.value === '' ? undefined : true,\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.min = Number(min.value === '' ? '0' : min.value);\r\n                param.max = Number(max.value === '' ? '0' : max.value);\r\n                param.step = Number(step.value === '' ? '0' : step.value);\r\n                param.defval = defval.value === '' ? undefined : defval.value;\r\n                param.isPosX = isPosX.value === '' ? undefined : true;\r\n                param.isArray = isArray.value === '' ? undefined : true;\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 16),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Array\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isArray}\r\n                            setCheckable={(checkable) => {\r\n                                setArray(checkable);\r\n                                setMin({ ...min, value: '' });\r\n                                setMax({ ...max, value: '' });\r\n                                setStep({ ...step, value: '' });\r\n                                setDefval({ ...defval, value: '' });\r\n                                setPosX({ ...isPosX, value: '' });\r\n                            }}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                        // dependency={[min, max, step, defval, isPosX]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[max, isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[min, isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[isArray]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Position\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isPosX}\r\n                            setCheckable={setPosX}\r\n                            isEnabled={isArray.value === ''}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                            dependency={[isArray]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'argument', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push((arg.defval ?? 0).toString());\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem));\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else if (type === 'draw') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(2).fill({ value: '', errors: [] }));\r\n                                } else if (type === 'draw-colorable') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(5).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({ ...checkable });\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    const method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                    if (method === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else if (method === 'draw') {\r\n                        switch (i) {\r\n                            case 0: formName += 'X'; break;\r\n                            case 1: formName += 'Y'; break;\r\n                        }\r\n                    } else if (method === 'draw-colorable') {\r\n                        switch (i) {\r\n                            case 0: formName += 'X'; break;\r\n                            case 1: formName += 'Y'; break;\r\n                            case 2: formName += 'R'; break;\r\n                            case 3: formName += 'G'; break;\r\n                            case 4: formName += 'B'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs\r\n                                        .filter(item => groupMethod.value === 'color' ? !item.isArray : item.isArray)\r\n                                        .map(item => {\r\n                                            return { value: item.name, labelText: item.name }\r\n                                        })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import { assert } from \"console\";\r\nimport { Store } from \"../../../../redux/store/store\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../../launcher/util/storyUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    /**\r\n     * 同レベル階層に自身ノードの複製を作成する\r\n     * @param node コピー対象のノード\r\n     * @param newName コピー後の名称\r\n     */\r\n    export const replicateSameLevel = (node: TreeUtil.ElementNode, newName: string) => {\r\n        if (node.parent == null) return;\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const cloneBase = wrap.data;\r\n        const cloneDest = JSON.parse(JSON.stringify((cloneBase)));\r\n\r\n        const newWrap: LogicUtil.WrapElement = {\r\n            type: wrap.type,\r\n            data: cloneDest\r\n        };\r\n        const namable = getNamableProps(wrap.type);\r\n        newWrap.data[namable] = newName;\r\n\r\n        // ロジックマネージャに追加\r\n        const newNode = LogicElementUtil.addChild(newWrap, node.parent);\r\n        // 子要素の展開\r\n        newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n    }\r\n\r\n    export const getReplicateButton = (\r\n        node: TreeUtil.ElementNode,\r\n        isEnable: boolean,\r\n        targetElement: string, store: Store,\r\n        setStore: (store: Store) => void,\r\n        invalidate: () => void\r\n    ): JSX.Element => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        return <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[{\r\n                label: 'Replicate',\r\n                isEnable,\r\n                // isEnable: false,\r\n                callback: () => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={`Replicate this ${targetElement}.`}\r\n                        buttons={[\r\n                            {\r\n                                label: 'Cancel',\r\n                                callback: () => {\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter',\r\n                                callback: () => {\r\n                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                    const name = wrap.data[namable] as string;\r\n                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                    // mappingForm();\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }\r\n            }]}\r\n        />;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'seed-item':\r\n            case 'argument-item':\r\n            case 'seedarg-item':\r\n            case 'field-item':\r\n            case 'sample-item':\r\n            case 'thumbnail-item':\r\n            case 'logic-item': return 'name';\r\n        }\r\n        throw new Error('Namable props not found.');\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n\r\n    export const findSeedWrap = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const root = rootData.data as LogicUtil.NodeRoot;\r\n        const seed = (root.seedMng.data as LogicUtil.NodeSeedManager).defs.find(def => {\r\n            const seedItem = def.data as LogicUtil.NodeSeedItem;\r\n            return seedItem.name === seedId;\r\n        });\r\n        if (seed == undefined) throw new Error();\r\n        return seed;\r\n    }\r\n\r\n    export const doParticleJob = (rootData: LogicUtil.WrapElement, fuse: StoryUtil.Fuse, owner: Particle.Instance[]) => {\r\n        const seedWrap = findSeedWrap(rootData, fuse.seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        const getSendingValueMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const valueMapList: PreviewUtil.ValueMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (!seedarg.isArray) {\r\n                    valueMapList.push({ name: seedarg.name, value: Number(fuse.values[i]) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => !item.isArray)\r\n                .map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMapList);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value };\r\n                });\r\n        }\r\n\r\n        const getSendingArrayMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const arrayMapList: PreviewUtil.ArrayMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (seedarg.isArray) {\r\n                    arrayMapList.push({ name: seedarg.name, array: fuse.values[i].split(',').map(v => Number(v)) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => item.isArray)\r\n                .map(item => {\r\n                    const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMapList);\r\n                    if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, array: array };\r\n                });\r\n        }\r\n\r\n        owner.push(new Particle.Instance(\r\n            PreviewUtil.buildLogicProps(owner, getOrigin(), rootData, getSendingValueMap(), getSendingArrayMap())\r\n        ));\r\n    }\r\n\r\n    export type SeedProps = {\r\n        seed: LogicUtil.NodeSeedItem;\r\n        logic: LogicUtil.NodeLogicItem;\r\n        seedargList: LogicUtil.NodeSeedArgItem[];\r\n        seedsendList: LogicUtil.NodeParamItem[];\r\n        thumbnailList: LogicUtil.NodeThumbnailItem[];\r\n    }\r\n    export const getSeedProperties = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const seedWrap = findSeedWrap(rootData, seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        const seedargList = seedargMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n        const seedsendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n        const seedsendList = seedsendMng.params.map(wrap => wrap.data as LogicUtil.NodeParamItem);\r\n        const thumbnailMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'thumbnail-mng').data as LogicUtil.NodeThumnailManager;\r\n        const thumbnailList = thumbnailMng.items.map(wrap => wrap.data as LogicUtil.NodeThumbnailItem);\r\n\r\n        return {\r\n            seed, logic: getOrigin(), seedargList, seedsendList, thumbnailList\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","export namespace SPUtil {\r\n\r\n    export const SCREEN_WIDTH = 640;\r\n    export const SCREEN_HEIGHT = 960;\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: LogicUtil.NodeArgumentItem[] = useMemo(() => {\r\n        let list: LogicUtil.NodeArgumentItem[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: '', errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const isFormInputOK = formList.find(form => form.errors.length > 0) == undefined;\r\n        if (isFormInputOK) {\r\n            props.setSendingValueMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'number';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        return { name: argument.name, value: Number(form.value) } as PreviewUtil.ValueMap\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'array';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        const array = form.value.split(',').map(v => Number(v));\r\n                        return { name: argument.name, array } as PreviewUtil.ArrayMap\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n\r\n            const validates: ValidateUtil.Validate[] = [];\r\n            let isNumber = false;\r\n            if (argument.valueType === 'number') {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                    errorType: \"required\"\r\n                });\r\n                isNumber = true;\r\n            } else {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                    errorType: \"value\"\r\n                });\r\n            }\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument.name}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={312}\r\n                        isNumber={isNumber}\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={validates}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, seedargList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const seedargList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, seedargList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(seedargList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap: PreviewUtil.ValueMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (!seedarg.isArray) {\r\n                        valueMap.push({ name: seedarg.name, value: Number(form.value) });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return !item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                        if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, value };\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                const arrayMap: PreviewUtil.ArrayMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (seedarg.isArray) {\r\n                        const array = (form.value === '' ? [] : form.value.split(',').map(v => Number(v)));\r\n                        arrayMap.push({ name: seedarg.name, array });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMap);\r\n                        if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, array };\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {LogicFormUtil.buildPreviewForms(\r\n            false, seedargList, formgrpList, formList, setFormList\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { SPUtil } from \"../../../sp/spUtil\";\r\nimport { VscDebugStart } from \"react-icons/vsc\";\r\nimport { IoStopOutline } from \"react-icons/io5\";\r\nimport { RxReset } from \"react-icons/rx\";\r\nimport { AiFillStepBackward, AiFillStepForward } from \"react-icons/ai\";\r\n\r\nnamespace PreviewLauncherFrameSp {\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    interval={12}\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 60,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            icon: <AiFillStepBackward />,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 60,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            icon: <AiFillStepForward />,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            width: 100,\r\n                            icon: !isPlay ? <VscDebugStart /> : <IoStopOutline />,\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            width: 100,\r\n                            isEnable: !isPlay,\r\n                            icon: <RxReset />,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={SPUtil.SCREEN_WIDTH - 1}\r\n                height={768}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                {previewTabJsx}\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrameSp;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #575a61ce;\r\n    border: 1px solid #8f8f8f;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${SPUtil.SCREEN_WIDTH - 3}px;\r\n    height: ${SPUtil.SCREEN_WIDTH - 3}px;\r\n    margin: 35px 0 0 0;\r\n    background-color: #020202df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PreviewLauncherFrame from \"./previewLauncherFrame\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PreviewLauncherFrameSp from \"./previewLauncherFrameSp\";\r\n\r\nnamespace BuildUtil {\r\n\r\n    export type RunParticleProps = {\r\n        /** フレームの上限（過ぎると停止） */\r\n        limitFrame: number,\r\n        /** パーティクル数の上限（超えると停止） */\r\n        limitParticle: number,\r\n        /** 最低保証フレーム */\r\n        guaranteeFrame?: number,\r\n        /** 1フレーム経過ごとに実行する処理のコールバック */\r\n        doIterate: (frame: number, owner: Particle.Instance[]) => void,\r\n        /** 最終フレーム（ループから抜けた直後）に実行する処理のコールバック */\r\n        doEnd?: (frame: number, owner: Particle.Instance[]) => void\r\n    };\r\n\r\n    export type DivideProps = {\r\n        num: number;\r\n        standbyEvent: () => void;\r\n        countUpEvent: () => void;\r\n    }\r\n\r\n    export const run = (props: RunParticleProps) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        const owner: Particle.Instance[] = [];\r\n        let frame = 0;\r\n\r\n        while (true) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) break;\r\n            frame++;\r\n        };\r\n\r\n        if (props.doEnd != undefined) {\r\n            props.doEnd(frame, owner);\r\n        }\r\n    }\r\n\r\n    export const runPaging = (props: RunParticleProps, owner: Particle.Instance[], beginFrame: number, advanceFrame: number) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        // const owner: Particle.Instance[] = [];\r\n\r\n        let frame = beginFrame;\r\n        while (frame - beginFrame < advanceFrame) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            // if (frame > props.limitFrame ||\r\n            //     owner.length > props.limitParticle ||\r\n            //     frame > minFrame && owner.length === 0\r\n            // ) {\r\n            //     if (props.doEnd != undefined) {\r\n            //         props.doEnd(frame, owner);\r\n            //     }\r\n            //     break;\r\n            // }\r\n            frame++;\r\n        };\r\n    }\r\n\r\n    const PROGRESS_VAL = 1;\r\n\r\n    type StoryPreviewProps = {\r\n        sceens: string[];\r\n        useFrame: number;\r\n    }\r\n\r\n    export type PagingField = {\r\n        useFrame: number;\r\n        curFrame: number;\r\n        sceens: string[];\r\n        owner: Particle.Instance[];\r\n    }\r\n\r\n    export const BuildFrame = (props: {\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n        const [buildCache, setBuildCache] = useState<PagingField>({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n        useEffect(() => {\r\n            // プログレスバーが100％になったら処理される\r\n            if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n                setStoryPreviewProps({\r\n                    sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                });\r\n                return;\r\n            }\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n\r\n            if (buildCache.useFrame === 0) {\r\n                BuildUtil.run({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n                    },\r\n                    doEnd: (frame) => {\r\n                        buildCache.useFrame = frame;\r\n                    }\r\n                });\r\n                setBuildCache({ ...buildCache });\r\n            } else {\r\n                runPaging({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n\r\n                        buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        }));\r\n                    },\r\n                    // doEnd: () => {\r\n                    //     setStoryPreviewProps({\r\n                    //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                    //     });\r\n                    // }\r\n                }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n                buildCache.curFrame += PROGRESS_VAL;\r\n                if (buildCache.curFrame > buildCache.useFrame) {\r\n                    buildCache.curFrame = buildCache.useFrame;\r\n                }\r\n                setBuildCache({ ...buildCache });\r\n            }\r\n        }, [buildCache]);\r\n\r\n        useEffect(() => {\r\n            if (storyPreviewProps != null) {\r\n                store.system.dialog = <PreviewLauncherFrameSp.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                    closeAction={props.closeAction}\r\n                />;\r\n                dispatcher.updateStore();\r\n            }\r\n        }, [storyPreviewProps]);\r\n\r\n\r\n        const getJsx = () => {\r\n            if (storyPreviewProps == null) {\r\n                if (buildCache == null) return <></>;\r\n                const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                const isStandby = buildCache.useFrame === 0;\r\n                return (\r\n                    <_Blind>\r\n                        <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                        <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                    </_Blind>\r\n                );\r\n            }\r\n            return <></>;\r\n        }\r\n\r\n        return getJsx();\r\n    }\r\n}\r\n\r\nexport default BuildUtil;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ReactLoading from 'react-loading';\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\nimport BuildUtil from \"./buildUtil\";\r\n\r\nnamespace PreviewLogicFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n        closeButtonAction: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [progress, setProgress] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const [sendingValueMap, setSendingValueMap] = useState<((() => PreviewUtil.ValueMap[]) | null)>(null);\r\n        const [sendingArrayMap, setSendingArrayMap] = useState<((() => PreviewUtil.ArrayMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        useEffect(() => {\r\n            if (isBuild) build();\r\n        }, [isBuild]);\r\n\r\n        const build = () => {\r\n            if (sendingValueMap == null) return;\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            BuildUtil.run({\r\n                limitFrame: 500,\r\n                limitParticle: 3000,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        const getOrigin = () => {\r\n                            if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                            else {\r\n                                const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                                const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                        owner.push(new Particle.Instance(\r\n                            PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any, sendingArrayMap as any)\r\n                        ));\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n\r\n                        // 経過フレーム、要素数の表示\r\n                        ctx.globalAlpha = 1;\r\n                        ctx.font = '16pt Arial';\r\n                        ctx.fillStyle = '#ffffff';\r\n                        ctx.fillText(`${frame}`, 6, 24);\r\n                        ctx.fillStyle = '#ffec5c';\r\n                        ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                        // ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    setFrameCnt(frame);\r\n                    setSceens(sceens);\r\n\r\n                    setBuild(false);\r\n                    setTabIndex(1);\r\n                }\r\n            });\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_Blind isEnable={isBuild}>\r\n                    {/* <ReactLoading type='spinningBubbles' /> */}\r\n                    <_Msg>Now building...</_Msg>\r\n                </_Blind>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                setBuild(true);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={props.closeButtonAction}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLogicFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;\r\n\r\n\r\nconst _Blind = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: ${props => !props.isEnable ? 'none;' : 'inline-block;'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000552cd;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Msg = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    margin: 240px 0 0 110px;\r\n    /* background-color: #26f055cd; */\r\n    color: white;\r\n    font-size: 56px;\r\n    font-weight: 600;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport assert from \"assert\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number,\r\n        source?: string,\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject: StoreCloud.Project = {\r\n                    seq: Number(maxSeq + 1),\r\n                    name: name.value,\r\n                    source: props.source as string,\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM libdvtbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO libdvtbl(seq, owner, name, version, outline, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${'1.0'}', '', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update libdvtbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport PreviewLogicFrame from \"../preview/previewLogicFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.libraryData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <PreviewLogicFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n                closeButtonAction={() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c9;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #ccd2d3;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\n\r\nnamespace ShareCloudUtil {\r\n\r\n    export const uploadShareScenario = async (project: StoreLocalStrage.Project) => {\r\n\r\n        let cloudSeq = project.cloudSeq;\r\n        let isExists = false;\r\n\r\n        if (cloudSeq === -1) {\r\n            cloudSeq = await getNextSeq();\r\n        } else {\r\n            isExists = await isExistsAlreadySameSeq(cloudSeq);\r\n        }\r\n\r\n        const sourcePlain = JSON.stringify(project.scenarioData);\r\n        const sourceZip = DataUtil.gZip(sourcePlain);\r\n        const libhash = DataUtil.getSHA256Hash(JSON.stringify(project.libraryData));\r\n\r\n        // 既に登録されている場合は上書きする\r\n        if (isExists) {\r\n            await overwriteSnrshRecord(cloudSeq, project.name, sourceZip)\r\n        } else {\r\n            await insertSnrshRecord(cloudSeq, project.name, libhash, sourceZip);\r\n\r\n            const existsHash = await isExistsSameHash(libhash);\r\n            // ハッシュがなければ登録する\r\n            if (!existsHash) {\r\n                const libSourcePlain = JSON.stringify(project.libraryData);\r\n                const libSourceZip = DataUtil.gZip(libSourcePlain);\r\n                const owner = -1;\r\n                await insertLibhsRecord(libhash, project.libName, libSourceZip, owner);\r\n            }\r\n        }\r\n\r\n        console.log('cloudSeq: ' + cloudSeq);\r\n        return cloudSeq;\r\n    }\r\n\r\n    export const deleteShareScenario = async (cloudSeq: number) => {\r\n\r\n        await deleteSnrshRecord(cloudSeq);\r\n\r\n        // 同じライブラリのハッシュを使っているシナリオがあるか\r\n        // const existsUseHash = await isExistsSameHash(libhash);\r\n        // // ハッシュがなければ登録する\r\n        // if (!existsHash) {\r\n        //     const libSource = JSON.stringify(project.libraryData);\r\n        //     const owner = -1;\r\n        //     await insertlibhsRecord(libhash, project.libName, libSource, owner);\r\n        // }\r\n    }\r\n\r\n    const getNextSeq = async () => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) as m FROM snrshtbl`);\r\n        const results = await response.json();\r\n        const records = results as { m: number }[];\r\n        return records.length === 0 ? 0 : (records[0].m + 1);\r\n    };\r\n\r\n    const insertSnrshRecord = async (seq: number, name: string, libhash: string, source: string) => {\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `INSERT INTO snrshtbl(seq, name, libhash, source, lastmod)\r\n            VALUES(${seq}, '${name}', '${libhash}', '${source}', datetime ('now'))`\r\n        );\r\n    }\r\n\r\n    const overwriteSnrshRecord = async (seq: number, name: string, source: string) => {\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE snrshtbl SET name = '${name}', source = '${source}', lastmod = datetime ('now')\r\n            WHERE seq = ${seq}`\r\n        );\r\n    }\r\n\r\n    const isExistsAlreadySameSeq = async (cloudSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as c FROM snrshtbl where seq = ${cloudSeq}`);\r\n        const results = await response.json();\r\n        const records = results as { c: number }[];\r\n        return records[0].c > 0;\r\n    };\r\n\r\n    const deleteSnrshRecord = async (seq: number) => {\r\n        DataUtil.sendQueryRequestToAPI('update', `DELETE FROM snrshtbl where seq = ${seq}`);\r\n    }\r\n\r\n    const isExistsSameHash = async (hash: string) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as c FROM libhstbl where hash = '${hash}'`);\r\n        const results = await response.json();\r\n        const records = results as { c: number }[];\r\n        return records[0].c > 0;\r\n    };\r\n\r\n    const insertLibhsRecord = async (hash: string, name: string, source: string, owner: number) => {\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `INSERT INTO libhstbl(hash, name, source, owner)\r\n            VALUES('${hash}', '${name}', '${source}', ${owner})`\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareCloudUtil;","import assert from \"assert\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\nimport NewProjectDialog from \"./newProjectDialog\";\r\nimport NewProjectDialogStoryOnly from \"./newProjectDialogStoryOnly\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n            >\r\n                <_Name>{project.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        if (store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [elementSize, developCnt, privateCnt, releaseCnt, logicCnt, fuseCnt] = useMemo(() => {\r\n        if (store.libraryData == null) return [0, 0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        let fuseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n\r\n        if (store.storyData != null) {\r\n            fuseCnt = store.storyData.fuseList.length;\r\n        }\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length, fuseCnt];\r\n    }, [store.libraryData]);\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const source = DataUtil.gZip(JSON.stringify(store.libraryData));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(store.libraryData));\r\n        updateProjectSource(curPrj.seq, source).then(() => {\r\n            curPrj.source = source;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        store.libraryData = data;\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    const saveLocalFile = () => {\r\n        DataUtil.saveLibraryFile(store, setStore);\r\n    }\r\n\r\n    const getNewSaveButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Upload cloud',\r\n                width: 210,\r\n                isEnable: hasData && store.cloud != null,\r\n                callback: uploadCloud\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Save file',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle == null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const getOverwriteButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: fcsListIdx != -1 && hasData,\r\n                callback: overwriteCloudFile\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle != null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const cloudJsx = (<_ContDiv isEnable={store.cloud != null}>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                    callback: cloneCloudFile\r\n                },\r\n                {\r\n                    label: 'Rename',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialog.Component\r\n                            targetSeq={projects[fcsListIdx].seq}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                            store.system.dialog = <ConfirmDialog.Component\r\n                                message=\"Delete project succesful!\"\r\n                            />;\r\n                            projects.splice(fcsListIdx, 1);\r\n                            setFcsListIdx(fcsListIdx - 1);\r\n                            setStore({ ...store });\r\n                        });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n        <_ListDiv>\r\n            {listItemJsx}\r\n        </_ListDiv>\r\n    </_ContDiv>);\r\n\r\n    const localJsx = (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    width: 100,\r\n                    isEnable: !hasData,\r\n                    callback: () => { DataUtil.loadFile(store, setStore) }\r\n                },\r\n                {\r\n                    label: 'Disconnect',\r\n                    width: 160,\r\n                    isEnable: store.fileHandle != null,\r\n                    callback: () => {\r\n                        store.fileHandle = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n    </>);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n                            store.libraryData = LogicElementUtil.getInitialData();\r\n                            // store.system.dialog = <NewProjectDialog.Component />;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Clear',\r\n                        width: 100,\r\n                        isEnable: hasData,\r\n                        callback: () => {\r\n                            store.libraryData = null;\r\n                            store.storyData = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={true}>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'Cloud', enable: true, cont: cloudJsx },\r\n                        { name: 'Local', enable: true, cont: localJsx },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getNewSaveButton(),\r\n                        getOverwriteButton()\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Elements\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : elementSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    // width={340}\r\n                                    isRecordItem\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Fuses\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : fuseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.BorderPanel\r\n                    title=\"File\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                /> */}\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update libdvtbl set source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from libdvtbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #ffe3fb53; */\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ContDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane, TabElements } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'scenario';\r\n        return str;\r\n    };\r\n    const projectType = getProjectType();\r\n\r\n    const tabElements: TabElements[] = [];\r\n    tabElements.push({ name: 'Manage', enable: true, cont: <ManageTab /> });\r\n    tabElements.push({ name: 'Library', enable: projectType === 'library', cont: <LogicMainteTab /> });\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={tabElements}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const download = (plainData: string) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        window.showSaveFilePicker(options).then((handle) => {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await handle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"Successfully download!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        }).catch(() => {\r\n            console.log('キャンセルされました');\r\n        });\r\n    }\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName onClick={() => {\r\n                        download(JSON.stringify(lib.rootData));\r\n                    }}>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        let labelName = seed.name;\r\n                        if (seed.disp != undefined) labelName = seed.disp;\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <PreviewLogicFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                        closeButtonAction={() => {\r\n                                            store.system.dialog = null;\r\n                                            setStore({ ...store });\r\n                                        }}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{labelName}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = lib.owner) as owner, source, lastmod\r\n        FROM libdvtbl lib\r\n        WHERE source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #6d7a86;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #b9b9b9, #e2e2e2, #b9b9b9);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #c7c7c7;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 60px);\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    margin: 0 0 0 30px;\r\n    background-color: #b1b1b1;\r\n    /* border-radius: 0 0 2px 2px; */\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    clip-path: polygon(7.5% 100%, 0% 0%, 100% 0%, 92.5% 100%);\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    \r\n    &:hover {\r\n        color: #db3333;\r\n    }\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport releaseNote from \"../../resource/release_note.json\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        // fetch('assets/release_note.json')\r\n        //     .then(response => response.json()) // (2) レスポンスデータを取得\r\n        //     .then(json => { // (3)レスポンスデータを処理\r\n        //         const list = json as NotePorp[];\r\n        //         setJsx(list.map((item, i) => {\r\n        //             const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n        //             return (\r\n        //                 <_Item key={i}>\r\n        //                     <_Header>v{item.version} ({item.date})</_Header>\r\n        //                     <_Detail>{record}</_Detail>\r\n        //                 </_Item>\r\n        //             );\r\n        //         }));\r\n        //     });\r\n\r\n        const list = releaseNote as NotePorp[];\r\n        setJsx(list.map((item, i) => {\r\n            const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n            return (\r\n                <_Item key={i}>\r\n                    <_Header>v{item.version} ({item.date})</_Header>\r\n                    <_Detail>{record}</_Detail>\r\n                </_Item>\r\n            );\r\n        }));\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} libruary have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                    { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel /> },\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport CanvasUtil from '../../utils/canvasUtil';\r\nimport DataUtil from '../../utils/dataUtil';\r\nimport SystemConst from '../../utils/systemConst';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <_Logo src={logo} />\r\n                </_Title>\r\n                <_VERSION>{SystemConst.APP_VERSION}</_VERSION>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2023 Pixel Flare All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#858892, #8e99b6);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    /* color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-shadow: 1px 2px 22px #0000003d; */\r\n    text-align: center;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    /* & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    } */\r\n`;\r\n\r\nconst _VERSION = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 240px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #ebe7ab;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* height: 200%; */\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useState } from \"react\";\r\nimport { initialStore } from \"../../redux/store/store\";\r\nimport styled from \"styled-components\";\r\nimport GloballDialog from \"../dialog/globalDialog\";\r\nimport TotalHeader from \"./totalHeader\";\r\nimport MainFrame from \"./mainFrame\";\r\nimport ModeSelectDialog from \"./modeSelectDialog\";\r\nimport Splash from \"./splash\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\n\r\nconst PCRoot = () => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <Splash\r\n            remove={() => {\r\n                store.system.isSplash = false;\r\n                // store.system.dialog = <ModeSelectDialog />\r\n                setStore({ ...store });\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (<>\r\n        {splashJsx}\r\n        < _Wrap >\r\n            <GloballDialog />\r\n            <TotalHeader />\r\n            <_MainDiv>\r\n                <MainFrame />\r\n            </_MainDiv>\r\n        </_Wrap >\r\n    </>);\r\n}\r\n\r\nexport default PCRoot;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    min-width: 1200px;\r\n    min-height: 900px;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #a3c1c7;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import DataUtil from \"../utils/dataUtil\";\r\nimport PreviewLogicFrame from \"../contents/create/preview/previewLogicFrame\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../contents/create/factory/util/logicElementUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../utils/form/formUtiil\";\r\nimport CanvasUtil from \"../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../contents/create/preview/previewLauncherFrame\";\r\nimport BuildUtil from \"../contents/create/preview/buildUtil\";\r\nimport Particle from \"../contents/graphic/particle\";\r\nimport { VscSettingsGear } from \"react-icons/vsc\";\r\nimport PreviewLauncherFrameSp from \"../contents/create/preview/previewLauncherFrameSp\";\r\nimport SystemConst from \"../utils/systemConst\";\r\n\r\ntype StoryProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    libraryData: LogicUtil.WrapElement;\r\n    scenarioData: StoryUtil.StoryData;\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\ntype StoryPreviewProps = {\r\n    sceens: string[];\r\n    useFrame: number;\r\n}\r\n\r\nexport type PagingField = {\r\n    useFrame: number;\r\n    curFrame: number;\r\n    sceens: string[];\r\n    owner: Particle.Instance[];\r\n}\r\n\r\nconst PROGRESS_VAL = 1;\r\n\r\nconst DirectLinkManager = (props: {\r\n    scenarioSeq: number;\r\n}) => {\r\n    const [storyData, setStoryData] = useState<StoryProps | null>(null);\r\n    const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n    const [buildCache, setBuildCache] = useState<null | PagingField>(null);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        findScenarioData(props.scenarioSeq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const res = resList[0] as {\r\n                    ownerId: string; seq: number, name: string, scenario: string, library: string, lastmod: string\r\n                };\r\n                const seq = res.seq;\r\n                const name = res.name;\r\n                const ownerId = res.ownerId;\r\n                const lastmod = res.lastmod;\r\n                const library = JSON.parse(DataUtil.unZip(res.library));\r\n                const scenario = JSON.parse(DataUtil.unZip(res.scenario));\r\n\r\n                // const rootData = library as LogicUtil.WrapElement;\r\n                // const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                // const seedList: SeedProps[] = seedMng.defs\r\n                //     .filter(wrap => {\r\n                //         const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                //         return seed.permit === 'release';\r\n                //     })\r\n                //     .map(wrap => {\r\n                //         const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                //         const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                //         const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                //         return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                //     });\r\n                setStoryData({\r\n                    name, libraryData: library, scenarioData: scenario, lastmod, ownerId\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (buildCache == null || storyData == null) return;\r\n        if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n            setStoryPreviewProps({\r\n                sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n            });\r\n            return;\r\n        }\r\n\r\n        const fuseList = storyData.scenarioData.fuseList;\r\n        const limitFrame = storyData.scenarioData.limitFrame;\r\n        const limitParticle = storyData.scenarioData.limitParticle;\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = storyData.libraryData;\r\n        if (buildCache.useFrame === 0) {\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n                },\r\n                doEnd: (frame) => {\r\n                    buildCache.useFrame = frame;\r\n                }\r\n            });\r\n            setBuildCache({ ...buildCache });\r\n        } else {\r\n\r\n            BuildUtil.runPaging({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n\r\n                    buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                // doEnd: () => {\r\n                //     setStoryPreviewProps({\r\n                //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                //     });\r\n                // }\r\n            }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n            buildCache.curFrame += PROGRESS_VAL;\r\n            if (buildCache.curFrame > buildCache.useFrame) {\r\n                buildCache.curFrame = buildCache.useFrame;\r\n            }\r\n            setBuildCache({ ...buildCache });\r\n        }\r\n    }, [buildCache]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        setBuildCache({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n    }\r\n\r\n    const getJsx = () => {\r\n        let jsx = <></>;\r\n        if (storyData != null) {\r\n            if (storyPreviewProps == null) {\r\n                const getBlindJsx = () => {\r\n                    if (buildCache == null) return <></>;\r\n                    const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                    const isStandby = buildCache.useFrame === 0;\r\n                    return (\r\n                        <_Blind>\r\n                            <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                            <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                        </_Blind>\r\n                    );\r\n                }\r\n                jsx = <>\r\n                    {getBlindJsx()}\r\n                    <_Header>{storyData.name}</_Header>\r\n                    {/* <_Header>{storyData.name}</_Header>\r\n                    <_Header>{storyData.name}</_Header> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Start',\r\n                                icon: <VscSettingsGear />,\r\n                                width: 300,\r\n                                callback() {\r\n                                    openPreviewAllDialog();\r\n                                },\r\n                            }\r\n                        ]}\r\n                    />\r\n                    <_Banner src={logo} onClick={() => window.location.replace(SystemConst.APP_SERVER_DOMAIN)} />\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLauncherFrameSp.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                    closeAction={() => {\r\n                        setStoryPreviewProps(null);\r\n                        setBuildCache(null);\r\n                    }}\r\n                />\r\n            }\r\n        } else {\r\n            jsx = <FormUtil.Message message=\"This link is invalid.\" />;\r\n        }\r\n        return jsx;\r\n    }\r\n\r\n    return getJsx();\r\n}\r\n\r\nexport default DirectLinkManager;\r\n\r\n\r\nconst findScenarioData = async (seq: number) => {\r\n    const sql = `\r\n        SELECT snr.seq, snr.name,\r\n        (select id from user_tbl where seq = lib.owner) ownerId,\r\n        lib.source library,\r\n        snr.source scenario, snr.lastmod\r\n        FROM snrshtbl snr inner join libhstbl lib on snr.libhash = lib.hash\r\n        WHERE snr.seq = ${seq}\r\n    `;\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', sql);\r\n    console.log(sql);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background: linear-gradient(to bottom, #00215e5c, #00000067, #00215e5c); */\r\n\r\n    color: #001558;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Banner = styled.img<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 20px;\r\n    left: 40px;\r\n    width: 550px;\r\n    height: 180px;\r\n    background-color: #acacac;\r\n    border: 1px solid #000;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #abc9e6;\r\n`;\r\n\r\nconst _ArgCnt = styled.span<{\r\n}>`\r\n    color: #fbffbf;\r\n`;","import PublishFrame from \"../../contents/home/publishFrame\";\r\n\r\nconst SPLibraryChannel = () => {\r\n\r\n    return (<PublishFrame setLibCnt={()=>{}}/>);\r\n}\r\n\r\nexport default SPLibraryChannel;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { MdOutlineCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\n\r\nimport { AiOutlineInstagram, AiOutlineTwitter, AiOutlineMail, AiOutlineFacebook } from \"react-icons/ai\";\r\nimport { BsLine } from \"react-icons/bs\";\r\n\r\nimport {\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    LineShareButton,\r\n    MailruShareButton,\r\n    TwitterShareButton,\r\n} from \"react-share\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport ShareCloudUtil from \"./shareCloudUtil\";\r\nimport SystemConst from \"../../../../utils/systemConst\";\r\nimport StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\n\r\n\r\nnamespace ShareDialog {\r\n\r\n    export const Component = (props: {\r\n        project: StoreLocalStrage.Project;\r\n    }) => {\r\n        const width = 500;\r\n        const height = 276;\r\n\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n        const project = props.project;\r\n\r\n        const share = () => {\r\n            dispatcher.syncProccess(\r\n                ShareCloudUtil.uploadShareScenario(project).then((cloudSeq) => {\r\n                    project.isShared = true;\r\n                    project.cloudSeq = cloudSeq;\r\n                    const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString();\r\n                    localStorage.setItem(fileKey, JSON.stringify(project));\r\n                    dispatcher.updateStore();\r\n                })\r\n            );\r\n\r\n        }\r\n\r\n        useEffect(() => {\r\n            share();\r\n        }, []);\r\n\r\n        const getURL = () => {\r\n            let url = '';\r\n            if (project.cloudSeq !== -1) {\r\n                const hash = DataUtil.getHashedFromProjectSeq(project.cloudSeq);\r\n\r\n                url = `${SystemConst.APP_SERVER_DOMAIN}/#/share?v=${hash}`;\r\n            }\r\n            return url;\r\n        };\r\n\r\n        const getURLAddQueryParam = () => {\r\n            return getURL() + '&openExternalBrowser=1';\r\n        }\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Share your digital art!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <_UrlDiv\r\n                    value={getURL()}\r\n                    isEnable={project.isShared}\r\n                    readOnly />\r\n                <_Record\r\n                    isEnable={project.isShared}\r\n                >\r\n                    <InstapaperShareButton\r\n                        url={getURLAddQueryParam()}\r\n                        children={<_SnsIconFrame color=\"#a76f99\"><AiOutlineInstagram /></_SnsIconFrame>}\r\n                    />\r\n                    <TwitterShareButton\r\n                        url={getURLAddQueryParam()}\r\n                        children={<_SnsIconFrame color=\"#2ba0a0\"><AiOutlineTwitter /></_SnsIconFrame>}\r\n                    />\r\n                    <MailruShareButton\r\n                        url={getURLAddQueryParam()}\r\n                        children={<_SnsIconFrame color=\"#790e0e\"><AiOutlineMail /></_SnsIconFrame>}\r\n                    />\r\n                    <FacebookShareButton\r\n                        url={getURLAddQueryParam()}\r\n                        children={<_SnsIconFrame color=\"#54618a\"><AiOutlineFacebook /></_SnsIconFrame>}\r\n                    />\r\n                    <LineShareButton\r\n                        url={getURLAddQueryParam()}\r\n                        children={<_SnsIconFrame color=\"#6fa56e\"><BsLine /></_SnsIconFrame>}\r\n                    />\r\n                </_Record>\r\n                <FormUtil.Record\r\n                    marginTop={20}\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.SwitchTwoFace\r\n                            label1=\"Private\"\r\n                            label2=\"Shared\"\r\n                            rate1={50}\r\n                            rate2={50}\r\n                            width={320}\r\n                            isUse={project.isShared}\r\n                            callback={() => {\r\n                                if (!project.isShared) {\r\n                                    share();\r\n                                } else {\r\n                                    dispatcher.syncProccess(\r\n                                        ShareCloudUtil.deleteShareScenario(project.cloudSeq).then(() => {\r\n                                            project.isShared = false;\r\n                                            project.cloudSeq = -1;\r\n                                            const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString();\r\n                                            localStorage.setItem(fileKey, JSON.stringify(project));\r\n                                            dispatcher.updateStore();\r\n                                        })\r\n                                    );\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 8px 0 0 0;\r\n    text-align: center;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _TextAreaDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 120px;\r\n    margin: 10px 0 0 4px;\r\n    border: 2px solid #3d3d3d;\r\n    box-sizing: border-box;\r\n`;\r\nconst _UrlDiv = styled.textarea<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 60px;\r\n    margin: 4px 0 0 4px;\r\n    border: 1px solid #3d3d3d;\r\n   background-color: #ebf5f557;\r\n   /* background-color: transparent; */\r\n   outline: none;\r\n   font-size: 18px;\r\n   color: #0041a3;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _SnsIconFrame = styled.div<{\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 8px;\r\n    width: 80px;\r\n    height: 80px;\r\n    border: 2px solid #555555;\r\n    /* background-color: #81818139; */\r\n    box-sizing: border-box;\r\n    font-size: 65px;\r\n    color: ${props => props.color};\r\n    margin: 0 4px;\r\n    &:hover {\r\n        background-color: #f0f0f0cc;\r\n    }\r\n`;","\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport libraries from \"../../../../resource/library/library.json\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\n\r\nnamespace LibraryLoader {\r\n\r\n    export type LibInfo = {\r\n        name: string;\r\n        version: string;\r\n        outline: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const getOfficialList = (): LibInfo[] => {\r\n        return libraries.map(lib => {\r\n            return {\r\n                name: lib.name,\r\n                version: lib.version,\r\n                outline: lib.outline,\r\n                rootData: JSON.parse(DataUtil.unZip(lib.source.toString())) as LogicUtil.WrapElement\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getExtendList = () => {\r\n        const list: LibInfo[] = [];\r\n\r\n\r\n        return list;\r\n    }\r\n}\r\n\r\nexport default LibraryLoader;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport StoreCloud from \"../../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../../redux/store/store\";\r\nimport { AiOutlineEnter, AiOutlineCheck } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LibraryLoader from \"./libraryLoader\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\n\r\nnamespace NewScenarioDialog {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n        defaultName: string;\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n        // const [scenarioName, setScenarioName] = useState<FormUtil.CheckableValue>({ value: 'new_project_0', errors: [] });\r\n        const [focusLibIndex, setFocusLibIndex] = useState<number>(0);\r\n        const [isExtend, setExtend] = useState<boolean>(false);\r\n\r\n        const width = 500;\r\n        const height = 618;\r\n\r\n        // useEffect(() => {\r\n        //     findAllReleaseProjectList().then(resList => {\r\n        //         setCloudLibs(resList.map(res => {\r\n        //             return {\r\n        //                 name: res.name,\r\n        //                 ownerId: res.owner,\r\n        //                 seq: res.seq,\r\n        //                 rootData: JSON.parse(DataUtil.unZip(res.source))\r\n        //             }\r\n        //         }));\r\n        //     });\r\n        // }, []);\r\n\r\n        const officialPackList = useMemo(() => {\r\n            return LibraryLoader.getOfficialList();\r\n        }, []);\r\n\r\n        const extendPackList = useMemo(() => {\r\n            return !isExtend ? [] : LibraryLoader.getExtendList();\r\n        }, [isExtend]);\r\n\r\n        const libPackJsxList = useMemo(() => {\r\n            return (!isExtend ? officialPackList : extendPackList).map((pack, i) => {\r\n                const isFocus = focusLibIndex === i;\r\n                return (\r\n                    <_LibItem key={i}\r\n                        isFocus={isFocus}\r\n                        onClick={() => {\r\n                            setFocusLibIndex(i);\r\n                        }}\r\n                    >\r\n                        <_CheckDiv>{isFocus ? <AiOutlineCheck /> : <></>}</_CheckDiv>\r\n                        <_LibInfo>\r\n                            <_LibName>{pack.name}</_LibName>\r\n                            <_LibVersion>{pack.version}</_LibVersion>\r\n                            <_LibOutline>{pack.outline}</_LibOutline>\r\n                        </_LibInfo>\r\n                    </_LibItem>\r\n                );\r\n            });\r\n        }, [isExtend, focusLibIndex]);\r\n\r\n        const getStoryLib = () => {\r\n            // let storyLib: LogicUtil.WrapElement | null = null;\r\n            // if (cloudLibs != null) {\r\n            //     const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n            //     if (lib != undefined) {\r\n            //         storyLib = lib.rootData;\r\n            //     }\r\n            // }\r\n            // return storyLib;\r\n            return (!isExtend ? officialPackList : extendPackList)[focusLibIndex];\r\n        }\r\n\r\n        // const usingHash = useMemo(() => {\r\n        //     let hash = '-';\r\n        //     const lib = getStoryLib();\r\n        //     if (lib != null) {\r\n        //         hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n        //     }\r\n        //     return hash;\r\n        // }, [selectedLib]);\r\n\r\n        // const isCreateEnabled = () => {\r\n        //     return usingHash !== '-';\r\n        // }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                icon: <MdCancelPresentation />,\r\n                width: 120,\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                icon: <AiOutlineEnter />,\r\n                width: 120,\r\n                callback: () => {\r\n                    const lib = getStoryLib();\r\n                    \r\n                    store.libraryData = lib.rootData;\r\n                    store.storyData = {\r\n                        limitFrame: 300,\r\n                        limitParticle: 3000,\r\n                        fuseList: []\r\n                    };\r\n                    store.system.dialog = null;\r\n\r\n                    const local = store.local;\r\n                    //ファイルキーを生成\r\n                    const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + local.maxSeq.toString();\r\n\r\n                    // プロジェクトファイルのインスタンスを作成\r\n                    const project: StoreLocalStrage.Project = {\r\n                        name: props.defaultName,\r\n                        libraryData: lib.rootData,\r\n                        libName: `${lib.name} ${lib.version}`,\r\n                        localSeq: local.maxSeq,\r\n                        scenarioData: store.storyData,\r\n                        lastmod: DataUtil.getStringFromDate(new Date()),\r\n                        cloudSeq: -1,\r\n                        isShared: false\r\n                    };\r\n                    // ローカルストレージに新しいファイルキーでデータを作成\r\n                    localStorage.setItem(fileKey, JSON.stringify(project));\r\n                    // 画面のリストに即時反映するためにstoreにも追加\r\n                    local.projects.push(project);\r\n\r\n                    // 編集中のシーケンスとして設定\r\n                    store.editing.localSeq = local.maxSeq;\r\n                    store.editing.libName = `${lib.name} ${lib.version}`;\r\n\r\n                    // シーケンスの最大値を加算\r\n                    local.maxSeq ++;\r\n                    // ローカルストレージのシーケンスを更新\r\n                    localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_SEQ, local.maxSeq.toString());\r\n                    setStore({ ...store });\r\n                    if (props.extendAction != undefined) props.extendAction();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select library!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    marginBottom={10}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={320}\r\n                            checkable={scenarioName}\r\n                            setCheckable={setScenarioName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => !existNameList.includes(value),\r\n                                //     errorType: \"relation\"\r\n                                // }\r\n                            ]}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.SwitchTwoFace\r\n                            label1=\"Official\"\r\n                            label2=\"Extend\"\r\n                            rate1={50}\r\n                            rate2={50}\r\n                            width={320}\r\n                            isUse={isExtend}\r\n                            isEditable={false}\r\n                            callback={() => {\r\n                                setExtend(!isExtend);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n\r\n                <FormUtil.BorderPanel\r\n                    title=\"Library\"\r\n                    height={422}\r\n                    // isDisable={store.cloud == null}\r\n                    backgroundColor=\"#ffffff26\"\r\n                    innerJsx={<>\r\n                        {libPackJsxList}\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Library\"\r\n                    isEnabled={cloudLibs != null}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedLib}\r\n                            width={278}\r\n                            setCheckable={setSelectedLib}\r\n                            list={(cloudLibs ?? []).map((item) => {\r\n                                // const disp = `${item.ownerId}: ${item.name}`;\r\n                                return { value: item.seq.toString(), labelText: item.name };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewScenarioDialog;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\n\r\nconst _LibItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: 100px;\r\n    margin: 0 0 4px 4px;\r\n    background-color: #d3d3d3df;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #e4ec9996;\r\n    `}\r\n    border: 1px solid #8f8f8f;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _CheckDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 60px;\r\n    height: 60px;\r\n    margin: 20px 0 0 4px;\r\n    background-color: #e7e7e765;\r\n    border: 1px solid #8f8f8fac;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    font-size: 55px;\r\n    font-weight: 600;\r\n    color: #02db02;\r\n`;\r\n\r\nconst _LibInfo = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 5px;\r\n    position: relative;\r\n    width: calc(100% - 74px);\r\n    vertical-align: top;\r\n    /* background-color: #3fda6129; */\r\n`;\r\n\r\n\r\nconst _LibName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    max-width: calc(100% - 40px);\r\n    height: 50px;\r\n    margin-right: 6px;\r\n    /* background-color: #da3f3f64; */\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #435688;\r\n    overflow-x: hidden;\r\n    line-height: 48px;\r\n`;\r\n\r\nconst _LibVersion = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 34px;\r\n    height: 50px;\r\n    /* background-color: #3f68da63; */\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c7454c;\r\n    vertical-align: top;\r\n    line-height: 58px;\r\n`;\r\n\r\nconst _LibOutline = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #3fda6129; */\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #6a6d75;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport assert from \"assert\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport StoreCloud from \"../../../../redux/store/storeCloud\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport NewScenarioDialog from \"./newScenarioDialog\";\r\n\r\nnamespace NameDefDialogLocal {\r\n\r\n    export const Component = (props: {\r\n        focusIndex: number;\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 170;\r\n\r\n        const local = store.local;\r\n\r\n        // ローカルのシーケンス最大値と同じ場合はこれから作成するものなのでcreate\r\n        const isCreate = props.focusIndex === -1;\r\n\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            if (isCreate) {\r\n                let num = 0;\r\n                while (true) {\r\n                    const checkName = `${LocalStorageUtil.DEFAULT_FILE_NAME_PREFIX}${num}`;\r\n                    if (local.projects.find(p => p.name === checkName) == undefined) {\r\n                        return checkName;\r\n                    }\r\n                    num++;\r\n                }\r\n            } else {\r\n                const curProject = local.projects[props.focusIndex];\r\n                return curProject.name;\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                local.projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n\r\n        const registCreate = () => {\r\n        }\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Cancel',\r\n                            icon: <MdCancelPresentation />,\r\n                            width: 130,\r\n                            callback: () => {\r\n                                store.system.dialog = null;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: isCreate ? 'Regist' : 'Update',\r\n                            icon: <AiOutlineEnter />,\r\n                            width: 130,\r\n                            isEnable: name.errors.length === 0,\r\n                            callback: () => {\r\n                                if (isCreate) {\r\n                                    store.system.dialog = <NewScenarioDialog.Component\r\n                                        defaultName={name.value}\r\n                                        extendAction={props.extendAction}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                                else {\r\n                                    const curProject = local.projects[props.focusIndex];\r\n                                    curProject.name = name.value;\r\n                                    const key = `${LocalStorageUtil.KEY_SCENARIO_PREFIX}${curProject.localSeq}`;\r\n                                    localStorage.setItem(key, JSON.stringify(curProject));\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                };\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialogLocal;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { BsFillShareFill } from 'react-icons/bs';\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport assert from \"assert\";\r\nimport ShareDialog from \"./shareDialog\";\r\n\r\nnamespace SaveOptionDIalog {\r\n\r\n    export const Component = (props: {\r\n    }) => {\r\n\r\n        const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n        const width = 500;\r\n        const height = 130;\r\n\r\n        const project = store.local.projects.find(p => p.localSeq === store.editing.localSeq);\r\n        assert(project != undefined, 'project is undefined.');\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message=\"Save project successful.\"\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Share',\r\n                            icon: <BsFillShareFill />,\r\n                            width: 200,\r\n                            callback: () => {\r\n                                localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString(), JSON.stringify(project));\r\n                                store.system.dialog = <ShareDialog.Component\r\n                                    project={project}\r\n                                />;\r\n                                store.system.canDialogClose = true;\r\n                                dispatcher.updateStore();\r\n                            }\r\n                        }\r\n                    ]} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SaveOptionDIalog;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../../../contents/dialog/confirmDialog\";\r\nimport NewProjectDialogStoryOnly from \"../../../contents/create/manage/newProjectDialogStoryOnly\";\r\nimport NameDefDialog from \"../../../contents/create/manage/nameDefDialog\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport LogicUtil from \"../../../contents/create/factory/util/logicUtil\";\r\nimport { BsFillShareFill } from 'react-icons/bs';\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { FiUpload, FiDownload } from \"react-icons/fi\";\r\nimport { IoCreateOutline } from \"react-icons/io5\";\r\nimport { ImCopy } from \"react-icons/im\";\r\nimport { MdClear, MdOutlineDriveFileRenameOutline } from \"react-icons/md\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\n\r\nimport ShareDialog from \"./etc/shareDialog\";\r\nimport { setuid } from \"process\";\r\nimport NewScenarioDialog from \"./etc/newScenarioDialog\";\r\nimport LocalStorageUtil from \"../../../utils/localStorageUtil\";\r\nimport assert from \"assert\";\r\nimport StoreLocalStrage from \"../../../redux/store/storeLocalStrage\";\r\nimport NameDefDialogLocal from \"./etc/nameDefDialogLocal\";\r\n\r\nconst SPManageFrame = (props: {\r\n    isEdit: boolean;\r\n    setEdit: (isEdit: boolean) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const [update, setUpdate] = useState({});\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.local.projects;\r\n\r\n    useEffect(() => {\r\n        store.system.logoutActions.push(() => {\r\n            setFcsListIdx(-1);\r\n        });\r\n        // dispatcher.updateStore();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        if (!hasData) return null;\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        };\r\n        return data;\r\n    }\r\n\r\n    const projectItemJsxList = projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    if (fcsListIdx === i) setFcsListIdx(-1);\r\n                    else setFcsListIdx(i);\r\n                    // console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    // store.system.dialog = <ConfirmDialog.Component\r\n                    //     message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    // />;\r\n                    // setStore({ ...store });\r\n                }}\r\n            >\r\n                {/* <_Status type={project.type}>[{project.type}] </_Status> */}\r\n                <_Name>{project.name}</_Name>\r\n                <_Share\r\n                    onClick={() => {\r\n                        localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString(), JSON.stringify(project));\r\n                        store.system.dialog = <ShareDialog.Component\r\n                            project={project}\r\n                        />;\r\n                        store.system.canDialogClose = true;\r\n                        dispatcher.updateStore();\r\n                    }}\r\n                ><_Icon isShare={project.isShared}><BsFillShareFill /></_Icon></_Share>\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const thumbJsxList = useMemo(() => {\r\n        const storyData = store.storyData;\r\n        if (storyData == null) return [];\r\n        const thumbJsx: JSX.Element[] = [];\r\n        storyData.fuseList.forEach((fuse) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            if (cache != undefined) {\r\n                cache.thumbList.forEach((thumb) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_Img src={thumb.url} />;\r\n                    thumbJsx.push(\r\n                        <_SampleDiv key={thumbJsx.length}>\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n        });\r\n        return thumbJsx.filter((thumn, i) => i < 30);\r\n    }, [props.isEdit, update]);\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        // const curPrj = projects[fcsListIdx];\r\n        // const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        // updateProjectSource(curPrj.seq, 'story', source).then(() => {\r\n        //     curPrj.source = source;\r\n        //     curPrj.type = 'story';\r\n        //     store.system.dialog = <ConfirmDialog.Component\r\n        //         message=\"Update project succesful!\"\r\n        //     />;\r\n        //     setStore({ ...store });\r\n        // });\r\n    }\r\n\r\n    /**\r\n     * 選択中のローカルのファイルを読み込む\r\n     */\r\n    const loadLocalFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        store.libraryData = curPrj.libraryData;\r\n        store.storyData = curPrj.scenarioData;\r\n        const fuseList = store.storyData.fuseList;\r\n\r\n        // const isLoad = fuseList.length > 0 && store.fuseCacheList.length === 0;\r\n        // if (!isLoad) return;\r\n        fuseList.forEach(fuse => {\r\n            const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n            store.fuseCacheList.push(cache);\r\n            dispatcher.story.updateCache(fuse, cache);\r\n        });\r\n        setUpdate({});\r\n\r\n        store.editing.localSeq = curPrj.localSeq;\r\n        store.editing.libName = curPrj.libName;\r\n\r\n        // props.setEdit(true);\r\n        dispatcher.updateStore();\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            isIconButton\r\n            buttons={[\r\n                !hasData ? {\r\n                    label: 'New Project',\r\n                    width: 300,\r\n                    icon: <IoCreateOutline />,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialogLocal.Component\r\n                            focusIndex={-1}\r\n                            extendAction={() => {\r\n                                props.setEdit(true);\r\n                            }}\r\n                        />\r\n                        setStore({ ...store });\r\n                    }\r\n                } : {\r\n                    label: 'Close',\r\n                    width: 200,\r\n                    icon: <MdClear />,\r\n                    callback: () => {\r\n                        store.libraryData = null;\r\n                        store.storyData = null;\r\n                        store.fuseCacheList.length = 0;\r\n\r\n                        store.editing.localSeq = -1;\r\n                        dispatcher.updateStore();\r\n                        setUpdate({});\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Project\"\r\n            height={170}\r\n            // isDisable={!hasData}\r\n            isEnable={hasData}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Upload',\r\n                            width: 210,\r\n                            icon: <FiUpload />,\r\n                            isEnable: hasData && store.cloud != null,\r\n                            callback: uploadCloud\r\n                        },\r\n                        {\r\n                            label: 'Overwrite',\r\n                            width: 210,\r\n                            icon: <FaRegSave />,\r\n                            isEnable: fcsListIdx != -1 && hasData,\r\n                            callback: overwriteCloudFile\r\n                        }\r\n                    ]}\r\n                /> */}\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Library\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            // width={340}\r\n                            isRecordItem\r\n                            value={!hasData ? '-' : store.editing.libName}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Fuses\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={!hasData ? '-' : store.fuseCacheList.length.toString()}\r\n                        />\r\n                    }\r\n                />\r\n                {thumbJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Files\"\r\n            height={448}\r\n            isEnable={store.editing.localSeq == -1}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Load',\r\n                            width: 130,\r\n                            icon: <FiDownload />,\r\n                            isEnable: fcsListIdx !== -1 && store.editing.localSeq == -1,\r\n                            callback: loadLocalFile\r\n                        },\r\n                        {\r\n                            label: 'Copy',\r\n                            width: 130,\r\n                            icon: <ImCopy />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                const local = store.local;\r\n                                const project = local.projects[fcsListIdx];\r\n                                //ファイルキーを生成\r\n                                const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + local.maxSeq.toString();\r\n\r\n                                const newProject: StoreLocalStrage.Project = JSON.parse(JSON.stringify(project));\r\n                                newProject.localSeq = local.maxSeq;\r\n                                newProject.name += '_copy';\r\n                                // ローカルストレージに新しいファイルキーでデータを作成\r\n                                localStorage.setItem(fileKey, JSON.stringify(newProject));\r\n                                // 画面のリストに即時反映するためにstoreにも追加\r\n                                local.projects.push(newProject);\r\n\r\n                                // シーケンスの最大値を加算\r\n                                local.maxSeq++;\r\n                                // ローカルストレージのシーケンスを更新\r\n                                localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_SEQ, local.maxSeq.toString());\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Copy project succesful!\"\r\n                                />;\r\n                                dispatcher.updateStore();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Rename',\r\n                            width: 130,\r\n                            icon: <MdOutlineDriveFileRenameOutline />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialogLocal.Component\r\n                                    focusIndex={fcsListIdx}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Delete',\r\n                            width: 130,\r\n                            icon: <RiDeleteBinLine />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                const local = store.local;\r\n                                const project = local.projects[fcsListIdx];\r\n                                //ファイルキーを生成\r\n                                const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString();\r\n\r\n                                // ローカルストレージにから削除\r\n                                localStorage.removeItem(fileKey);\r\n                                // 画面のリストに即時反映するためにstoreからも削除\r\n                                local.projects.splice(fcsListIdx, 1);\r\n\r\n                                setFcsListIdx(-1);\r\n\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Delete project succesful!\"\r\n                                />;\r\n                                dispatcher.updateStore();\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {projectItemJsxList}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default SPManageFrame;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 55px;\r\n    /* background-color: #004df390; */\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    line-height: 64px;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\n\r\nconst _Share = styled.span<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 1px;\r\n    /* background-color: #00eb6a76; */\r\n`;\r\n\r\nconst _Icon = styled.div<{\r\n    isShare: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 40px;\r\n    height: 55px;\r\n    /* background-color: #eb000076; */\r\n    font-size: 30px;\r\n    color: #75757592;\r\n    ${props => !props.isShare ? '' : css`\r\n        color: #eb032a;\r\n    `}\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst WND_SIZE = 40;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    /* margin: 0 0 0 2px; */\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LogicFormUtil from \"../../../../contents/create/factory/util/logicFormUtil\";\r\nimport LogicElementUtil from \"../../../../contents/create/factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../../utils/canvasUtil\";\r\nimport BuildUtil from \"../../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\n\r\nconst FuseMainteDialog = (props: {\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n    seedId?: string;\r\n    frame?: number;\r\n    // isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [preset, setPreset] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n    useEffect(() => {\r\n        // シードセレクトダイアログからの遷移\r\n        if (props.focus === -1 && props.seedId != undefined && props.frame != undefined) {\r\n            setSeed({...seed, value: props.seedId});\r\n            setNewFrame({...newFrame, value: props.frame.toString()});\r\n        }\r\n    }, []);\r\n\r\n    const mapping = () => {\r\n        if (props.focus === -1) return;\r\n        const curFuse = fuseList[props.focus];\r\n        setNewFrame({ ...newFrame, value: curFuse.frame.toString() });\r\n        setSeed({ ...seed, value: curFuse.seedId.toString() });\r\n        setFormList(curFuse.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.focus !== -1) mapping();\r\n    }, []);\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                isVisible={store.local.isDispPreset}\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={preset}\r\n                            setCheckable={setPreset}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: preset.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(preset.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        false, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [preset, formList]);\r\n\r\n    return (\r\n        <_Frame\r\n            width={600}\r\n            height={872}\r\n        >\r\n            <_Main\r\n                scrollLock={store.env.scrollLock}\r\n            ><FormUtil.BorderPanel\r\n                    title=\"Base\"\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Frame\"\r\n                            jsx={\r\n                                <FormUtil.TextField\r\n                                    width={100}\r\n                                    isNumber\r\n                                    checkable={newFrame}\r\n                                    setCheckable={setNewFrame}\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        },\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                            errorType: \"value\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Seed\"\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={seed}\r\n                                    setCheckable={(checkable) => {\r\n                                        initFormList(checkable.value);\r\n                                        setSeed({ ...checkable });\r\n                                    }}\r\n                                    list={props.seedList.map(seed => {\r\n                                        return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                {propertiesFormJsx}\r\n            </_Main>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        icon: <MdCancelPresentation />,\r\n                        width: 120,\r\n                        // isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            // setPreset({ ...preset, value: '' });\r\n                            // mapping();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Regist',\r\n                        icon: <AiOutlineEnter />,\r\n                        width: 120,\r\n                        isEnable: isInputOK,\r\n                        callback: () => {\r\n                            let fuse: StoryUtil.Fuse | null = null;\r\n                            let cache: StoryUtil.Cache | null = null;\r\n                            if (props.focus === -1) {\r\n                                fuse = { seq: createSeq(), frame: 0, seedId: '', values: [] };\r\n                                fuseList.push(fuse);\r\n\r\n                                cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                                store.fuseCacheList.push(cache);\r\n                            } else {\r\n                                fuse = fuseList[props.focus];\r\n                                const fuseSeq = fuse.seq;\r\n                                cache = store.fuseCacheList.find(cache => cache.seq === fuseSeq) as StoryUtil.Cache;\r\n                            }\r\n\r\n                            fuse.frame = Number(newFrame.value);\r\n                            fuse.seedId = seed.value;\r\n                            const activeSeed = props.seedList.find(item => {\r\n                                return item.name === seed.value;\r\n                            });\r\n                            // fuse.dispName = activeSeed?.disp;\r\n                            fuse.values = formList.map(form => form.value);\r\n                            dispatcher.story.updateCache(fuse, cache);\r\n                            (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                            store.system.dialog = null;\r\n                            dispatcher.updateStore();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default FuseMainteDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #cfd7dae6;\r\n    border: 1px solid #474747;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    scrollLock: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 70px);\r\n    overflow-y: ${props => !props.scrollLock ? 'auto' : 'hidden'};\r\n`;","import styled, { css, keyframes } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { GrView } from \"react-icons/gr\";\r\nimport { ImCopy } from \"react-icons/im\";\r\nimport assert from \"assert\";\r\n\r\nconst COL_WIDTH_LIST = [48, 252, 150];\r\n\r\nconst OPTION_BUTTON_WIDTH = 112;\r\n\r\nconst FuseList = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const createSeq = () => {\r\n        return storyData.fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const recordJsxList = useMemo(() => {\r\n        return storyData.fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n            \r\n            const curSeed = props.seedList.find(item => {\r\n                return item.name === fuse.seedId;\r\n            });\r\n            assert(curSeed != undefined, 'curSeed is undefined.');\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_Img src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>\r\n                            {/* <_SampleName>{thumb.name}</_SampleName> */}\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            const isFocus = props.focus === i;\r\n            return (<_RecordWrap key={i}\r\n                isFocus={isFocus}\r\n            >\r\n                <_RecordCont\r\n                    onClick={() => {\r\n                        if (props.focus !== i) {\r\n                            props.setFocus(i);\r\n                        } else if (props.focus === i) {\r\n                            props.setFocus(-1);\r\n                        }\r\n                    }}\r\n                >\r\n                    <_ColWrap width={COL_WIDTH_LIST[0]}><_TextItem>{fuse.frame}</_TextItem></_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[1]}>\r\n                        <_TextItem>[{fuse.seq}] {curSeed.disp ?? fuse.seedId}</_TextItem>\r\n                        {/* <_FrameForm\r\n                            type=\"number\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        />\r\n                        <_FrameSlider\r\n                            type=\"range\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        /> */}\r\n                    </_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[2]}><_ImageItem>{thumbJsx}</_ImageItem></_ColWrap>\r\n                </_RecordCont>\r\n                <_Option isFocus={isFocus}>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Edit',\r\n                                icon: <FiEdit />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                // isEnable: props.isModify,\r\n                                callback: () => {\r\n                                    store.system.dialog = <FuseMainteDialog\r\n                                        focus={props.focus}\r\n                                        seedList={props.seedList}\r\n                                        cancelAction={() => {\r\n                                        }}\r\n                                        modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        }}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Copy',\r\n                                icon: <ImCopy />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(storyData.fuseList[props.focus])) as StoryUtil.Fuse;\r\n                                    cloneFuse.seq = createSeq();\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    const cloneCache = JSON.parse(JSON.stringify(store.fuseCacheList[index])) as StoryUtil.Cache;\r\n                                    cloneCache.seq = cloneFuse.seq;\r\n                                    storyData.fuseList.push(cloneFuse);\r\n                                    storyData.fuseList = storyData.fuseList.slice();\r\n                                    store.fuseCacheList.push(cloneCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                icon: <RiDeleteBinLine />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    storyData.fuseList.splice(props.focus, 1);\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    store.fuseCacheList.splice(index, 1);\r\n                                    setStore({ ...store });\r\n                                    props.setFocus(props.focus - 1);\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Test',\r\n                                icon: <GrView />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    dispatcher.story.openPreviewSoloDialog(props.focus);\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_Option>\r\n            </_RecordWrap>);\r\n        });\r\n    }, [storyData.fuseList, props.focus]);\r\n\r\n    return (<>\r\n        <_HeaderDiv>\r\n            <_HeaderItem width={COL_WIDTH_LIST[0]}>F</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[1]}>[Seq] Seed</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[2]}>Snapshot</_HeaderItem>\r\n        </_HeaderDiv>\r\n        <_BodyScrollDiv>\r\n            {recordJsxList}\r\n        </_BodyScrollDiv>\r\n    </>);\r\n}\r\n\r\nexport default FuseList;\r\n\r\nconst _HeaderDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #0c0c0c44;\r\n  /* background: linear-gradient(to bottom, #99a5b9, #c3cee4, #99a5b9); */\r\n  width: calc(100% - 30px);\r\n  height: 36px;\r\n  margin: 0 0 0 5px;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px 2px 0 0;\r\n`;\r\n\r\nconst _HeaderItem = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #feffff36;\r\n  width: ${props => props.width}px;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  font-style: italic;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n`;\r\n\r\nconst _BodyScrollDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #4d6e854e;\r\n  width: calc(100% - 10px);\r\n  height: calc(100% - 36px);\r\n  margin: 0 0 0 5px;\r\n  overflow-y: auto;\r\n`;\r\nconst fadeIn = keyframes`\r\n  from {\r\n    background-color: #bb6f6fa0;\r\n  }\r\n  to {\r\n    background-color: #fabebe58;\r\n  }\r\n`;\r\nconst _RecordWrap = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffff37;\r\n  ${props => !props.isFocus ? '' : css`\r\n      animation: ${fadeIn} 1.2s linear infinite;\r\n  `}\r\n  width: 100%;\r\n  margin: 1px 0 0 0;\r\n  border-radius: 0 0 8px 8px;\r\n`;\r\nconst _RecordCont = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 20px); */\r\n  width: 100%;\r\n  height: 56px;\r\n  margin: 1px 0 0 0;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n`;\r\nconst _Option = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ebffe6f9; */\r\n  width: 100%;\r\n  height: ${props => props.isFocus ? '68' : '0'}px;\r\n  /* height: 0; */\r\n  margin: 1px 0 0 0;\r\n  overflow-y: hidden;\r\n  transition: height 0.1s;\r\n`;\r\n\r\nconst _ColWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  width: ${props => props.width}px;\r\n  margin: 0 2px;\r\n  /* background-color: #ff0000bb; */\r\n  vertical-align: middle;\r\n`;\r\nconst _TextItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffffbc;\r\n  width: 100%;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  padding-left: 6px;\r\n  border-radius: 4px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  /* font-style: italic; */\r\n  color: #7c0025;\r\n  text-align: left;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  /* margin: 8px 2px; */\r\n`;\r\nconst _FrameForm = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #628cffb9; */\r\n  border: 1px solid #242424;\r\n  border-radius: 2px;\r\n  width: 46px;\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n  font-weight: 600;\r\n  color: #180085;\r\n`;\r\nconst _FrameSlider = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffd562ba;\r\n  width: calc(100% - 50px);\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst _ImageItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ffffffbc; */\r\n  width: 100%;\r\n  height: 50px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  /* border-radius: 4px; */\r\n  color: #000850;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n  vertical-align: middle;\r\n  text-align: left;\r\n`;\r\n\r\nconst WND_SIZE = 50;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    /* margin: 0 0 0 2px; */\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\n\r\nexport const FRAME_LINE_WIDTH = 107;\r\n\r\nconst FrameLine = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const screenRate = store.env.screenRate;\r\n\r\n    const [startY, setStartY] = useState<null | number>(null);\r\n    const [startX, setStartX] = useState<null | number>(null);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n\r\n    const frameRateJsxList = useMemo(() => {\r\n        if (ref.current == null) return <></>;\r\n        const clientWidth = ref.current.clientWidth - 10;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        return fuseList.map((fuse, i) => {\r\n            let left: undefined | number = undefined;\r\n            const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n            const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n            if (posXIndex !== -1) {\r\n                const arg = seed.args[posXIndex];\r\n                const min = arg.min as number;\r\n                const max = arg.max as number;\r\n                const range = max - min;\r\n                const val = Number(fuse.values[posXIndex]) - min;\r\n                const rate = val / range;\r\n                left = Math.floor(clientWidth * rate);\r\n            }\r\n            const top = Math.floor(fuse.frame / limitFrame * clientHeight);\r\n            return <_FrameRate key={i}\r\n                isCurr={i === props.focus}\r\n                top={top}\r\n                left={left}\r\n            />\r\n        });\r\n    }, [fuseList, props.focus]);\r\n\r\n    const putAction = (x: number, y: number) => {\r\n        if (props.focus === -1) return;\r\n        setStartY(y);\r\n        setStartX(x);\r\n    }\r\n\r\n    const moveAction = (x: number, y: number) => {\r\n        if (startY == null || startX == null || ref.current == null) return;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        const fuse = fuseList[props.focus];\r\n\r\n        // フレームの移動\r\n        const rate = limitFrame / clientHeight * 2;\r\n        // console.log('read ' + start);\r\n        fuse.frame += Math.floor((y - startY)/screenRate * rate);\r\n        if (fuse.frame < 0) fuse.frame = 0;\r\n        else if (fuse.frame > limitFrame) fuse.frame = limitFrame;\r\n        const prevFocusSeq = fuseList[props.focus].seq;\r\n        fuseList.sort((a, b) => a.frame - b.frame);\r\n        const nowFocusSeq = fuseList[props.focus].seq;\r\n        if (prevFocusSeq !== nowFocusSeq) {\r\n            props.setFocus(fuseList.findIndex(fuse => fuse.seq === prevFocusSeq) as number);\r\n        }\r\n\r\n        // X座標の移動\r\n        const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n        const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n        if (posXIndex !== -1) {\r\n            const arg = seed.args[posXIndex];\r\n            const min = arg.min as number;\r\n            const max = arg.max as number;\r\n            const range = max - min;\r\n            const clientWidth = (ref.current as HTMLDivElement).clientWidth - 10;\r\n            const rate = range / clientWidth * 2;\r\n            let value = Number(fuse.values[posXIndex]);\r\n            value += Math.floor((x - startX)/screenRate * rate);\r\n            // 範囲外に出た場合\r\n            if (value < min) value = min;\r\n            else if (value > max) value = max;\r\n            fuse.values[posXIndex] = value.toString();\r\n            setStartX(x);\r\n        }\r\n\r\n        storyData.fuseList = fuseList.slice();\r\n        setStartY(y);\r\n        // console.log('set ' + start);\r\n        dispatcher.updateStore();\r\n    }\r\n\r\n    const releaseAction = () => {\r\n        setStartY(null);\r\n        setStartX(null);\r\n    }\r\n\r\n    return (\r\n        <_FrameLineDiv ref={ref}\r\n            isEdit={startY != null}\r\n            onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n            onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n            onMouseUp={releaseAction}\r\n            onMouseLeave={releaseAction}\r\n            onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchEnd={releaseAction}\r\n            onTouchCancel={releaseAction}\r\n        >\r\n            {frameRateJsxList}\r\n        </_FrameLineDiv>\r\n    );\r\n}\r\n\r\nexport default FrameLine;\r\n\r\n\r\n\r\nconst _FrameLineDiv = styled.div<{\r\n    isEdit: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${FRAME_LINE_WIDTH}px;\r\n  height: calc(100% - 36px);\r\n  background-color: #5995a790;\r\n  ${props => !props.isEdit ? '' : css`\r\n    background-color: #85b9c990;\r\n  `}\r\n  border: 1px solid #5a0000b8;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  vertical-align: top;\r\n  margin-top: 36px;\r\n`;\r\n\r\nconst _FrameRate = styled.div<{\r\n    isCurr: boolean;\r\n    top: number;\r\n    left?: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  left: 0;\r\n  top: ${props => props.top}px;\r\n  width: 100%;\r\n  ${props => props.left == undefined ? '' : css`\r\n      width: 10px;\r\n      left: ${props.left}px;\r\n  `}\r\n  height: 10px;\r\n  background-color: #627cc5;\r\n  border-radius: 4px;\r\n  border: 1px solid #00000061;\r\n  box-sizing: border-box;\r\n  ${props => !props.isCurr ? '' : css`\r\n      background-color: #e20000;\r\n      z-index: 10;\r\n  `}\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport StoreCloud from \"../../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../../redux/store/store\";\r\nimport { AiOutlineEnter, AiOutlineCheck } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\n\r\nnamespace SeedSelectDialog {\r\n\r\n    export const Component = (props: {\r\n        seedList: FuseBean[];\r\n        addSeed: (seedId: string, seq: number, frame: number) => void;\r\n        newSeq: number;\r\n        newFrame: number;\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, dispatcher } = useContext(GlobalContext);\r\n        const [focusIndex, setFocusIndex] = useState<number>(0);\r\n        const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n\r\n        const storyData = store.storyData as StoryUtil.StoryData;\r\n        const width = 550;\r\n        const height = 758;\r\n\r\n        useEffect(() => {\r\n            newFrame.value = props.newFrame.toString();\r\n            setNewFrame({...newFrame});\r\n        }, []);\r\n\r\n        const seedJsxList = useMemo(() => {\r\n            return props.seedList.map((seed, i) => {\r\n                const isFocus = focusIndex === i;\r\n                return (\r\n                    <_LibItem key={i}\r\n                        isFocus={isFocus}\r\n                        onClick={() => {\r\n                            setFocusIndex(i);\r\n                        }}\r\n                    >\r\n                        <_CheckDiv>{isFocus ? <AiOutlineCheck /> : <></>}</_CheckDiv>\r\n                        <_LibInfo>\r\n                            <_LibName>{seed.disp ?? seed.name}</_LibName>\r\n                            <_LibVersion>{seed.args.length}params</_LibVersion>\r\n                            <_LibOutline>bbb</_LibOutline>\r\n                        </_LibInfo>\r\n                    </_LibItem>\r\n                );\r\n            });\r\n        }, [focusIndex]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                icon: <MdCancelPresentation />,\r\n                width: 120,\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    dispatcher.updateStore();\r\n                }\r\n            },\r\n            {\r\n                label: 'Regist',\r\n                icon: <AiOutlineEnter />,\r\n                width: 120,\r\n                callback: () => {\r\n                    const seed = props.seedList[focusIndex];\r\n                    const isFullParam = seed.args.find(arg => arg.defval == undefined) == undefined;\r\n                    if (!isFullParam) {\r\n                        store.system.dialog = <FuseMainteDialog\r\n                            focus={-1}\r\n                            seedList={props.seedList}\r\n                            seedId={props.seedList[focusIndex].name}\r\n                            frame={Number(newFrame.value)}\r\n                            cancelAction={() => {\r\n                            }}\r\n                            modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                            }}\r\n                        />;\r\n                    } else {\r\n                        props.addSeed(seed.name, props.newSeq, Number(newFrame.value));\r\n                        store.system.dialog = null;\r\n                    }\r\n                    dispatcher.updateStore();\r\n                    if (props.extendAction != undefined) props.extendAction();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select seed!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isNumber\r\n                            checkable={newFrame}\r\n                            setCheckable={setNewFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.SwitchTwoFace\r\n                            label1=\"Seed\"\r\n                            label2=\"Preset\"\r\n                            rate1={50}\r\n                            rate2={50}\r\n                            width={320}\r\n                            isUse={isExtend}\r\n                            isEditable={false}\r\n                            callback={() => {\r\n                                setExtend(!isExtend);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n\r\n                <FormUtil.BorderPanel\r\n                    title=\"Seed\"\r\n                    height={562}\r\n                    // isDisable={store.cloud == null}\r\n                    backgroundColor=\"#ffffff26\"\r\n                    innerJsx={<>\r\n                        {seedJsxList}\r\n                    </>}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SeedSelectDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\n\r\nconst _LibItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: 100px;\r\n    margin: 0 0 4px 4px;\r\n    background-color: #d3d3d3df;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #e4ec9996;\r\n    `}\r\n    border: 1px solid #8f8f8f;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _CheckDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 60px;\r\n    height: 60px;\r\n    margin: 20px 0 0 4px;\r\n    background-color: #e7e7e765;\r\n    border: 1px solid #8f8f8fac;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    font-size: 55px;\r\n    font-weight: 600;\r\n    color: #02db02;\r\n`;\r\n\r\nconst _LibInfo = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 5px;\r\n    position: relative;\r\n    width: calc(100% - 74px);\r\n    vertical-align: top;\r\n    /* background-color: #3fda6129; */\r\n`;\r\n\r\n\r\nconst _LibName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    max-width: calc(100% - 40px);\r\n    height: 50px;\r\n    margin-right: 6px;\r\n    /* background-color: #da3f3f64; */\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #435688;\r\n    overflow-x: hidden;\r\n    line-height: 48px;\r\n`;\r\n\r\nconst _LibVersion = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 34px;\r\n    height: 50px;\r\n    /* background-color: #3f68da63; */\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c7454c;\r\n    vertical-align: top;\r\n    line-height: 58px;\r\n`;\r\n\r\nconst _LibOutline = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 48px;\r\n    background-color: #3fda6129;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\n\r\nnamespace PreviewLauncherFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Play', enable: true, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aec7d8df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { useContext, useMemo, useState, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport FuseList from \"./fuseList\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../../../../contents/create/factory/util/logicElementUtil\";\r\nimport BuildUtil from \"../../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineAppstoreAdd } from \"react-icons/ai\";\r\nimport { FaSortAmountDownAlt } from \"react-icons/fa\";\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { IoSaveOutline } from \"react-icons/io5\";\r\nimport { IoSave } from \"react-icons/io5\";\r\n\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport FrameLine, { FRAME_LINE_WIDTH } from \"./frameLine\";\r\nimport assert from \"assert\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../../../../contents/dialog/confirmDialog\";\r\nimport SaveOptionDIalog from \"../etc/saveOptionDIalog\";\r\nimport SeedSelectDialog from \"./seedSelectDialog\";\r\n\r\nconst SPEditStoryFrame = () => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    const [isPreview, setPreview] = useState<boolean>(false);\r\n    // const [seedId, setSeedId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [presetIndex, setPresetIndex] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [interval, setInterval] = useState<FormUtil.CheckableValue>({ value: store.local.putInterval.toString(), errors: [] });\r\n\r\n    const putInterval = store.local.putInterval;\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [seedList, presetList]: [FuseBean[], StoryUtil.PresetBean[]] = useMemo(() => {\r\n        // if (store.libraryData == null) throw assert('store.libraryDataがnullです。');\r\n        assert(store.libraryData != null);\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n\r\n        const seedList: FuseBean[] = [];\r\n        const presetList: StoryUtil.PresetBean[] = [];\r\n        seedWrapList.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            if (seed.permit === 'release') {\r\n                seedList.push({\r\n                    name: seed.name,\r\n                    disp: seed.disp,\r\n                    args, formgrps, presets\r\n                });\r\n\r\n                presets.forEach(preset => {\r\n                    const dispName = (seed.disp ?? seed.name) + ': ' + preset.name;\r\n                    presetList.push({\r\n                        seedId: seed.name,\r\n                        dispName,\r\n                        values: preset.values\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        return [seedList, presetList];\r\n    }, [store.libraryData]);\r\n\r\n    // useEffect(() => {\r\n    //     const isLoad = fuseList.length > 0 && store.fuseCacheList.length === 0;\r\n    //     if (!isLoad) return;\r\n    //     fuseList.forEach(fuse => {\r\n    //         const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n    //         store.fuseCacheList.push(cache);\r\n    //         dispatcher.story.updateCache(fuse, cache);\r\n    //     });\r\n    //     storyData.fuseList = fuseList.slice();\r\n    //     dispatcher.updateStore();\r\n    // }, [fuseList, store.fuseCacheList]);\r\n\r\n    const getNewFuseProps = (): {\r\n        newSeq: number;\r\n        newFrame: number;\r\n    } => {\r\n        const newSeq = fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n        const newFrame = fuseList.length === 0 ? 0 : fuseList[fuseList.length - 1].frame + putInterval;\r\n        return { newSeq, newFrame };\r\n    }\r\n\r\n    const addSeed = (seedId: string, seq: number, frame: number) => {\r\n        const fuse: StoryUtil.Fuse = {\r\n            seq, frame, seedId: '', values: []\r\n        };\r\n        const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n\r\n        fuseList.push(fuse);\r\n        store.fuseCacheList.push(cache);\r\n\r\n        const seed = seedList.find(s => s.name === seedId);\r\n        assert(seed != null, 'seed is null.');\r\n        fuse.seedId = seedId;\r\n        fuse.values = seed.args.map(arg => {\r\n            let val = arg.defval ?? '0';\r\n            return val;\r\n        });\r\n        dispatcher.story.updateCache(fuse, cache);\r\n        (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"left\"\r\n            isIconButton\r\n            buttons={[\r\n                {\r\n                    label: 'Preview',\r\n                    width: 140,\r\n                    icon: <VscPreview />,\r\n                    isEnable: fuseList.length > 0,\r\n                    callback: () => {\r\n                        fuseList.sort((a, b) => {\r\n                            return a.frame - b.frame;\r\n                        });\r\n                        storyData.fuseList = fuseList.slice();\r\n                        // dispatcher.updateStore();\r\n                        setPreview(true);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Save',\r\n                    width: 140,\r\n                    icon: <IoSaveOutline />,\r\n                    isEnable: true,\r\n                    callback: () => {\r\n                        const local = store.local;\r\n                        const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + store.editing.localSeq.toString();\r\n                        const editingDataVal = localStorage.getItem(fileKey);\r\n                        assert(editingDataVal != null, 'editingData is null.');\r\n                        const editingData = JSON.parse(editingDataVal) as StoreLocalStrage.Project;\r\n                        editingData.lastmod = DataUtil.getStringFromDate(new Date());\r\n                        assert(store.storyData != null, 'store.storyData is null.');\r\n                        editingData.scenarioData = JSON.parse(JSON.stringify(store.storyData));\r\n                        localStorage.setItem(fileKey, JSON.stringify(editingData));\r\n\r\n                        // セーブ完了のダイアログを表示\r\n                        store.system.canDialogClose = true;\r\n                        store.system.dialog = <SaveOptionDIalog.Component />;\r\n                        dispatcher.updateStore();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"fuse\"\r\n            height={644}\r\n            backgroundColor=\"#c9d4dd\"\r\n            innerJsx={<>\r\n                <_SeedDiv>\r\n                    <FormUtil.ButtonItem\r\n                        button={\r\n                            {\r\n                                label: 'Add',\r\n                                width: 150,\r\n                                icon: <AiOutlineAppstoreAdd />,\r\n                                callback: () => {\r\n                                    if (presetIndex.value === '') {\r\n\r\n                                        const newFuse = getNewFuseProps();\r\n                                        store.system.dialog = <SeedSelectDialog.Component\r\n                                            seedList={seedList}\r\n                                            addSeed={addSeed}\r\n                                            newSeq={newFuse.newSeq}\r\n                                            newFrame={newFuse.newFrame}\r\n                                        />;\r\n\r\n                                        // store.system.dialog = <FuseMainteDialog\r\n                                        //     focus={-1}\r\n                                        //     seedList={seedList}\r\n                                        //     cancelAction={() => {\r\n                                        //     }}\r\n                                        //     modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        //     }}\r\n                                        // />;\r\n                                        dispatcher.updateStore();\r\n                                    } else {\r\n                                        const preset = presetList[Number(presetIndex.value)];\r\n                                        console.log(preset);\r\n                                        const seedId = preset.seedId;\r\n                                        const seed = seedList.find(seed => seed.name === seedId) as FuseBean;\r\n                                        const newFuseProps = getNewFuseProps();\r\n                                        const fuse: StoryUtil.Fuse = {\r\n                                            seq: newFuseProps.newSeq,\r\n                                            frame: newFuseProps.newFrame,\r\n                                            seedId: '',\r\n                                            values: []\r\n                                        };\r\n                                        const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n\r\n                                        fuseList.push(fuse);\r\n                                        store.fuseCacheList.push(cache);\r\n\r\n                                        fuse.seedId = seedId;\r\n                                        // fuse.dispName = seed.disp;\r\n                                        fuse.values = preset.values.slice();\r\n                                        dispatcher.story.updateCache(fuse, cache);\r\n                                        (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                                        store.system.dialog = null;\r\n                                        dispatcher.updateStore();\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    />\r\n                    {/* <_FormDiv isDisp={store.local.isDispPreset}>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Preset\"\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={presetIndex}\r\n                                    setCheckable={setPresetIndex}\r\n                                    list={presetList.map((preset, i) => {\r\n                                        return { value: i.toString(), labelText: preset.dispName }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={340}\r\n                                // validates={\r\n                                //     [\r\n                                //         {\r\n                                //             checker: (value) => ValidateUtil.checkRequired(value),\r\n                                //             errorType: \"required\"\r\n                                //         }\r\n                                //     ]\r\n                                // }\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Interval\"\r\n                            jsx={\r\n                                <FormUtil.TextField\r\n                                    width={100}\r\n                                    isNumber\r\n                                    checkable={interval}\r\n                                    setCheckable={setInterval}\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        },\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                            errorType: \"value\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                    </_FormDiv> */}\r\n                </_SeedDiv>\r\n                <_MainDiv>\r\n                    <FrameLine\r\n                        focus={focus}\r\n                        setFocus={setFocus}\r\n                        seedList={seedList}\r\n                    />\r\n                    <_FuseListFrame>\r\n                        <FuseList\r\n                            focus={focus}\r\n                            setFocus={setFocus}\r\n                            seedList={seedList}\r\n                        />\r\n                    </_FuseListFrame>\r\n                </_MainDiv>\r\n            </>}\r\n        />\r\n        {!isPreview ? <></> : <BuildUtil.BuildFrame closeAction={() => {\r\n            setPreview(false);\r\n        }} />}\r\n    </>);\r\n}\r\n\r\nexport default SPEditStoryFrame;\r\n\r\n\r\nconst _SeedDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 84px;\r\n  /* background-color: #be97ca; */\r\n  vertical-align: top;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isDisp: boolean;\r\n}>`\r\n  display: inline-block;\r\n  ${props => !props.isDisp ? '' : css`\r\n      display: none;\r\n  `}\r\n  position: relative;\r\n  width: 492px;\r\n  vertical-align: top;\r\n  /* background-color: #09fc3e; */\r\n  margin: 0 0 0 4px;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100% - 84px);\r\n  /* background-color: #c2ca97; */\r\n`;\r\n\r\nconst _FuseListFrame = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: calc(100% - ${FRAME_LINE_WIDTH}px);\r\n  height: 100%;\r\n  /* background-color: #f80707; */\r\n  vertical-align: top;\r\n`;","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./sPManageFrame\";\r\nimport SPEditStoryFrame from \"./edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\n\r\nconst SPCreateChannel = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isEdit, setEdit] = useState<boolean>(false);\r\n    const hasData = store.libraryData != null;\r\n\r\n    return (<>\r\n        <_SwitchWrap>\r\n            <FormUtil.SwitchTwoFace\r\n                label1=\"Manage\"\r\n                label2=\"Edit\"\r\n                rate1={50}\r\n                rate2={50}\r\n                isUse={isEdit}\r\n                width={550}\r\n                isEditable={hasData}\r\n                isLarge={true}\r\n                callback={() => {\r\n                    setEdit(!isEdit);\r\n                }}\r\n            />\r\n        </_SwitchWrap>\r\n        <_MainDiv>\r\n            {!isEdit ? <SPManageFrame isEdit={isEdit} setEdit={setEdit} /> : <SPEditStoryFrame />}\r\n        </_MainDiv>\r\n    </>);\r\n}\r\n\r\nexport default SPCreateChannel;\r\n\r\nconst _SwitchWrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  text-align: center;\r\n  margin-bottom: 6px;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 60px);\r\n`;","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./create/sPManageFrame\";\r\nimport SPEditStoryFrame from \"./create/edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\nimport LocalStorageUtil from \"../../utils/localStorageUtil\";\r\nimport { MdOutlineCleaningServices } from \"react-icons/md\";\r\nimport ConfirmDialog from \"../../contents/dialog/confirmDialog\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\n\r\nconst SPPropertyChannel = () => {\r\n  const { store, dispatcher } = useContext(GlobalContext);\r\n  const [interval, setInterval] = useState<FormUtil.CheckableValue>({ value: \"\", errors: [] });\r\n  const [isDispPreset, setDispPreset] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (store.system.channelIndex == 3) {\r\n      reload();\r\n      dispatcher.updateStore();\r\n    }\r\n  }, [store.system.channelIndex]);\r\n\r\n  const reload = () => {\r\n    interval.value = localStorage.getItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL) as string;\r\n    setInterval({ ...interval });\r\n    setDispPreset(localStorage.getItem(LocalStorageUtil.KEY_DISP_PRESET) === '0');\r\n\r\n    store.local.putInterval = Number(interval.value);\r\n    console.log(store.local.putInterval);\r\n    store.local.isDispPreset = isDispPreset;\r\n  }\r\n\r\n  return (<>\r\n    <FormUtil.BorderPanel\r\n      title=\"Properties\"\r\n      height={155}\r\n      innerJsx={<>\r\n        <FormUtil.FormRecord\r\n          titleLabel=\"Interval\"\r\n          jsx={\r\n            <FormUtil.TextField\r\n              width={100}\r\n              isNumber\r\n              checkable={interval}\r\n              setCheckable={setInterval}\r\n              validates={[\r\n                {\r\n                  checker: (value) => ValidateUtil.checkRequired(value),\r\n                  errorType: \"required\"\r\n                },\r\n                {\r\n                  checker: (value) => ValidateUtil.checkNumberRange(value, 0, 100),\r\n                  errorType: \"value\"\r\n                }\r\n              ]}\r\n            />\r\n          }\r\n        />\r\n        <FormUtil.FormRecord\r\n          titleLabel=\"Preset\"\r\n          jsx={\r\n            <FormUtil.SwitchTwoFace\r\n              label1=\"Off\"\r\n              label2=\"On\"\r\n              rate1={50}\r\n              rate2={50}\r\n              width={220}\r\n              isUse={isDispPreset}\r\n              callback={() => {\r\n                setDispPreset(!isDispPreset);\r\n              }}\r\n            />\r\n          }\r\n        />\r\n        <FormUtil.ButtonRecord\r\n          align=\"left\"\r\n          buttons={[\r\n            {\r\n              label: 'Save',\r\n              width: 200,\r\n              icon: <MdOutlineCleaningServices />,\r\n              callback: () => {\r\n                store.local.putInterval = Number(interval.value);\r\n                store.local.isDispPreset = isDispPreset;\r\n                localStorage.setItem(LocalStorageUtil.KEY_DISP_PRESET, store.local.isDispPreset ? '0' : '1');\r\n                localStorage.setItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL, interval.value);\r\n\r\n                // 更新完了のダイアログを表示\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                  message=\"Save succesful!\"\r\n                />;\r\n                dispatcher.updateStore();\r\n              }\r\n            },\r\n            {\r\n              label: 'Load',\r\n              width: 200,\r\n              icon: <MdOutlineCleaningServices />,\r\n              callback: () => {\r\n                reload();\r\n                // 読み込み完了のダイアログを表示\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                  message=\"Load succesful!\"\r\n                />;\r\n                dispatcher.updateStore();\r\n              }\r\n            }\r\n          ]} />\r\n      </>}\r\n    />\r\n    <FormUtil.ButtonRecord\r\n      align=\"left\"\r\n      buttons={[\r\n        {\r\n          label: 'Local storage all clear',\r\n          width: 300,\r\n          icon: <MdOutlineCleaningServices />,\r\n          callback: () => {\r\n            localStorage.removeItem(LocalStorageUtil.KEY_LOGIN_HASH);\r\n            localStorage.removeItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL);\r\n            const seqMax = Number(localStorage.getItem(LocalStorageUtil.KEY_SCENARIO_SEQ));\r\n            for (let i = 0; i <= seqMax; i++) {\r\n              localStorage.removeItem(LocalStorageUtil.KEY_SCENARIO_PREFIX + i.toString());\r\n            }\r\n            localStorage.removeItem(LocalStorageUtil.KEY_SCENARIO_SEQ);\r\n\r\n            const local = store.local;\r\n            local.maxSeq = 0;\r\n            local.projects = [];\r\n            store.editing.localSeq = -1;\r\n\r\n            // 削除完了のダイアログを表示\r\n            store.system.dialog = <ConfirmDialog.Component\r\n              message=\"All clear succesful!\"\r\n            />;\r\n            dispatcher.updateStore();\r\n          }\r\n        }\r\n      ]} />\r\n  </>);\r\n}\r\n\r\nexport default SPPropertyChannel;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n`;","import ReleaseNote from \"../../contents/home/releaseNote\";\r\n\r\nconst SPInforChannel = () => {\r\n\r\n    return (<ReleaseNote />);\r\n}\r\n\r\nexport default SPInforChannel;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { Audio, ThreeDots } from 'react-loader-spinner'\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\n\r\n\r\nconst SyncBlind = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n\r\n    return (<_Blind isDisp={store.system.isSync}>\r\n        <_Animation>\r\n            <ThreeDots\r\n                height=\"200\"\r\n                width=\"200\"\r\n                color=\"#4c7cc5\"\r\n            />\r\n        </_Animation>\r\n        <_Message>Now loading...</_Message>\r\n    </_Blind>);\r\n}\r\n\r\nexport default SyncBlind;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisp: boolean;\r\n}>`\r\n    display: block;\r\n    ${props => props.isDisp ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #fefeffa1;\r\n    z-index: 12;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Animation = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 260px;\r\n    /* width: calc(100% - 100px);\r\n    height: 100px; */\r\n    /* background-color: #1313775c; */\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: relative;\r\n    /* margin-top: 10px; */\r\n    /* width: calc(100% - 100px);\r\n    height: 100px; */\r\n    /* background-color: #0505dab5; */\r\n    color: #4c7cc5;\r\n    font-weight: 600;\r\n    font-size: 60px;\r\n    text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\nimport { SPUtil } from \"./spUtil\";\r\nimport { initialStore } from \"../redux/store/store\";\r\nimport Splash from \"../contents/entry/splash\";\r\nimport { ChannelPane } from \"../base/components/tab/channelPane\";\r\n\r\nimport { VscGitPullRequestCreate } from \"react-icons/vsc\";\r\nimport { BiInfoSquare } from \"react-icons/bi\";\r\nimport { VscSymbolProperty } from 'react-icons/vsc';\r\nimport { TbLogicAnd } from \"react-icons/tb\";\r\nimport SPLibraryChannel from \"./contents/sPLibraryChannel\";\r\nimport GloballDialog from \"../contents/dialog/globalDialog\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../utils/systemConst\";\r\nimport SPCreateChannel from \"./contents/create/sPCreateChannel\";\r\nimport TotalHeader from \"../contents/entry/totalHeader\";\r\nimport SPPropertyChannel from \"./contents/sPPropertyChannel\";\r\nimport SPInforChannel from \"./contents/sPInfoChannel\";\r\nimport { GlobalContext } from \"../contents/entry/systemEntry\";\r\nimport SyncBlind from \"../contents/dialog/syncBlind\";\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\nconst SPRoot = (props: {\r\n    hashKey?: string;\r\n}) => {\r\n    // const [store, setStore] = useState(initialStore);\r\n  const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <_SplashDiv>\r\n            <Splash\r\n                remove={() => {\r\n                    store.system.isSplash = false;\r\n                    dispatcher.updateStore();\r\n                }}\r\n            />\r\n        </_SplashDiv>\r\n    );\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = SPUtil.SCREEN_WIDTH;\r\n            const ch = SPUtil.SCREEN_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n            store.env.screenRate = rate;\r\n            dispatcher.updateStore();\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        store.system.isSPMode = true;\r\n        dispatcher.updateStore();\r\n\r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', () => {\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        let mainJsx = <></>;\r\n        if (props.hashKey != undefined) {\r\n            const projectSeq = DataUtil.getDecryptionedProjectSeq(props.hashKey);\r\n            mainJsx = <DirectLinkManager scenarioSeq={projectSeq} />;\r\n        } else {\r\n            mainJsx = (\r\n                <ChannelPane\r\n                    isLandscape={false}\r\n                    tabElements={[\r\n                        { name: 'Info', icon: <BiInfoSquare />, isEnable: true, cont: <SPInforChannel /> },\r\n                        { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <SPCreateChannel /> },\r\n                        { name: 'Library', icon: <TbLogicAnd />, isEnable: true, cont: <SPLibraryChannel /> },\r\n                        // { name: 'Library', icon: <TbLogicAnd />, isEnable: false, cont: <></>},\r\n                        { name: 'Property', icon: <VscSymbolProperty />, isEnable: true, cont: <SPPropertyChannel /> },\r\n                    ]}\r\n                    activeNo={store.system.channelIndex}\r\n                    selectTabIndex={(index: number) => {\r\n                        store.system.channelIndex = index;\r\n                        dispatcher.updateStore();\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        jsx = (\r\n            <_Contents>\r\n                {splashJsx}\r\n                <GloballDialog />\r\n                <SyncBlind />\r\n                <TotalHeader />\r\n                <_ChannelWrap>\r\n                    {mainJsx}\r\n                </_ChannelWrap>\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SPRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _ChannelWrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #dbdfe7;\r\n  width: 100%;\r\n  height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${SPUtil.SCREEN_WIDTH}px;\r\n  height: ${SPUtil.SCREEN_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _SplashDiv = styled.div`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 50%;\r\n    top: 400px;\r\n    transform-origin: center;\r\n    transform: scale(0.7);\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport BuildUtil from \"../../contents/create/preview/buildUtil\";\r\nimport PreviewLauncherFrame from \"../../contents/create/preview/previewLauncherFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport { Store } from \"../store/store\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private setStore: (store: Store) => void;\r\n\r\n    constructor(store: Store, setStore: (store: Store) => void) {\r\n        this.store = store;\r\n        this.setStore = setStore;\r\n    }\r\n\r\n    public updateStore = () => {\r\n        this.setStore({ ...this.store });\r\n    }\r\n\r\n    public syncProccess = (proc: Promise<void>) => {\r\n        const sys = this.store.system;\r\n        sys.isSync = true;\r\n        this.updateStore();\r\n        proc.then(()=>{\r\n            sys.isSync = false;\r\n            this.updateStore();\r\n        });\r\n    }\r\n\r\n    public system = {\r\n        // setUserEnv: (userEnv: UserEnv) => {\r\n        // },\r\n    }\r\n    public story = {\r\n\r\n        /**\r\n         * プレビューオールダイアログを表示する\r\n         */\r\n        openPreviewAllDialog: () => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(def => {\r\n                        if (def.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                        } else if (def.frame > frame) return 1;\r\n                    });\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n        /**\r\n         * プレビューソロダイアログを表示する\r\n         */\r\n        openPreviewSoloDialog: (focus: number) => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    const def = fuseList[focus];\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n\r\n        updateCache: (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n\r\n            cache.thumbList = [];\r\n            cache.useFrame = 0;\r\n            const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                    }\r\n\r\n                    const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                    if (thumb != undefined) {\r\n                        const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        });\r\n                        cache.thumbList.push({ name: thumb.name, url });\r\n                    }\r\n                },\r\n                doEnd: (frame) => {\r\n                    cache.useFrame = frame;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport MobileRoot from '../../sp/mobileRoot';\r\nimport PCRoot from './pCRoot';\r\nimport SPRoot from '../../sp/sPRoot';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport DataUtil from '../../utils/dataUtil';\r\nimport SystemConst from '../../utils/systemConst';\r\nimport LocalStorageUtil from '../../utils/localStorageUtil';\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    // const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    const dispatcher = new Dispatcher(store, setStore);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    useEffect(() => {\r\n        // ローカルストレージから情報取得\r\n        LocalStorageUtil.load(store, dispatcher.updateStore);\r\n        dispatcher.updateStore();\r\n    }, []);\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore, dispatcher }}>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    {/* <PCRoot /> */}\r\n                    {!SystemConst.IS_SP ? <PCRoot /> : <SPRoot />}\r\n                </Route>\r\n                {/* <Route path=\"/sp\" exact >\r\n                    <SPRoot />\r\n                </Route> */}\r\n                {/* <Route path=\"/library\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route> */}\r\n                <Route path=\"/share\" exact >\r\n                    <SPRoot hashKey={str} />\r\n                </Route>\r\n            </Switch>\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    const DEFAULT_LABEL_WIDTH = 140;\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnabled?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        const lablelWidth = props.labelWidth ?? DEFAULT_LABEL_WIDTH;\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnabled ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={lablelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n        isRecordItem?: boolean;\r\n    }) => {\r\n        let width: string | undefined = undefined;\r\n        if (props.isRecordItem) width = `calc(100% - ${DEFAULT_LABEL_WIDTH + 16}px)`;\r\n        if (props.width != undefined) width = props.width + 'px';\r\n        return (\r\n            <_FixedLabel width={width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const isEnabled = props.isEnabled ?? true;\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            if (!isEnabled) props.checkable.errors.length = 0;\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={!isEnabled || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            // isEnable={isEnable}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        const isEnabled = props.isEnabled ?? true;\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            if (!isEnabled) props.checkable.errors.length = 0;\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={!isEnabled || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export const TextArea = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n    }) => {\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemnTextArea\r\n                value={value}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                }}\r\n                // errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        icon?: JSX.Element;\r\n        interval?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        isIconButton?: boolean;\r\n        interval?: number;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        const interval = props.interval ?? 4;\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n                height={!props.isIconButton ? 40 : 68}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    if (button.icon == undefined) {\r\n                        return (\r\n                            <_Button\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                interval={interval}\r\n                                onClick={button.callback}\r\n                            >{button.label}</_Button>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <_IconButton\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                interval={interval}\r\n                                onClick={button.callback}\r\n                            >{button.icon}<br />{button.label}</_IconButton>\r\n                        );\r\n                    }\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        const button = props.button;\r\n        const interval = button.interval ?? 4;\r\n        if (button.icon == undefined) {\r\n            return (\r\n                <_Button\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    interval={interval}\r\n                    onClick={button.callback}\r\n                >{button.label}</_Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <_IconButton\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    interval={interval}\r\n                    onClick={button.callback}\r\n                >{button.icon}<br />{button.label}</_IconButton>\r\n            );\r\n        }\r\n        // return (\r\n        //     <_Button\r\n        //         isCenter={false}\r\n        //         isEnable={props.button.isEnable ?? true}\r\n        //         width={props.button.width}\r\n        //         onClick={props.button.callback}\r\n        //     >{props.button.label}</_Button>\r\n        // );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        isVisible?: boolean;\r\n        height?: number;\r\n        backgroundColor?: string;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        const isVisible = props.isVisible ?? true;\r\n        const isEnable = props.isEnable ?? true;\r\n        const backgroundColor = props.backgroundColor ?? '#cedadd';\r\n        return (<>\r\n            {!isVisible ? <></> : <_BorderText>{props.title}</_BorderText>}\r\n            <_BorderPanel\r\n                isEnable={isEnable}\r\n                isVisible={isVisible}\r\n                height={props.height}\r\n                backgroundColor={backgroundColor}\r\n            >{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const SwitchTwoFace = (props: {\r\n        label1: string;\r\n        label2: string;\r\n        width: number;\r\n        rate1: number;\r\n        rate2: number;\r\n        isUse: boolean;\r\n        isEditable?: boolean;\r\n        isEnable?: boolean;\r\n        isLarge?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isEnable = props.isEnable ?? true;\r\n        const isEditable = props.isEditable ?? true;\r\n        return (<_SwitchTwoFace\r\n            isEnable={isEnable}\r\n            isEditable={isEditable}\r\n            width={props.width}\r\n            isLarge={props.isLarge ?? false}\r\n            onClick={props.callback}\r\n        >\r\n            <_SwitchItem\r\n                isUse={isEnable && !props.isUse}\r\n                rate={props.rate1}\r\n                isLeft={true}\r\n                isEditable={isEditable}\r\n                isLarge={props.isLarge ?? false}\r\n            >{props.label1}</_SwitchItem>\r\n            <_SwitchItem\r\n                isUse={isEnable && props.isUse}\r\n                rate={props.rate2}\r\n                isLeft={false}\r\n                isEditable={isEditable}\r\n                isLarge={props.isLarge ?? false}\r\n            >{props.label2}</_SwitchItem>\r\n        </_SwitchTwoFace>);\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n    height?: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: ${props => props.height ?? '40'}px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #b4c0c7fa, #d8d8d8, #b4c0c7fa);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: string;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width};\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n    // isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n    interval: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 ${props => props.interval}px;\r\n    ${props => !props.isCenter ? css<{ interval: number }>`\r\n        margin-left: ${props => props.interval}px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _IconButton = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n    interval: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    height: 58px;\r\n    padding: 4px 0 0 0;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 ${props => props.interval}px;\r\n    ${props => !props.isCenter ? css<{ interval: number }>`\r\n        margin-left: ${props => props.interval}px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _SwitchTwoFace = styled.div<{\r\n    isEnable: boolean;\r\n    isEditable: boolean;\r\n    width: number;\r\n    isLarge: boolean;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    ${props => !props.isLarge ? css`\r\n        ${Styles.CSS_LABEL_MIDIUM}\r\n    ` : css`\r\n        ${Styles.CSS_LABEL_LARGE}\r\n    `}\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEditable ? '' : css`    \r\n        pointer-events: none;\r\n    `}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* opacity: 0.7; */\r\n    }\r\n`;\r\n\r\nconst _SwitchItem = styled.div<{\r\n    isUse: boolean;\r\n    rate: number;\r\n    isLeft: boolean;\r\n    isEditable: boolean;\r\n    isLarge: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* line-height: 25px; */\r\n    border-top: 1px solid #747474;\r\n    border-bottom: 1px solid #747474;\r\n    text-align: ${props => props.isLeft ? css`\r\n        border-left: 1px solid #747474;\r\n    ` : css`\r\n        border-right: 1px solid #747474;\r\n    `};\r\n    text-align: ${props => props.isLeft ? 'right' : 'left'};\r\n    box-sizing: border-box;\r\n    background-color: #8fa2aa;\r\n    color: #515151;\r\n    ${props => !props.isLarge ? css<{isLeft: boolean}>`\r\n        padding: 0 10px;\r\n        font-size: 16px;\r\n        border-radius: ${props => props.isLeft ? '8px 0 0 8px' : '0 8px 8px 0'};\r\n    ` : css<{isLeft: boolean}>`\r\n        font-size: 22px;\r\n        padding: 10px 10px;\r\n        border-radius: ${props => props.isLeft ? '22px 0 0 22px' : '0 22px 22px 0'};\r\n    `}\r\n    ${props => props.isEditable ? css`\r\n        ${!props.isUse ? '' : css<{isLarge: boolean}>`\r\n            color: #b30000;\r\n            ${props => !props.isLarge ? css`\r\n                font-size: 22px;\r\n            ` : css`\r\n                font-size: 28px;\r\n            `}\r\n            background-color: #dae7ec;\r\n            ${props => !props.isLarge ? css`\r\n                font-size: 22px;\r\n            ` : css`\r\n                font-size: 28px;\r\n            `}\r\n        `}\r\n    ` : css`\r\n        ${!props.isUse ? '' : css<{isLarge: boolean}>`\r\n            color: #110070;\r\n            ${props => !props.isLarge ? css`\r\n                font-size: 22px;\r\n            ` : css`\r\n                font-size: 28px;\r\n            `}\r\n            background-color: #dae7ec;\r\n        `};\r\n    `}\r\n    vertical-align: top;\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    height?: number;\r\n    backgroundColor: string;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    ${props => props.height == undefined ? '' : css`\r\n        height: ${props.height}px;\r\n    `}\r\n    background-color: ${props => props.backgroundColor};\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    overflow-y: auto;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;\r\n\r\n\r\nconst _ItemnTextArea = styled.textarea<{\r\n\r\n}>`\r\n   display: inline-block;\r\n   width: 100%;\r\n   height: 100%;\r\n   background-color: #ebf5f5;\r\n   font-size: 18px;\r\n   color: black;\r\n   border: none;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n`;","import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { ProjectType, Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const DATABASE_NAME = 'pf2';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pf-webcache', 16);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        let decryptioned = -1;\r\n        try {\r\n            decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        } catch (e) {\r\n            console.error('decode error');\r\n        }\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pf', 8);\r\n    }\r\n\r\n    export const getHashedFromProjectSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedProjectSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    // export const getPreviewURL = (scoreSeq: number) => {\r\n    //     const hashedKey = getHashedFromProjectSeq(scoreSeq);\r\n    //     const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n    //     return url;\r\n    // }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: DATABASE_NAME })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findUserLibdvList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI(\r\n            'select',\r\n            `SELECT owner, seq, name, source, lastmod FROM libdvtbl WHERE owner = ${userSeq} order by seq`\r\n        );\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle = fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            const data = JSON.parse(text);\r\n            // シナリオであるかどうかの判定\r\n            if (!data.hasOwnProperty('scenarioData')) {\r\n                store.libraryData = data;\r\n            } else {\r\n                const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioProps.libraryData;\r\n                store.storyData = scenarioProps.scenarioData;\r\n            }\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFileBak = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const saveLibraryFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        const plainData = JSON.stringify(rootData);\r\n        saveFile(store, setStore, plainData, 'plgc');\r\n    }\r\n\r\n    export const saveScenarioFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        }\r\n        const plainData = JSON.stringify(data);\r\n        saveFile(store, setStore, plainData, 'pstr');\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>, plainData: string, extension: string) => {\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': [`.${extension}`],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    // export const getDirectUrl = (seq: number) => {\r\n    //     return `${APP_SERVER_DOMAIN}/#/story?v=${getHashedFromProjectSeq(seq)}`;\r\n    // }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}