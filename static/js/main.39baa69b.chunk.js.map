{"version":3,"sources":["system/base/design/styles.tsx","system/contents/dialog/confirmDialog.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/contents/graphic/drawUtil.tsx","system/redux/store/storeDesign.tsx","system/redux/store/store.tsx","system/contents/dialog/globalDialog.tsx","system/utils/systemConst.tsx","system/utils/canvasUtil.tsx","system/utils/form/validateUtil.tsx","system/utils/localStorageUtil.tsx","system/base/components/tab/tabbedPane.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/utils/treeUtil.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/base/components/tab/channelPane.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/util/drawableVectorChooser.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/util/logicFormUtil.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/sp/spUtil.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/previewLauncherFrameSp.tsx","system/contents/create/preview/buildUtil.tsx","system/contents/create/preview/previewLogicFrame.tsx","system/contents/create/manage/nameDefDialog.tsx","system/contents/create/factory/logicMainteTab.tsx","system/sp/contents/create/etc/shareCloudUtil.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/createChannel.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/pCRoot.tsx","system/sp/directLinkManager.tsx","system/sp/contents/sPLibraryChannel.tsx","system/sp/contents/create/etc/shareDialog.tsx","system/sp/contents/create/etc/libraryLoader.tsx","system/sp/contents/create/etc/newScenarioDialog.tsx","system/sp/contents/create/etc/nameDefDialogLocal.tsx","system/sp/contents/create/etc/saveOptionDIalog.tsx","system/sp/contents/create/sPManageFrame.tsx","system/sp/contents/create/edit/fuseMainteDialog.tsx","system/sp/contents/create/edit/fuseList.tsx","system/sp/contents/create/edit/frameLine.tsx","system/sp/contents/create/edit/seedSelectDialog.tsx","system/contents/create/preview/previewLauncherFrame.tsx","system/sp/contents/create/edit/sPEditStoryFrame.tsx","system/sp/contents/create/sPCreateChannel.tsx","system/sp/contents/sPPropertyChannel.tsx","system/sp/contents/sPInfoChannel.tsx","system/contents/dialog/syncBlind.tsx","system/sp/contents/sPDesignChannel.tsx","system/sp/sPRoot.tsx","system/redux/dispatcher/dispatcher.tsx","system/contents/entry/systemEntry.tsx","system/utils/form/formUtiil.tsx","system/utils/dataUtil.tsx"],"names":["Styles","_Styles","FONT_SMALL","FONT_MIDIUM","FONT_LARGE","CSS_LABEL","css","_templateObject7","_taggedTemplateLiteral","CSS_LABEL_SMALL","_templateObject8","CSS_LABEL_MIDIUM","_templateObject9","CSS_LABEL_LARGE","_templateObject10","CSS_BUTTON_DISABLE","_templateObject11","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ConfirmDialog","Component","props","_props$width","_props$height","_props$buttons","_useContext","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_objectSpread","_jsxs","_Frame","children","_jsx","_Main","_Inner","message","split","map","msg","i","FormUtil","Message","isCenter","ButtonRecord","align","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","SystemEntry","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","window","addEventListener","navigator","serviceWorker","register","registration","console","log","catch","error","warn","documentElement","touches","length","preventDefault","passive","t","now","Date","getTime","ReactDOM","render","React","StrictMode","getElementById","DrawUtil","_DrawUtil","createGradDrawer","param","_param$radius","radiusBase","radius","self","ctx","_convertRgbaFromColor","undefined","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","frame","shrinkStartRate","start","Math","floor","limit","x","pos","y","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","color","r","b","a","push","offset","convertColorCodeFromRgba","forEach","grad","addColorStop","globalAlpha","disappearStartRate","fillStyle","beginPath","arc","PI","fill","code","value","Number","parseInt","substring","r1","g1","b1","a1","toString","slice","concat","toWhite","subset","assert","StoreDesign","_StoreDesign","presets","name","base1","base2","base3","base4","sub1","sub2","sub3","accent1","accent2","accent3","text1","text2","text3","text4","getPreset","preset","find","p","initialStore","isSplash","user","isSync","canDialogClose","isSPMode","logoutActions","channelIndex","cloud","env","screenRate","scrollLock","libraryData","storyData","fuseCacheList","local","maxSeq","projects","putInterval","isDispPreset","editing","localSeq","libName","fileHandle","design","GloballDialog","_Fragment","_Blind","onClick","_SystemConst","AUTH_TEXT_WIDTH","AUTH_TEXT_HEIGHT","IS_SP","APP_VERSION","APP_PRODUCT_SERVER_DOMAIN","APP_SERVER_DOMAIN","EDGE_PREFIX","SystemConst","CanvasUtil","_CanvasUtil","createURL","draw","canvas","createElement","getContext","toDataURL","getTitleURL","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillText","adjust","measureText","save","getLogoURL","WIDTH","cos","sin","getAuthTextURL","text","SIZE","rotate","char","charAt","fontRand","random","alphaRand","ValidateUtil","_ValidateUtil","checkRequired","str","checkStringLength","min","max","checkAsciiChars","checkIncludesChars","list","ch","indexOf","checkNumber","isNaN","checkNumberRange","num","checkAll","conditions","result","checkArrayNumber","v","LocalStorageUtil","TabbedPane","_props$tabRecordNum","_useState","useState","activeNo","_useState2","_slicedToArray","setActiveNo","tabRecordNum","_LabelList","tabElements","tab","index","TabLabel","isActive","isEnable","enable","selectTab","selectTabIndex","_ContList","TabContents","cont","_TabLabel","_Contents","AccountFrame","tabIndex","setTabIndex","_useState3","errors","_useState4","userId","setUserId","_useState5","_useState6","oldPass","setOldPass","_useState7","_useState8","newPass","setNewPass","_useState9","_useState10","newPassConfirm","setNewPassConfirm","_useState11","_useState12","email","setEmail","_useState13","_useState14","userIdList","setUserIdList","_useState15","_useState16","emailList","setEmailList","_useState17","_useState18","isModify","setModify","loginProps","reloadInfo","id","password","DataUtil","findUserInfoList","info","hash","getHashedFromUserSeq","seq","history","replaceState","userTabJsx","_Wrap","InputTextFormBak","titleLabel","checkable","setCheckable","validates","checker","errorType","marginTop","isReadOnly","isPassword","dependency","permitRegist","_Header","_Body","_Footer","passwordStr","sendQueryRequestToAPI","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","useMemo","isVisible","BorderPanel","title","innerJsx","placeholder","InfoFrame","textRecords","_AuthText","src","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","results","nextSeq","wrap","_context","prev","next","sent","json","JSON","stringify","cnt","getNextUserSeq","stop","MessageLink","clickAction","img","_LocalStorageUtil","DEFAULT_FILE_NAME_PREFIX","KEY_LOGIN_HASH","KEY_SCENARIO_SEQ","KEY_SCENARIO_PREFIX","KEY_DISP_PRESET","KEY_PROP_PUT_INTERVAL","load","update","userHash","localStorage","getItem","userSeq","getDecryptionedUserSeq","resPrjList","findUserInfoSeq","findUserLibdvList","res","source","lastmod","removeItem","scenarioSeq","setItem","parse","TreeUtil","_TreeUtil","LoginLogin","isForget","setForget","findUserInfoLogin","type","findUserInfoFromEmail","url","sendQueryRequestToMailAPI","from","to","subject","LoginFrame","isCreate","setCreate","logo","_LogoDiv","_TypeSwitch","input","TotalHeader","_useMemo","_useMemo2","titleURL","logoURL","authButtonJsx","_LoginButton","textColor","bgColor","location","origin","ImUser","_UserName","isEntry","func","grad1","grad2","_Logo","replace","_Title","_Menu","_MenuItem","TOTAL_HEADER_WIDTH","ChannelPane","_props$isLandscape","isLandscape","ChannelLabel","icon","ChannelContents","_Item","borderColor","_Icon","_Label","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","createNode","data","parent","depth","isOpen","getChildIndex","node","parentNode","Frame","_props$isDisable","_props$focusNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","buildJsxRecords","element","spaceList","isCurrent","_Record","current","scrollWidth","isRelation","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","Instance","_createClass","_this","_classCallCheck","owner","prevPos","vec","isLive","drawer","extend","xy","this","_Particle","Particle","Vector","rad","len","syncFromXY","sqrt","atan2","syncFromRad","_VectorUtil","VectorUtil","VisualParamType","_ParamUtil","VisualParams","Object","values","BehaviorParamType","BehaviorParams","SelfParamType","SelfParams","ExtendParamType","ExtendParams","EffectParamType","EffectParams","ModulateParamType","ModulateParams","ConstantType","Constants","ParamUtil","ModulateBuilder","extendList","decayRate","decayLimit","gravity","gravityLimit","PreviewUtil","_PreviewUtil","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","buildLogicProps","rootData","initialValueMapList","initailArrayMapList","createParticleRec","cur","parentValueMapList","parentArrayMapList","_searchElement","_searchElement2","valueMapList","ConstantValueMap","arr","array","fieldMng","mngs","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","_connector$disable","_searchElement3","connector","disable","logicItem","method","logicMng","defs","def","searchDependLogic","depend","_convertParamsToBoole","addValueMap","item","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","_loop","_searchElement4","iterateValueMap","LOOP_ITERATE","iterateArrayMap","_arr$array$i","sendValueMapList","filter","isArray","_convertParamsToValue","sendArrayMapList","_convertParamsToArray","convertParamsToArray","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","warpList","_warpList$find","formula","valueMap","m","formulaStr","varCnt","formulaItems","convertFormulaToBoolean","arrayMapList","RADIAN_ROUND","ModifyOperations","EditorArgumentMng","FactoryTreeContext","setFocusNode","newNode","LogicElementUtil","addChild","_props$isInputOK","removeSelf","isComplete","isCompleteCheck","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","SendTemplateDialog","EditorArgumentItem","_node$parent","_useContext2","logicNode","setName","argType","setArgType","reservedList","_node$parent2","_node$parent2$parent","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","FormRecord","jsx","TextField","LogicUtil","checkFieldName","Combobox","ArgTypes","labelText","headBlank","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","mng","visualMng","behaviorMng","inhMng","inh","_LogicElementUtil$get","_LogicElementUtil$get2","inhfld","getInnerWrap","syncParamName","_logicNode$parent","runRec","logic","conn","inhLogic","getInnerWrapFixed","sendMng","seedMng","interfaceWrap","_logicNode$parent2","connWrap","syncArgumentCallback","_logicNode$parent3","inhMngNode","getInnerNodeFixed","seedNode","interfaceNode","sendNode","entry","newArgName","paramWrap","createParamWrap","delArgName","delIndex","some","splice","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","el","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","listPos","wrapElement","removeChild","insertChild","getDefaultLogicMngs","syncLogicName","Record","textAlign","Switch","isUse","argumentNode","getInnerNode","hasArgument","args","fieldNode","hasField","inheritNode","hasInherit","getReplicateButton","getLocgicRefers","logicName","searchLogicReferInherit","logicMngNode","Level","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","SEED","argumentList","arrayArgList","fieldKeys","parentType","_getLogicNode","_node$parent3","_node$parent4","_node$parent4$parent","_node$parent4$parent$","getLogicNode","argMng","arg","fieldName","_node$parent5","Error","_node$parent6","inhfldNode","_node$parent7","fieldKeyList","paramNameList","_node$parent8","_node$parent8$parent","addNum","delNum","parenthesisBalance","formJsxList","labelWidth","ParamInputTypes","_param$isArray","marginLeft","isNumber","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","_param$isArray2","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","_mngNode$parent","_mngNode$parent2","_LogicElementUtil$get3","_LogicElementUtil$get4","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","size","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","_disable","identify","setIdentify","setMethod","setDepend","defaultName","getNumberingOnPrefixName","logicList","idList","initConnectorNode","syncTreeElementFromWrap","_newNode$parent","initSendParams","sendParamList","_sendNode$parent","dependItem","argWrap","getSendParamList","curParamList","isChange","ConnectTypes","isEnabled","dependLogic","inherit","newWrap","getChildrenElementNode","rootNode","clone","_SendTemplateDialog","COMPONENT_WIDTH","ConnectParentPosition","xName","setXName","yName","setYName","_props$node$parent","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","SetParentPosition","paramList","xParam","yParam","DrawableVectorChooser","_DrawableVectorChooser","EditorSendManager","isDepend","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","disp","setDisp","setEntry","permit","setPermit","_param$disp","logicNameList","seed","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","WND_SIZE","EditorThumbnailItem","_node$parent$parent","seedWrap","setFrame","urls","setUrls","setTimeout","sample","getThumbnailURL","targetFrame","sampleNo","frameCnt","_node$parent3$parent","argMap","sendParams","send","_PreviewUtil$convertP","getSeedValueMap","_LogicElementUtil$get5","_PreviewUtil$convertP2","getSeedArrayMap","par","_ret","pictureJsxList","_LogicElementUtil$get6","imgJsx","_IMG","_SampleDiv","_SampleName","_CanvasDiv","FRAME_WIDTH","ComponentNormal","isDraw","setDraw","pointJsxList","xList","yList","_Point","putAction","clientRect","getBoundingClientRect","posX","posY","addPoint","moveAction","subX","subY","releaseAction","FixedText","isRecordItem","onMouseDown","clientX","clientY","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","pageX","pageY","onTouchMove","onTouchEnd","onTouchCancel","_Center","clear","ComponentColorable","colorHistory","setColorHistory","setR","setG","setB","rList","gList","bList","colorCode","_PointColorable","colorHistoryJsxList","_ColorItem","shift","addColorHistory","_Color","onChange","target","LogicFormUtil","buildPreviewForms","formgrpList","formList","setFormList","usedGrps","form","argument","formgrp","grp","targetForms","j","_Message","_Type","_Range","formIndex","disabled","xValue","yValue","join","rValue","gValue","bValue","labelName","step","_Tsumami","EditorSampleItem","paramForms","setParamForms","argInfoList","formgrpMng","defines","seedargList","defval","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","setStep","setDefval","isPosX","setPosX","setArray","_param$isPosX","curIndex","getCurrentIndex","getSwapButtonsCallback","isUpper","sampleMng","swapNode","sendMngWrap","_arg$defval","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","_LogicUtil","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","getNodeDisplayJsx","isFocus","_Category","backgroundColor","detailJsx","_Span","_Field","_EditableValue","_data2$disable","_Signature","_Detail","nameJsx","_ValueType","getTypeName","getDetailComponent","FactDetSeedMng","FactDetArgumentMng","FactDetBehiviorMng","wrapNode","get","listName","elementNode","getChildrenDataNode","_LogicElementUtil","_len","arguments","typeList","_key","_len2","_key2","innerNode","apply","_len3","_key3","getListParamName","_len4","_key4","innerWrap","isHead","isTail","ownerChildren","parentWrap","findIndex","swapOrder","ownDataChildren","curNo","swapData","_len5","dependencyMngNodes","_key5","depNode","replicateSameLevel","cloneBase","cloneDest","namable","getNamableProps","targetElement","getIdentifyParamName","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","findSeedWrap","getInitialData","nameList","curWrap","nameParam","mngWrap","listParam","getLogicNameList","curLogicOwner","prefix","_getLogicItem","mngType","_node$parent5$parent","_node$parent5$parent$","_node$parent5$parent$2","getLogicItem","seedId","doParticleJob","fuse","_logicMng$defs$find","getOrigin","seedargMng","seedarg","getSendingValueMap","getSendingArrayMap","getSeedProperties","seedsendList","thumbnailList","_logicMng$defs$find2","SPUtil","_SPUtil","PreviewLogicInputForm","logicWrap","setSendingValueMap","setSendingArrayMap","PreviewSeedInputForm","template","setTemplate","formgrpWrap","presetList","arrayMap","ButtonItem","button","selectedIndex","PreviewLauncherFrameSp","setCur","isPlay","setPlay","sceens","previewTabJsx","_ProgressDiv","clickX","rate","left","pageXOffset","_ProgressVal","isIconButton","interval","AiFillStepBackward","AiFillStepForward","IoStopOutline","VscDebugStart","RxReset","onKeyDown","_CloseButton","closeAction","BuildUtil","_BuildUtil","run","_props$guaranteeFrame","minFrame","guaranteeFrame","doIterate","particle","limitFrame","limitParticle","doEnd","runPaging","beginFrame","advanceFrame","_props$guaranteeFrame2","BuildFrame","dispatcher","storyPreviewProps","setStoryPreviewProps","useFrame","curFrame","buildCache","setBuildCache","logicData","fuseList","updateStore","isStandby","_ProgressBox","_RateVal","getJsx","PreviewLogicFrame","setSceens","setFrameCnt","isBuild","setBuild","sendingValueMap","sendingArrayMap","isSeed","master","buildTabJsx","_Msg","_FormDiv","closeButtonAction","NameDefDialog","createContext","LogicMainteTab","setInvalidate","masterNode","openPreviewDialog","n","_TreeDiv","_TreeHead","_TreeBody","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","Provider","setRootData","_DetailMainDiv","_store$cloud","targetSeq","existNames","findProjectMaxSeq","_store$system$user","newProject","insertProject","targetItem","updateProjectName","registUpdate","marginBottom","ShareCloudUtil","abrupt","_ref2","_callee2","req","_context2","_x","_x2","_ref3","_callee3","_context3","_x3","_x4","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","project","_ListItem","getHashedFromProjectSeq","_Name","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","fuseCnt","elementSize","logicCnt","uploadCloud","gZip","overwriteCloudFile","curPrj","updateProjectSource","saveLocalFile","saveLibraryFile","cloudJsx","_ContDiv","unZip","deleteProject","_ListDiv","localJsx","loadFile","_HeaderDiv","_BodyDiv","_LeftDiv","_RighttDiv","getNewSaveButton","getOverwriteButton","getSHA256Hash","CreateChannel","projectType","getProjectType","SCORE_TAB_MARGIN","PublishFrame","libList","setLibList","findAllReleaseProjectList","resList","ownerId","seedList","argCount","setLibCnt","libListJsx","lib","dispCnt","count","_Owner","_CName","plainData","showSaveFilePicker","types","accept","handle","writable","createWritable","write","close","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedName","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","releaseNote","record","note","version","date","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","_Left","_MessageRecord","_Right","MainFrame","AiFillHome","VscGitPullRequestCreate","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_VERSION","_NowLoading","_Copylight","fadeIn","keyframes","PCRoot","splashJsx","_MainDiv","DirectLinkManager","setStoryData","findScenarioData","library","scenario","scenarioData","getBlindJsx","VscSettingsGear","_Banner","sql","SPLibraryChannel","_ShareCloudUtil","uploadShareScenario","cloudSeq","isExists","sourcePlain","sourceZip","libhash","libSourcePlain","libSourceZip","getNextSeq","isExistsAlreadySameSeq","overwriteSnrshRecord","insertSnrshRecord","isExistsSameHash","insertLibhsRecord","deleteShareScenario","deleteSnrshRecord","records","_ref4","_callee4","_context4","_x5","_x6","_ref5","_callee5","_context5","_x7","_x8","_x9","_ref6","_callee6","_context6","c","_x10","_ref7","_callee7","_context7","_x11","_ref8","_callee8","_context8","_x12","_ref9","_callee9","_context9","_x13","_x14","_x15","_x16","ShareDialog","share","syncProccess","isShared","fileKey","getURL","_UrlDiv","readOnly","InstapaperShareButton","_SnsIconFrame","AiOutlineInstagram","TwitterShareButton","AiOutlineTwitter","MailruShareButton","AiOutlineMail","FacebookShareButton","AiOutlineFacebook","LineShareButton","BsLine","SwitchTwoFace","label1","label2","rate1","rate2","LibraryLoader","_LibraryLoader","textarea","getOfficialList","libraries","outline","getExtendList","NewScenarioDialog","focusLibIndex","setFocusLibIndex","isExtend","setExtend","officialPackList","extendPackList","libPackJsxList","pack","_LibItem","_CheckDiv","AiOutlineCheck","_LibInfo","_LibName","_LibVersion","_LibOutline","MdCancelPresentation","AiOutlineEnter","getStringFromDate","extendAction","isEditable","NameDefDialogLocal","focusIndex","checkName","getDefaultName","curProject","SaveOptionDIalog","SPManageFrame","setUpdate","projectItemJsxList","onContextMenu","_Share","isShare","BsFillShareFill","thumbJsxList","thumbJsx","cache","thumbList","thumb","_Img","thumn","isEdit","MdClear","IoCreateOutline","setEdit","FiDownload","story","updateCache","ImCopy","MdOutlineDriveFileRenameOutline","RiDeleteBinLine","FuseMainteDialog","newFrame","setNewFrame","setSeed","setPreset","focus","curFuse","mapping","propertiesFormJsx","activeSeed","formgrps","initFormList","_seed$disp","cancelAction","reduce","fuseSeq","COL_WIDTH_LIST","OPTION_BUTTON_WIDTH","FuseList","recordJsxList","_curSeed$disp","curSeed","_RecordWrap","_RecordCont","setFocus","_ColWrap","_TextItem","_ImageItem","_Option","FiEdit","modifyAction","cloneFuse","focusSeq","cloneCache","GrView","openPreviewSoloDialog","_HeaderItem","_BodyScrollDiv","_templateObject17","FrameLine","startY","setStartY","startX","setStartX","frameRateJsxList","clientWidth","clientHeight","posXIndex","range","top","_FrameRate","isCurr","prevFocusSeq","sort","nowFocusSeq","_FrameLineDiv","SeedSelectDialog","setFocusIndex","seedJsxList","addSeed","newSeq","PreviewLauncherFrame","SPEditStoryFrame","isPreview","setPreview","presetIndex","seedWrapList","groupMng","dispName","getNewFuseProps","s","VscPreview","IoSaveOutline","editingDataVal","editingData","_SeedDiv","AiOutlineAppstoreAdd","newFuse","newFuseProps","_FuseListFrame","isDisp","SPCreateChannel","_SwitchWrap","isLarge","SPPropertyChannel","setInterval","setDispPreset","reload","MdOutlineCleaningServices","seqMax","SPInforChannel","SyncBlind","_Animation","ThreeDots","SPDesignChannel","SPRoot","isPermit","adjLeft","adjTop","screen","setScreen","_SplashDiv","rect","cw","isFitSide","userAgent","isSmartPhone","orientation","alert","_Error","mainJsx","hashKey","projectSeq","getDecryptionedProjectSeq","BiInfoSquare","TbLogicAnd","VscSymbolProperty","MdOutlineInvertColors","_ChannelWrap","match","Dispatcher","proc","sys","openPreviewAllDialog","seedProps","RouterManage","HashRouter","basename","process","URLSearchParams","useLocation","search","Route","path","exact","_FormUtil","checkables","_props$isPassword","_props$validates","_props$dependency","_props$isEnable","_props$isCenter","_props$marginTop","_props$marginBottom","_props$isCenter2","validaters","dep","getErrors","validater","_ItemnLabel","_ItemnInputBak","hasTitle","_props$isEnable2","_props$textAlign","_props$marginTop2","_props$marginBottom2","_props$labelWidth","_props$isEnabled","_props$isVisible","_props$textAlign2","_props$marginTop3","_props$marginBottom3","lablelWidth","DEFAULT_LABEL_WIDTH","_FixedLabel","_props$isPassword2","_props$isNumber","_props$isEnabled2","_props$validates2","_props$dependency2","_props$step","setNaN","_ItemnInput","valueAsNumber","onBlur","_props$validates3","_props$dependency3","_props$headBlank","_props$isEnabled3","_props$width2","unshift","_ItemCombobox","_item$isDisabled","_item$isDisabled2","isDisabled","TextArea","_props$validates4","_props$dependency4","_ItemnTextArea","_props$align","_props$interval","_props$marginTop4","_props$marginBottom4","_button$isEnable","_button$isEnable2","_Button","_IconButton","_button$interval","_button$isEnable3","_button$isEnable4","_props$isCenter3","_props$marginTop5","_props$marginBottom5","_props$isCenter4","_props$isCenter5","_props$marginTop6","_props$marginBottom6","_props$isCenter6","isLink","_props$isVisible2","_props$isEnable3","_props$backgroundColo","_BorderText","_BorderPanel","_props$height2","_InfoDiv","_props$isRelation","_props$isEnable4","_Switch","_props$isEnable5","_props$isEditable","_props$isLarge","_props$isLarge2","_props$isLarge3","_SwitchTwoFace","_SwitchItem","isLeft","activeColor","_props$marginLeft","select","_props$marginLeft2","option","_templateObject18","_templateObject19","_templateObject21","_templateObject20","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","_templateObject29","_templateObject28","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject35","_templateObject34","_templateObject36","_templateObject37","_templateObject38","_templateObject40","_templateObject39","_templateObject42","_templateObject41","_templateObject43","_templateObject45","_templateObject44","_templateObject46","_templateObject47","_templateObject48","_templateObject49","_templateObject51","_templateObject50","_templateObject52","_templateObject53","_templateObject55","_templateObject54","_templateObject57","_templateObject56","_templateObject58","_templateObject59","_templateObject61","_templateObject60","_templateObject62","_templateObject63","_templateObject64","_templateObject65","_templateObject66","_templateObject67","_DataUtil","DB_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","hashedSeq","hashids","decryptioned","decode","fetch","mode","headers","Accept","body","createSendMailRequestInit","queryType","databaseName","createQueryRequestInit","saveFile","findUserInfoFromSeq","findUserScoreList","_callee10","_yield$window$showOpe","_yield$window$showOpe2","file","fileContents","scenarioProps","_context10","showOpenFilePicker","getFile","hasOwnProperty","saveFileBak","_callee11","_context11","_callee12","_context12","saveScenarioFile","extension","options","_callee13","_context13","_callee14","_context14","original","sha256","val","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str"],"mappings":"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","file":"static/js/main.39baa69b.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 38;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_LABEL_LARGE = css`\r\n    ${CSS_LABEL}\r\n    height: 50px;\r\n    font-size: ${FONT_LARGE}px;\r\n    line-height: 44px;\r\n`;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import React, { useEffect } from 'react';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nconst App = () => {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport DataUtil from './system/utils/dataUtil';\r\nimport SystemConst from './system/utils/systemConst';\r\n\r\nwindow.addEventListener('load', function () {\r\n  if ('serviceWorker' in navigator) {\r\n    // navigator.serviceWorker.register(`/pf_apps/${SystemConst.APP_VERSION}/serviceWorker.js`)\r\n    navigator.serviceWorker.register(`/serviceWorker.js`)\r\n      .then(function (registration) {\r\n        console.log(\"serviceWorker registed.\");\r\n      }).catch(function (error) {\r\n        console.warn(\"serviceWorker error.\", error);\r\n      });\r\n  }\r\n});\r\n\r\n/* ピッチインピッチアウトによる拡大縮小を禁止 */\r\ndocument.documentElement.addEventListener('touchstart', function (e) {\r\n  if (e.touches.length >= 2) { e.preventDefault(); }\r\n}, { passive: false });\r\n/* ダブルタップによる拡大を禁止 */\r\nvar t = 0;\r\ndocument.documentElement.addEventListener('touchend', function (e) {\r\n  var now = new Date().getTime();\r\n  if ((now - t) < 350) {\r\n    e.preventDefault();\r\n  }\r\n  t = now;\r\n}, false);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import assert from \"assert\";\r\nimport Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if (param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if ((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            // ctx.fillStyle = param.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 255;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r1 = (Math.floor(rgba.r));\r\n        const g1 = (Math.floor(rgba.g));\r\n        const b1 = (Math.floor(rgba.b));\r\n        const a1 = (Math.floor(rgba.a));\r\n        const r = ('00' + r1.toString(16)).slice(-2);\r\n        const g = ('00' + g1.toString(16)).slice(-2);\r\n        const b = ('00' + b1.toString(16)).slice(-2);\r\n        const a = ('00' + a1.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, subset: number): string => {\r\n        const rgba = convertRgbaFromColorCode(color);\r\n        // if(rgba == null) return color;\r\n        assert(rgba != null, 'rgba is null.');\r\n\r\n        rgba.r += subset;\r\n        rgba.g += subset;\r\n        rgba.b += subset;\r\n        if(rgba.r > 255) rgba.r = 255;\r\n        if(rgba.g > 255) rgba.g = 255;\r\n        if(rgba.b > 255) rgba.b = 255;\r\n        if(rgba.r < 0) rgba.r = 0;\r\n        if(rgba.g < 0) rgba.g = 0;\r\n        if(rgba.b < 0) rgba.b = 0;\r\n        // console.log(convertColorCodeFromRgba(rgba));\r\n        return convertColorCodeFromRgba(rgba);\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","import assert from \"assert\";\r\nimport { ProjectType } from \"./store\";\r\n\r\nnamespace StoreDesign {\r\n\r\n    export type Props = {\r\n        base1: string;\r\n        base2: string;\r\n        base3: string;\r\n        base4: string;\r\n        sub1: string;\r\n        sub2: string;\r\n        sub3: string;\r\n        accent1: string;\r\n        accent2: string;\r\n        accent3: string;\r\n        text1: string;\r\n        text2: string;\r\n        text3: string;\r\n        text4: string;\r\n    }\r\n\r\n    type PresetName = 'light-blue' | 'dark-grey'\r\n\r\n    export type Preset = {\r\n        name: PresetName;\r\n        props: Props;\r\n    }\r\n\r\n\r\n    const presets: Preset[] = [\r\n        {\r\n            name: 'light-blue', props: {\r\n                base1: '#4e5257',\r\n                base2: '#161616',\r\n                base3: '#868686',\r\n                base4: '#cccccc',\r\n                sub1: '#cccccc',\r\n                sub2: '#8b8b8b',\r\n                sub3: '#cccccc',\r\n                accent1: '#dadada',\r\n                accent2: '#420000',\r\n                accent3: '#2c2c2c',\r\n                text1: '#ffffff',\r\n                text2: '#474747',\r\n                text3: '#00683d',\r\n                text4: '#960000',\r\n            }\r\n        }\r\n    ];\r\n\r\n    export const getPreset = (name: PresetName) => {\r\n        const preset = presets.find(p => p.name === name);\r\n        assert(preset != undefined, 'preset is undefined.');\r\n        return preset.props;\r\n    }\r\n}\r\n\r\nexport default StoreDesign;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreDesign from \"./storeDesign\";\r\nimport StoreEditing from \"./storeEditing\";\r\nimport StoreLocalStorage from \"./storeLocalStrage\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    env: StoreSystem.Env;\r\n    libraryData: LogicUtil.WrapElement | null;\r\n    storyData: StoryUtil.StoryData | null;\r\n    fuseCacheList: StoryUtil.Cache[];\r\n    local: StoreLocalStorage.Param;\r\n    editing: StoreEditing.Props;\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null;\r\n    design: StoreDesign.Props;\r\n}\r\n\r\nexport const ProjectTypes = ['library', 'story'] as const;\r\nexport type ProjectType = typeof ProjectTypes[number];\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: true,\r\n        user: null,\r\n        dialog: null,\r\n        isSync: false,\r\n        canDialogClose: false,\r\n        isSPMode: false,\r\n        logoutActions: [],\r\n        channelIndex: 1\r\n    },\r\n    cloud: null,\r\n    env: {\r\n        screenRate: 1,\r\n        scrollLock: false,\r\n    },\r\n    libraryData: null,\r\n    storyData: null,\r\n    fuseCacheList: [],\r\n    local: {\r\n        maxSeq: 0,\r\n        projects: [],\r\n        putInterval: 0,\r\n        isDispPreset: true\r\n    },\r\n    editing: {\r\n        localSeq: -1,\r\n        libName: ''\r\n    },\r\n    fileHandle: null,\r\n    design: StoreDesign.getPreset('light-blue')\r\n}","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            if (!store.system.canDialogClose) return;\r\n            store.system.dialog = null;\r\n            store.system.canDialogClose = false;\r\n            setStore({ ...store });\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n\r\n    // export const IS_SP = false;\r\n    export const IS_SP = true;\r\n    export const APP_VERSION = 'v1.10.4';\r\n    // export const APP_TEST_SERVER_DOMAIN = 'http://localhost:4333/pf_apps/' + APP_VERSION;\r\n    // export const APP_PRODUCT_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pf_apps/' + APP_VERSION;\r\n    export const APP_PRODUCT_SERVER_DOMAIN = 'https://user.pixelflare.tech/';\r\n    // export const APP_SERVER_DOMAIN = 'https://dev.pixelflare.tech/';\r\n    export const APP_SERVER_DOMAIN = APP_PRODUCT_SERVER_DOMAIN;\r\n\r\n    export const EDGE_PREFIX = 'microsoft-edge:';\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getTitleURL = () => {\r\n        return CanvasUtil.createURL(360, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#c6dce2';\r\n            ctx.fillText('Pixel ', 14, 64);\r\n            const adjust = ctx.measureText('Pixel ').width;\r\n            ctx.fillStyle = '#768fc4';\r\n            ctx.fillText('Flare', 14 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        const WIDTH = 512;\r\n        return CanvasUtil.createURL(WIDTH, WIDTH, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            // ctx.fillStyle = '#35304b';\r\n            // ctx.fillRect(0, 0, WIDTH, WIDTH);\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.strokeRect(0, 0, WIDTH, WIDTH);\r\n\r\n            ctx.beginPath();\r\n            const centerX = WIDTH / 2;\r\n            const centerY = WIDTH / 2;\r\n            const rad = 55;\r\n            const g = ctx.createRadialGradient(centerX, centerY, 1, centerX, centerY, rad);\r\n            g.addColorStop(0, '#942e7a');\r\n            g.addColorStop(1, '#530640');\r\n            ctx.fillStyle = g;\r\n            ctx.arc(centerX, centerY,rad , 0, 2 * Math.PI);\r\n            ctx.fill();\r\n\r\n            for (let i = 0; i < 8; i++) {\r\n                const r = Math.PI * 2 / 8 * i;\r\n                const d = 90;\r\n                const x = WIDTH / 2 + Math.cos(r) * d;\r\n                const y = WIDTH / 2 + Math.sin(r) * d;\r\n                const rad = 30;\r\n                const g = ctx.createRadialGradient(x, y, 1, x, y, rad);\r\n                g.addColorStop(0, '#fffefe');\r\n                g.addColorStop(1, '#d1d1d1');\r\n                ctx.fillStyle = g;\r\n                ctx.beginPath();\r\n                ctx.arc(x, y, rad, 0, 2 * Math.PI);\r\n                ctx.fill();\r\n            }\r\n\r\n            for (let i = 0; i < 4; i++) {\r\n                const r = Math.PI * 2 / 4 * i;\r\n                const d = 176;\r\n                const x = WIDTH / 2 + Math.cos(r) * d;\r\n                const y = WIDTH / 2 + Math.sin(r) * d;\r\n                const rad = 45;\r\n                const g = ctx.createRadialGradient(x, y, 1, x, y, rad);\r\n                g.addColorStop(0, '#fffefe');\r\n                g.addColorStop(1, '#d1d1d1');\r\n                ctx.fillStyle = g;\r\n                ctx.beginPath();\r\n                ctx.arc(x, y, rad, 0, 2 * Math.PI);\r\n                ctx.fill();\r\n            }\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    export const checkArrayNumber = (value: string) => value.split(',').find(v => isNaN(Number(v))) == undefined;\r\n}\r\nexport default ValidateUtil;\r\n","import LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport DataUtil from \"./dataUtil\";\r\n\r\nnamespace LocalStorageUtil {\r\n    export const DEFAULT_FILE_NAME_PREFIX = 'project_';\r\n\r\n    export const KEY_LOGIN_HASH = 'login-hash';\r\n    // export const KEY_SCENARIO_NAMES = 'scenario-names';\r\n    export const KEY_SCENARIO_SEQ = 'scenario-seq';\r\n    export const KEY_SCENARIO_PREFIX = 'scenario-data-';\r\n    export const KEY_DISP_PRESET = 'display-put-preset';\r\n    export const KEY_PROP_PUT_INTERVAL = 'prop-put-interval';\r\n\r\n    export const load = (store: Store, update: () => void) => {\r\n\r\n        // ログイン\r\n        if (store.system.user == null) {\r\n            const userHash = localStorage.getItem(KEY_LOGIN_HASH);\r\n            if (userHash != null) {\r\n                const userSeq = DataUtil.getDecryptionedUserSeq(userHash);\r\n                if (userSeq !== -1) {\r\n                    (async () => {\r\n                        const results = await DataUtil.findUserInfoSeq(userSeq);\r\n                        if (results.length > 0) {\r\n                            store.system.user = {\r\n                                seq: results[0].seq,\r\n                                id: results[0].id,\r\n                                password: results[0].password,\r\n                                email: results[0].email,\r\n                            };\r\n\r\n                            // developの場合、クラウドのライブラリを読み込む\r\n                            if (!store.system.isSPMode) {\r\n                                const resPrjList = await DataUtil.findUserLibdvList(results[0].seq);\r\n                                store.cloud = {\r\n                                    projects: resPrjList.map(res => ({\r\n                                        source: res.source,\r\n                                        name: res.name,\r\n                                        seq: res.seq,\r\n                                        lastmod: res.lastmod\r\n                                    }))\r\n                                };\r\n                            }\r\n                            // update();\r\n                        }\r\n                    })();\r\n                } else {\r\n                    localStorage.removeItem(KEY_LOGIN_HASH);\r\n                }\r\n            }\r\n        }\r\n\r\n        // シナリオファイルのロード\r\n        const scenarioSeq = localStorage.getItem(KEY_SCENARIO_SEQ);\r\n        if (scenarioSeq == null) {\r\n            localStorage.setItem(KEY_SCENARIO_SEQ, '0');\r\n        } else {\r\n            const seq = Number(scenarioSeq);\r\n            store.local.maxSeq = seq;\r\n            for (let i = 0; i <= seq; i++) {\r\n                const source = localStorage.getItem(KEY_SCENARIO_PREFIX + i.toString());\r\n                if (source != null) {\r\n                    store.local.projects.push(JSON.parse(source));\r\n                }\r\n            }\r\n        }\r\n\r\n        // シード配置のインターバル初期値\r\n        let putInterval = localStorage.getItem(KEY_PROP_PUT_INTERVAL);\r\n        if(putInterval == null) {\r\n            putInterval = '50';\r\n            localStorage.setItem(KEY_PROP_PUT_INTERVAL, putInterval);\r\n        }\r\n        console.log(putInterval);\r\n        store.local.putInterval = Number(putInterval);\r\n\r\n        // プリセットフォームの表示有無\r\n        let isDispPreset = localStorage.getItem(KEY_DISP_PRESET);\r\n        if(isDispPreset == null) {\r\n            isDispPreset = '1';\r\n            localStorage.setItem(KEY_DISP_PRESET, isDispPreset);\r\n        }\r\n        store.local.isDispPreset = isDispPreset === '0';\r\n    }\r\n}\r\n\r\nexport default LocalStorageUtil;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: (index: number)=>void;\r\n    tabRecordNum?: number;\r\n}\r\n\r\nexport type TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    /* box-shadow: 0 2px 0 0 #000b3a48; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\nimport SystemConst from \"../../../utils/systemConst\";\r\nimport LocalStorageUtil from \"../../../utils/localStorageUtil\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            if (results.length > 0) {\r\n                localStorage.setItem(LocalStorageUtil.KEY_LOGIN_HASH, DataUtil.getHashedFromUserSeq(results[0].seq));\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await DataUtil.findUserLibdvList(results[0].seq);\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        type: res.type,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getTitleURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport SystemConst, { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport LocalStorageUtil from \"../../utils/localStorageUtil\";\r\nimport DrawUtil from \"../graphic/drawUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const design = store.design;\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const [titleURL, logoURL] = useMemo(() => {\r\n        return [CanvasUtil.getTitleURL(), CanvasUtil.getLogoURL()];\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton\r\n            textColor={design.text1}\r\n            bgColor={design.sub1}\r\n            onClick={() => {\r\n                store.system.canDialogClose = true;\r\n                store.system.dialog = <LoginFrame />;\r\n                setStore({ ...store });\r\n                console.log(window.location.origin);\r\n            }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton\r\n            textColor={design.text1}\r\n            bgColor={design.sub1}\r\n            onClick={() => {\r\n                store.system.user = null;\r\n                localStorage.removeItem(LocalStorageUtil.KEY_LOGIN_HASH);\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message={'Logout.\\nSee you next time!'}\r\n                />;\r\n                store.system.logoutActions.forEach(func => func());\r\n                setStore({ ...store });\r\n            }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap\r\n            grad1={design.accent1}\r\n            grad2={DrawUtil.toWhite(design.accent1, -80)}\r\n        >\r\n            <_Logo src={logoURL} onClick={() => window.location.replace(SystemConst.APP_SERVER_DOMAIN)} />\r\n            <_Title src={titleURL} onClick={() => window.location.replace(SystemConst.APP_SERVER_DOMAIN)} />\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                {/* <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language> */}\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div<{\r\n    grad1: string;\r\n    grad2: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    ${props => css`\r\n        background: linear-gradient(to bottom, ${props.grad1}, ${props.grad2}, ${props.grad1});\r\n    `}\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div<{\r\n    bgColor: string;\r\n}>`\r\n    background-color: ${props => props.bgColor};\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem) <{\r\n    textColor: string;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    border: 1px solid #7e7e7e;\r\n    box-sizing: border-box;\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: ${props => props.textColor};\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem) <{\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: ${props => props.color};\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 40px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #28bc619f; */\r\n    vertical-align: top;\r\n`;\r\nconst _Title = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n    vertical-align: top;\r\n`;","import { useEffect, useState, useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport DrawUtil from \"../../../contents/graphic/drawUtil\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n    /** 横向き */\r\n    isLandscape?: boolean;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const isLandscape = props.isLandscape ?? true;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList\r\n                bgColor={store.design.base1}\r\n                isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList\r\n                bgColor={store.design.base1}\r\n                isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    const { store } = useContext(GlobalContext);\r\n    const design = store.design;\r\n    const textColor = props.isActive ? design.text1 : design.text2;\r\n    return (\r\n        <_Item\r\n            bgColor={design.base3}\r\n            borderColor={props.isActive ? design.text1 : DrawUtil.toWhite(design.text1, -90)}\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon\r\n                textColor={textColor}\r\n            >{props.icon}</_Icon>\r\n            <_Label\r\n                textColor={textColor}\r\n            >{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    isLandscape: boolean;\r\n    bgColor: string;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isLandscape ? css`\r\n        width: 100px;\r\n        height: 100%;\r\n    ` : css`\r\n        width: 100%;\r\n        height: 100px;\r\n    `}\r\n    margin-right: 5px;\r\n    background-color: ${props => props.bgColor};\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div<{\r\n    isLandscape: boolean;\r\n    bgColor: string;\r\n}>`\r\n    display: inline-block;\r\n    background-color: ${props => props.bgColor};\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    ${props => props.isLandscape ? css`\r\n        width: calc(100% - 105px);\r\n        height: 100%;\r\n    ` : css`\r\n        height: calc(100% - 100px);\r\n        width: 100%;\r\n    `}\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    bgColor: string;\r\n    borderColor: string;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid ${props => props.borderColor};\r\n    box-sizing: border-box;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: ${props.bgColor};\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: ${props.bgColor};\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div<{\r\n    textColor: string;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    textColor: string;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n`;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export type ArrayMap = {\r\n        name: string;\r\n        array: number[];\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        initialValueMapList: ValueMap[],\r\n        initailArrayMapList: ArrayMap[]\r\n    ): Particle.Props => {\r\nconsole.log(initailArrayMapList);\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param parentValueMapList 親要素から送られてきたValueMap\r\n         * @param parentArrayMapList 親要素から送られてきたArrayMap\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, parentValueMapList: ValueMap[], parentArrayMapList: ArrayMap[]): Particle.Props => {\r\n            const valueMapList: ValueMap[] = parentValueMapList.concat(ConstantValueMap);\r\n\r\n            // 配列Mapのプロパティ変数を生成\r\n            parentArrayMapList.forEach(arr => {\r\n                valueMapList.push({ name: arr.name + '.len', value: arr.array.length });\r\n            });\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                // 配列Mapのイテレータ変数を追加\r\n                                const iterateArrayMap: ValueMap[] = parentArrayMapList.map(arr => {\r\n                                    return { name: arr.name + '.itr', value: arr.array[i] ?? 0 };\r\n                                });\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params\r\n                                    .filter(item => !item.isArray)\r\n                                    .map(item => {\r\n                                        return {\r\n                                            name: item.name, value: convertParamsToValue(item.name, params, valueMapList\r\n                                                .concat(itrfldValueMap)\r\n                                                .concat(iterateValueMap)\r\n                                                .concat(iterateArrayMap)\r\n                                            ) ?? 0\r\n                                        };\r\n                                    });\r\n                                const sendArrayMapList: ArrayMap[] = params\r\n                                    .filter(item => item.isArray)\r\n                                    .map(item => {\r\n                                        return { name: item.name, array: convertParamsToArray(item.name, params, parentArrayMapList) ?? [] }\r\n                                    });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList,\r\n                                    sendArrayMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, initialValueMapList, initailArrayMapList);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param arrayMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToArray = (name: string, params: LogicUtil.NodeParamItem[], arrayMapList: ArrayMap[]): number[] | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        const item = formula.values[0];\r\n        if (item.type === 'array') {\r\n            return item.value.split(',').map(v => Number(v));\r\n        } else if (item.type === 'argument') {\r\n            const map = arrayMapList.find(array => array.name === item.value);\r\n            return map == undefined ? [] : map.array;\r\n        }\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n}\r\n\r\nexport default PreviewUtil;","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value, argType.value as LogicUtil.ArgumentType);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        // ロジックを全て調査する\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        const root = (rootNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n        const defs = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        console.log(defs.length);\r\n        defs.forEach(wrap => {\r\n            const interfaceWrap = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng');\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(interfaceWrap, 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            syncParamName(sendMng.params);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        rootNode.children[0].children.forEach(seedNode => {\r\n            const interfaceNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'interface-mng');\r\n            const sendNode = LogicElementUtil.getInnerNodeFixed(interfaceNode, 'seedsend-mng');\r\n            const seed = (seedNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n            if (seed.entry === logicItem.name) {\r\n                callback(sendNode);\r\n            }\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string, type: LogicUtil.ArgumentType) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const isArray = type === 'array';\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            {\r\n                name: newArgName,\r\n                formulaItems: ['var'],\r\n                values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                isArray: isArray ? true : undefined\r\n            }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {LogicElementUtil.getReplicateButton(node, !isModify, 'logic', store, setStore, invalidate)}\r\n                    {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isModify,\r\n                                // isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Replicate this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                                    const name = wrap.data[namable] as string;\r\n                                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    // mappingForm();\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    /> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND,\r\n    SEED = -1,\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        console.log('mapping');\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return Level.SEED;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, arrayArgList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        let arrayArgList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'number';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'array';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return !data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, arrayArgList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else if (type === 'array') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    const isArray = (wrap.data as LogicUtil.NodeParamItem).isArray;\r\n                    let list: string[] = [];\r\n                    switch (type) {\r\n                        case 'argument': {\r\n                            list = !isArray ? argumentList : arrayArgList;\r\n                        } break;\r\n                        case 'field': {\r\n                            list = fieldKeyList;\r\n                        } break;\r\n                        case 'self': {\r\n                            list = ParamUtil.SelfParams;\r\n                        } break;\r\n                        case 'constant': {\r\n                            list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                        } break;\r\n                        case 'array.itr': {\r\n                            list = arrayArgList.map(name => name + '.itr');\r\n                        } break;\r\n                        case 'array.len': {\r\n                            list = arrayArgList.map(name => name + '.len');\r\n                        } break;\r\n                    }\r\n                    // if (type === 'argument') {\r\n                    //     list = argumentList;\r\n                    // } else if (type === 'field') {\r\n                    //     list = fieldKeyList;\r\n                    // } else if (type === 'self') {\r\n                    //     list = ParamUtil.SelfParams;\r\n                    // } else if (type === 'constant') {\r\n                    //     list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    // }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            const param = wrap.data as LogicUtil.NodeParamItem;\r\n                            const isArray = param == undefined ? false : param.isArray ?? false;\r\n                            if (!isArray) {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'argument': return true;\r\n                                    case 'field': return level >= Level.INITIAL;\r\n                                    case 'array.len':\r\n                                    case 'self': return level >= Level.INHERIT_FIELD;\r\n                                    case 'array.itr': return level >= Level.INHERIT_SEND;\r\n                                    case 'array': return false;\r\n                                }\r\n                            } else {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'self':\r\n                                    case 'field': return false;\r\n                                    case 'array':\r\n                                    case 'argument': return true;\r\n                                }\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        const isArray = param == undefined ? false : param.isArray ?? false;\r\n        return {\r\n            label, width, isEnable: isArray ? false : isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'field', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnabled={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'inherit', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled, { css } from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\n\r\nconst FRAME_WIDTH = 402;\r\nnamespace DrawableVectorChooser {\r\n\r\n    export const ComponentNormal = (props: {\r\n        addPoint: (x: number, y: number) => void;\r\n        clear: () => void;\r\n        xList: number[];\r\n        yList: number[];\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const screenRate = store.env.screenRate;\r\n\r\n        const [isDraw, setDraw] = useState(false);\r\n        const ref = useRef<HTMLDivElement>(null);\r\n\r\n        const pointJsxList = useMemo(() => {\r\n            return props.xList.map((x, i) => {\r\n\r\n                const y = props.yList[i];\r\n                return (\r\n                    <_Point key={i}\r\n                        x={x}\r\n                        y={y}\r\n                    />\r\n                );\r\n            });\r\n        }, [props.xList.length]);\r\n\r\n\r\n        const putAction = (x: number, y: number) => {\r\n            setDraw(true);\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n            store.env.scrollLock = true;\r\n            setStore({ ...store });\r\n        }\r\n\r\n        const moveAction = (x: number, y: number) => {\r\n            if (!isDraw) return;\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            const subX = posX - (props.xList[props.xList.length - 1] + FRAME_WIDTH / 2);\r\n            const subY = posY - (props.yList[props.yList.length - 1] + FRAME_WIDTH / 2);\r\n            const distance = Math.sqrt(subX * subX + subY * subY);\r\n            if (distance > 10) props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n        }\r\n\r\n        const releaseAction = () => {\r\n            setDraw(false);\r\n            store.env.scrollLock = false;\r\n            setStore({ ...store });\r\n        }\r\n\r\n        return (<>\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Point\"\r\n                jsx={\r\n                    <FormUtil.FixedText\r\n                        value={props.xList.length.toString()}\r\n                        isRecordItem\r\n                    />\r\n                }\r\n            />\r\n            <_Frame\r\n                ref={ref}\r\n                onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n                onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n                onMouseUp={releaseAction}\r\n                onMouseLeave={releaseAction}\r\n                onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchEnd={releaseAction}\r\n                onTouchCancel={releaseAction}\r\n                isDraw={store.env.scrollLock}\r\n            >\r\n                <_Center />\r\n                {pointJsxList}\r\n            </_Frame>\r\n            <FormUtil.ButtonRecord buttons={[\r\n                {\r\n                    label: 'Clear',\r\n                    isEnable: props.xList.length > 0,\r\n                    callback: props.clear,\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n\r\n    export const ComponentColorable = (props: {\r\n        addPoint: (x: number, y: number, r: number, g: number, b: number) => void;\r\n        clear: () => void;\r\n        xList: number[];\r\n        yList: number[];\r\n        rList: number[];\r\n        gList: number[];\r\n        bList: number[];\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const screenRate = store.env.screenRate;\r\n\r\n        const [isDraw, setDraw] = useState(false);\r\n        const [colorHistory, setColorHistory] = useState<string[]>([]);\r\n\r\n        const [r, setR] = useState(255);\r\n        const [g, setG] = useState(255);\r\n        const [b, setB] = useState(255);\r\n\r\n        const ref = useRef<HTMLDivElement>(null);\r\n\r\n        const pointJsxList = useMemo(() => {\r\n            return props.xList.map((x, i) => {\r\n                const y = props.yList[i];\r\n                const r = props.rList[i];\r\n                const g = props.gList[i];\r\n                const b = props.bList[i];\r\n                const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                    r: Number(r),\r\n                    g: Number(g),\r\n                    b: Number(b),\r\n                    a: 255\r\n                }).substring(0, 7);\r\n                return (\r\n                    <_PointColorable key={i}\r\n                        x={x}\r\n                        y={y}\r\n                        color={colorCode}\r\n                    />\r\n                );\r\n            });\r\n        }, [props.xList.length]);\r\n\r\n\r\n        const colorHistoryJsxList = useMemo(() => {\r\n            return colorHistory.map((history, i) => {\r\n                return (\r\n                    <_ColorItem key={i}\r\n                        color={history}\r\n                        onClick={()=> {\r\n                            const rgba = DrawUtil.convertRgbaFromColorCode(history + 'ff');\r\n                            if (rgba != null) {\r\n                                setR(rgba.r);\r\n                                setG(rgba.g);\r\n                                setB(rgba.b);\r\n                            }\r\n                        }}\r\n                    />\r\n                );\r\n            });\r\n        }, [colorHistory]);\r\n\r\n        const addColorHistory = () => {\r\n            const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                r: Number(r),\r\n                g: Number(g),\r\n                b: Number(b),\r\n                a: 255\r\n            }).substring(0, 7);\r\n            if (colorHistory.find(ch => ch === colorCode) == undefined) {\r\n                colorHistory.push(colorCode);\r\n                if(colorHistory.length > 15) colorHistory.shift();\r\n                setColorHistory(colorHistory.slice());\r\n            }\r\n        };\r\n\r\n        const putAction = (x: number, y: number) => {\r\n            setDraw(true);\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2, r, g, b);\r\n            store.env.scrollLock = true;\r\n            setStore({ ...store });\r\n            addColorHistory();\r\n        }\r\n\r\n        const moveAction = (x: number, y: number) => {\r\n            if (!isDraw) return;\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            const subX = posX - (props.xList[props.xList.length - 1] + FRAME_WIDTH / 2);\r\n            const subY = posY - (props.yList[props.yList.length - 1] + FRAME_WIDTH / 2);\r\n            const distance = Math.sqrt(subX * subX + subY * subY);\r\n            if (distance > 10) props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2, r, g, b);\r\n        }\r\n\r\n        const releaseAction = () => {\r\n            setDraw(false);\r\n            store.env.scrollLock = false;\r\n            setStore({ ...store });\r\n        }\r\n\r\n        const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n            r: Number(r),\r\n            g: Number(g),\r\n            b: Number(b),\r\n            a: 255\r\n        }).substring(0, 7);\r\n        return (<>\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Point\"\r\n                jsx={\r\n                    <FormUtil.FixedText\r\n                        value={props.xList.length.toString()}\r\n                        isRecordItem\r\n                    />\r\n                }\r\n            />\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Color\"\r\n                jsx={\r\n                    <_Color type=\"color\" value={colorCode}\r\n                        // disabled={isReadOnly}\r\n                        onChange={(value) => {\r\n                            const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                            if (rgba != null) {\r\n                                setR(rgba.r);\r\n                                setG(rgba.g);\r\n                                setB(rgba.b);\r\n                            }\r\n                        }}\r\n                    />\r\n                }\r\n            />\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"History\"\r\n                jsx={<>{colorHistoryJsxList}</>}\r\n            />\r\n            <_Frame\r\n                ref={ref}\r\n                onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n                onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n                onMouseUp={releaseAction}\r\n                onMouseLeave={releaseAction}\r\n                onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchEnd={releaseAction}\r\n                onTouchCancel={releaseAction}\r\n                isDraw={store.env.scrollLock}\r\n            >\r\n                <_Center />\r\n                {pointJsxList}\r\n            </_Frame>\r\n            <FormUtil.ButtonRecord buttons={[\r\n                {\r\n                    label: 'Clear',\r\n                    isEnable: props.xList.length > 0,\r\n                    callback: () => {\r\n                        props.clear();\r\n                        setColorHistory([]);\r\n                    },\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default DrawableVectorChooser;\r\n\r\nconst _Frame = styled.div<{\r\n    isDraw: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${FRAME_WIDTH}px;\r\n    height: ${FRAME_WIDTH}px;\r\n    margin: 0 0 0 3px;\r\n    background-color: #2e7085;\r\n    ${props => !props.isDraw ? '' : css`\r\n        background-color: #5c9caf;\r\n    `}\r\n    border: 2px solid #800;\r\n    box-sizing: border-box;\r\n    touch-action: none;\r\n`;\r\n\r\nconst _Point = styled.div<{\r\n    x: number;\r\n    y: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x + FRAME_WIDTH / 2 - 5}px;\r\n    top: ${props => props.y + FRAME_WIDTH / 2 - 5}px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 10px;\r\n    background-color: #fcfeff9d;\r\n    border: 1px solid #dfe5ff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _PointColorable = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x + FRAME_WIDTH / 2 - 5}px;\r\n    top: ${props => props.y + FRAME_WIDTH / 2 - 5}px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 10px;\r\n    background-color: ${props => props.color};\r\n    border: 1px solid #dfe5ff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ColorItem = styled.div<{\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    border-radius: 4px;\r\n    background-color: ${props => props.color};\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    margin: 6px 0 0 3px;\r\n    width: 15px;\r\n    height: 28px;\r\n`;\r\n\r\nconst _Center = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${FRAME_WIDTH / 2 - 10}px;\r\n    top: ${FRAME_WIDTH / 2 - 10}px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 20px;\r\n    background-color: #800;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): LogicUtil.NodeArgumentItem[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return arg.data as LogicUtil.NodeArgumentItem;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param.name)) {\r\n                const isArray = param.valueType === 'array';\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    {\r\n                        name: param.name,\r\n                        formulaItems: ['var'],\r\n                        values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                        isArray: isArray ? true : undefined\r\n                    }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={200}\r\n                            // 更新時は編集できない\r\n                            isReadOnly={!isModify || wrap.data != null}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'seed', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            // isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(!item.isArray) {\r\n                const name = item.name;\r\n                const value = Number(samples[sampleNo].values[i]);\r\n                argMap.push( { name, value });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => !item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n    const getSeedArrayMap = (sampleNo: number): PreviewUtil.ArrayMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ArrayMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(item.isArray) {\r\n                const name = item.name;\r\n                const array = samples[sampleNo].values[i].split(',').map(v => Number(v));\r\n                argMap.push( { name, array });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, array: PreviewUtil.convertParamsToArray(item.name, sendParams, argMap) ?? [] }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                const sendArrayMapList = getSeedArrayMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList, sendArrayMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport DrawableVectorChooser from \"./drawableVectorChooser\";\r\n\r\nnamespace LogicFormUtil {\r\n\r\n    export const buildPreviewForms = (\r\n        isReadOnly: boolean,\r\n        argumentList: LogicUtil.NodeSeedArgItem[],\r\n        formgrpList: LogicUtil.NodeFromGrpItem[],\r\n        formList: FormUtil.CheckableValue[],\r\n        setFormList: ((formList: FormUtil.CheckableValue[]) => void)\r\n    ): JSX.Element[] => {\r\n        /** 入力フォームのJSX */\r\n        const formJsxList: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n\r\n            // フォームグループが設定されている場合、独自の入力UIを表示する\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                switch (formgrp.method) {\r\n                    case 'color': {\r\n                        const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                            r: Number(formList[targetForms[0]].value),\r\n                            g: Number(formList[targetForms[1]].value),\r\n                            b: Number(formList[targetForms[2]].value),\r\n                            a: 255\r\n                        }).substring(0, 7);\r\n                        // console.log(colorCode);\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <FormUtil.Record\r\n                                jsx={<>\r\n                                    {targetForms.map((formIndex, j) => {\r\n                                        return (\r\n                                            <FormUtil.TextField\r\n                                                key={formIndex}\r\n                                                width={72}\r\n                                                marginLeft={j === 0 ? 5 : 4}\r\n                                                isNumber\r\n                                                isReadOnly={isReadOnly}\r\n                                                checkable={formList[formIndex]}\r\n                                                setCheckable={() => {\r\n                                                    setFormList(formList.slice());\r\n                                                }}\r\n                                                validates={[\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                        errorType: \"required\"\r\n                                                    },\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min as number, argument.max as number),\r\n                                                        errorType: 'value'\r\n                                                    }\r\n                                                ]}\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                    <_Color type=\"color\" value={colorCode}\r\n                                        disabled={isReadOnly}\r\n                                        onChange={(value) => {\r\n                                            const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                            if (rgba != null) {\r\n                                                formList[targetForms[0]].value = rgba.r.toString();\r\n                                                formList[targetForms[1]].value = rgba.g.toString();\r\n                                                formList[targetForms[2]].value = rgba.b.toString();\r\n                                            }\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                    />\r\n                                </>}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                    case 'draw': {\r\n                        const xValue = formList[targetForms[0]].value;\r\n                        const yValue = formList[targetForms[1]].value;\r\n                        const xList = (xValue === '' ? [] : xValue.split(',').map(v => Number(v)));\r\n                        const yList = (xValue === '' ? [] : yValue.split(',').map(v => Number(v)));\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>point </_Type><_Range>(～ {255} drawing)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <DrawableVectorChooser.ComponentNormal\r\n                                addPoint={(x, y) => {\r\n                                    xList.push(x);\r\n                                    yList.push(y);\r\n                                    formList[targetForms[0]].value = xList.join(',');\r\n                                    formList[targetForms[1]].value = yList.join(',');\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                clear={() => {\r\n                                    formList[targetForms[0]].value = '';\r\n                                    formList[targetForms[1]].value = '';\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                xList={xList}\r\n                                yList={yList}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                    case 'draw-colorable': {\r\n                        const xValue = formList[targetForms[0]].value;\r\n                        const yValue = formList[targetForms[1]].value;\r\n                        const rValue = formList[targetForms[2]].value;\r\n                        const gValue = formList[targetForms[3]].value;\r\n                        const bValue = formList[targetForms[4]].value;\r\n                        const xList = (xValue === '' ? [] : xValue.split(',').map(v => Number(v)));\r\n                        const yList = (xValue === '' ? [] : yValue.split(',').map(v => Number(v)));\r\n                        const rList = (rValue === '' ? [] : rValue.split(',').map(v => Number(v)));\r\n                        const gList = (gValue === '' ? [] : gValue.split(',').map(v => Number(v)));\r\n                        const bList = (bValue === '' ? [] : bValue.split(',').map(v => Number(v)));\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>point </_Type><_Range>(～ {255} drawing)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <DrawableVectorChooser.ComponentColorable\r\n                                addPoint={(x, y, r, g, b) => {\r\n                                    xList.push(x);\r\n                                    yList.push(y);\r\n                                    rList.push(r);\r\n                                    gList.push(g);\r\n                                    bList.push(b);\r\n                                    formList[targetForms[0]].value = xList.join(',');\r\n                                    formList[targetForms[1]].value = yList.join(',');\r\n                                    formList[targetForms[2]].value = rList.join(',');\r\n                                    formList[targetForms[3]].value = gList.join(',');\r\n                                    formList[targetForms[4]].value = bList.join(',');\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                clear={() => {\r\n                                    formList[targetForms[0]].value = '';\r\n                                    formList[targetForms[1]].value = '';\r\n                                    formList[targetForms[2]].value = '';\r\n                                    formList[targetForms[3]].value = '';\r\n                                    formList[targetForms[4]].value = '';\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                xList={xList}\r\n                                yList={yList}\r\n                                rList={rList}\r\n                                gList={gList}\r\n                                bList={bList}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                }\r\n            } else {\r\n                let labelName = argument.name;\r\n                if (argument.disp != undefined) labelName = argument.disp;\r\n                formJsxList.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{labelName}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={142}\r\n                                marginLeft={6}\r\n                                isNumber\r\n                                isReadOnly={isReadOnly}\r\n                                step={argument.step}\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min as number, argument.max as number),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max} step={argument.step}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return formJsxList;\r\n    }\r\n}\r\n\r\nexport default LogicFormUtil;\r\n\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    overflow: hidden;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 6px;\r\n    width: calc(100% - 160px);\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'array'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'array', 'constant', 'argument', 'self', 'field', 'array.len', 'array.itr'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'draw', 'draw-colorable'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n        isArray?: boolean;\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: string[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        disp?: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        disp?: string;\r\n        isArray?: boolean;\r\n        min?: number;\r\n        max?: number;\r\n        step?: number;\r\n        defval?: string;\r\n        isPosX?: boolean;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let detailJsx = <>...</>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedItem;\r\n                    detailJsx = <span>{data.name}&nbsp;<_Span color=\"#ffe89ba6\">entry:&nbsp;</_Span><_Field>{data.entry}</_Field></span>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n\r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'seedsend-item':\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'send-item':\r\n            case 'seedsend-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../util/logicFormUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const [seedargList, formgrpList]: [LogicUtil.NodeSeedArgItem[], LogicUtil.NodeFromGrpItem[]] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        const argInfoList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n            args.map(arg => {\r\n                return arg.data as LogicUtil.NodeSeedArgItem;\r\n            });\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        const formgrpMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'formgrp-mng');\r\n        if (formgrpMng != null) {\r\n            formgrpList = (formgrpMng.data as LogicUtil.NodeFromgrpManager).\r\n                defines.map(arg => {\r\n                    return arg.data as LogicUtil.NodeFromGrpItem;\r\n                });\r\n        }\r\n        return [argInfoList, formgrpList];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(seedargList.map(arg => {\r\n                let defval = '';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return LogicFormUtil.buildPreviewForms(\r\n            !isModify, seedargList, formgrpList, paramForms, setParamForms\r\n        );\r\n        // return paramForms.map((paramForm, i) => {\r\n        //     const arg = argInfoList[i];\r\n        //     return <FormUtil.FormRecord key={i}\r\n        //         titleLabel={arg.name}\r\n        //         jsx={\r\n        //             <FormUtil.TextField\r\n        //                 width={150}\r\n        //                 isReadOnly={!isModify}\r\n        //                 checkable={paramForm}\r\n        //                 setCheckable={(checkable) => {\r\n        //                     paramForms[i] = checkable;\r\n        //                     setParamForms(paramForms.slice());\r\n        //                 }}\r\n        //                 isNumber\r\n        //                 step={arg.step}\r\n        //                 validates={[\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkRequired(value),\r\n        //                         errorType: \"required\"\r\n        //                     },\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n        //                         errorType: \"value\"\r\n        //                     },\r\n        //                 ]}\r\n        //             />\r\n        //         }\r\n        //     />\r\n        // });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = form.value;\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = form.value;\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 22),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'preset', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: ''\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isPosX, setPosX] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isArray, setArray] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setMin({ ...min, value: (param.min != undefined) ? param.min.toString() : '' });\r\n        setMax({ ...max, value: (param.max != undefined) ? param.max.toString() : '' });\r\n        setStep({ ...step, value: (param.step != undefined) ? param.step.toString() : '' });\r\n        setDefval({ ...defval, value: (param.defval != undefined) ? param.defval.toString() : ''});\r\n        setPosX({ ...isPosX, value: (param.isPosX ?? false) ? '1' : '' });\r\n        setArray({ ...isArray, value: (param.isArray ?? false) ? '1' : '' });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : defval.value,\r\n                    isPosX: isPosX.value === '' ? undefined : true,\r\n                    isArray: isArray.value === '' ? undefined : true,\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.min = Number(min.value === '' ? '0' : min.value);\r\n                param.max = Number(max.value === '' ? '0' : max.value);\r\n                param.step = Number(step.value === '' ? '0' : step.value);\r\n                param.defval = defval.value === '' ? undefined : defval.value;\r\n                param.isPosX = isPosX.value === '' ? undefined : true;\r\n                param.isArray = isArray.value === '' ? undefined : true;\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 16),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Array\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isArray}\r\n                            setCheckable={(checkable) => {\r\n                                setArray(checkable);\r\n                                setMin({ ...min, value: '' });\r\n                                setMax({ ...max, value: '' });\r\n                                setStep({ ...step, value: '' });\r\n                                setDefval({ ...defval, value: '' });\r\n                                setPosX({ ...isPosX, value: '' });\r\n                            }}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                        // dependency={[min, max, step, defval, isPosX]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[max, isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[min, isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[isArray]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Position\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isPosX}\r\n                            setCheckable={setPosX}\r\n                            isEnabled={isArray.value === ''}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                            dependency={[isArray]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'argument', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push((arg.defval ?? 0).toString());\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem));\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else if (type === 'draw') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(2).fill({ value: '', errors: [] }));\r\n                                } else if (type === 'draw-colorable') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(5).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({ ...checkable });\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    const method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                    if (method === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else if (method === 'draw') {\r\n                        switch (i) {\r\n                            case 0: formName += 'X'; break;\r\n                            case 1: formName += 'Y'; break;\r\n                        }\r\n                    } else if (method === 'draw-colorable') {\r\n                        switch (i) {\r\n                            case 0: formName += 'X'; break;\r\n                            case 1: formName += 'Y'; break;\r\n                            case 2: formName += 'R'; break;\r\n                            case 3: formName += 'G'; break;\r\n                            case 4: formName += 'B'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs\r\n                                        .filter(item => groupMethod.value === 'color' ? !item.isArray : item.isArray)\r\n                                        .map(item => {\r\n                                            return { value: item.name, labelText: item.name }\r\n                                        })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import { assert } from \"console\";\r\nimport { Store } from \"../../../../redux/store/store\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../../launcher/util/storyUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    /**\r\n     * 同レベル階層に自身ノードの複製を作成する\r\n     * @param node コピー対象のノード\r\n     * @param newName コピー後の名称\r\n     */\r\n    export const replicateSameLevel = (node: TreeUtil.ElementNode, newName: string) => {\r\n        if (node.parent == null) return;\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const cloneBase = wrap.data;\r\n        const cloneDest = JSON.parse(JSON.stringify((cloneBase)));\r\n\r\n        const newWrap: LogicUtil.WrapElement = {\r\n            type: wrap.type,\r\n            data: cloneDest\r\n        };\r\n        const namable = getNamableProps(wrap.type);\r\n        newWrap.data[namable] = newName;\r\n\r\n        // ロジックマネージャに追加\r\n        const newNode = LogicElementUtil.addChild(newWrap, node.parent);\r\n        // 子要素の展開\r\n        newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n    }\r\n\r\n    export const getReplicateButton = (\r\n        node: TreeUtil.ElementNode,\r\n        isEnable: boolean,\r\n        targetElement: string, store: Store,\r\n        setStore: (store: Store) => void,\r\n        invalidate: () => void\r\n    ): JSX.Element => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        return <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[{\r\n                label: 'Replicate',\r\n                isEnable,\r\n                // isEnable: false,\r\n                callback: () => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={`Replicate this ${targetElement}.`}\r\n                        buttons={[\r\n                            {\r\n                                label: 'Cancel',\r\n                                callback: () => {\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter',\r\n                                callback: () => {\r\n                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                    const name = wrap.data[namable] as string;\r\n                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                    // mappingForm();\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }\r\n            }]}\r\n        />;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'seed-item':\r\n            case 'argument-item':\r\n            case 'seedarg-item':\r\n            case 'field-item':\r\n            case 'sample-item':\r\n            case 'thumbnail-item':\r\n            case 'logic-item': return 'name';\r\n        }\r\n        throw new Error('Namable props not found.');\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n\r\n    export const findSeedWrap = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const root = rootData.data as LogicUtil.NodeRoot;\r\n        const seed = (root.seedMng.data as LogicUtil.NodeSeedManager).defs.find(def => {\r\n            const seedItem = def.data as LogicUtil.NodeSeedItem;\r\n            return seedItem.name === seedId;\r\n        });\r\n        if (seed == undefined) throw new Error();\r\n        return seed;\r\n    }\r\n\r\n    export const doParticleJob = (rootData: LogicUtil.WrapElement, fuse: StoryUtil.Fuse, owner: Particle.Instance[]) => {\r\n        const seedWrap = findSeedWrap(rootData, fuse.seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        const getSendingValueMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const valueMapList: PreviewUtil.ValueMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (!seedarg.isArray) {\r\n                    valueMapList.push({ name: seedarg.name, value: Number(fuse.values[i]) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => !item.isArray)\r\n                .map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMapList);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value };\r\n                });\r\n        }\r\n\r\n        const getSendingArrayMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const arrayMapList: PreviewUtil.ArrayMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (seedarg.isArray) {\r\n                    arrayMapList.push({ name: seedarg.name, array: fuse.values[i].split(',').map(v => Number(v)) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => item.isArray)\r\n                .map(item => {\r\n                    const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMapList);\r\n                    if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, array: array };\r\n                });\r\n        }\r\n\r\n        owner.push(new Particle.Instance(\r\n            PreviewUtil.buildLogicProps(owner, getOrigin(), rootData, getSendingValueMap(), getSendingArrayMap())\r\n        ));\r\n    }\r\n\r\n    export type SeedProps = {\r\n        seed: LogicUtil.NodeSeedItem;\r\n        logic: LogicUtil.NodeLogicItem;\r\n        seedargList: LogicUtil.NodeSeedArgItem[];\r\n        seedsendList: LogicUtil.NodeParamItem[];\r\n        thumbnailList: LogicUtil.NodeThumbnailItem[];\r\n    }\r\n    export const getSeedProperties = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const seedWrap = findSeedWrap(rootData, seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        const seedargList = seedargMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n        const seedsendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n        const seedsendList = seedsendMng.params.map(wrap => wrap.data as LogicUtil.NodeParamItem);\r\n        const thumbnailMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'thumbnail-mng').data as LogicUtil.NodeThumnailManager;\r\n        const thumbnailList = thumbnailMng.items.map(wrap => wrap.data as LogicUtil.NodeThumbnailItem);\r\n\r\n        return {\r\n            seed, logic: getOrigin(), seedargList, seedsendList, thumbnailList\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","export namespace SPUtil {\r\n\r\n    export const SCREEN_WIDTH = 640;\r\n    export const SCREEN_HEIGHT = 960;\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: LogicUtil.NodeArgumentItem[] = useMemo(() => {\r\n        let list: LogicUtil.NodeArgumentItem[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: '', errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const isFormInputOK = formList.find(form => form.errors.length > 0) == undefined;\r\n        if (isFormInputOK) {\r\n            props.setSendingValueMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'number';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        return { name: argument.name, value: Number(form.value) } as PreviewUtil.ValueMap\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'array';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        const array = form.value.split(',').map(v => Number(v));\r\n                        return { name: argument.name, array } as PreviewUtil.ArrayMap\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n\r\n            const validates: ValidateUtil.Validate[] = [];\r\n            let isNumber = false;\r\n            if (argument.valueType === 'number') {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                    errorType: \"required\"\r\n                });\r\n                isNumber = true;\r\n            } else {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                    errorType: \"value\"\r\n                });\r\n            }\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument.name}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={312}\r\n                        isNumber={isNumber}\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={validates}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, seedargList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const seedargList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, seedargList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(seedargList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap: PreviewUtil.ValueMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (!seedarg.isArray) {\r\n                        valueMap.push({ name: seedarg.name, value: Number(form.value) });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return !item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                        if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, value };\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                const arrayMap: PreviewUtil.ArrayMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (seedarg.isArray) {\r\n                        const array = (form.value === '' ? [] : form.value.split(',').map(v => Number(v)));\r\n                        arrayMap.push({ name: seedarg.name, array });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMap);\r\n                        if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, array };\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {LogicFormUtil.buildPreviewForms(\r\n            false, seedargList, formgrpList, formList, setFormList\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { SPUtil } from \"../../../sp/spUtil\";\r\nimport { VscDebugStart } from \"react-icons/vsc\";\r\nimport { IoStopOutline } from \"react-icons/io5\";\r\nimport { RxReset } from \"react-icons/rx\";\r\nimport { AiFillStepBackward, AiFillStepForward } from \"react-icons/ai\";\r\n\r\nnamespace PreviewLauncherFrameSp {\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    interval={12}\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 60,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            icon: <AiFillStepBackward />,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 60,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            icon: <AiFillStepForward />,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            width: 100,\r\n                            icon: !isPlay ? <VscDebugStart /> : <IoStopOutline />,\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            width: 100,\r\n                            isEnable: !isPlay,\r\n                            icon: <RxReset />,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={SPUtil.SCREEN_WIDTH - 1}\r\n                height={768}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                {previewTabJsx}\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrameSp;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #575a61ce;\r\n    border: 1px solid #8f8f8f;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${SPUtil.SCREEN_WIDTH - 3}px;\r\n    height: ${SPUtil.SCREEN_WIDTH - 3}px;\r\n    margin: 35px 0 0 0;\r\n    background-color: #020202df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PreviewLauncherFrame from \"./previewLauncherFrame\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PreviewLauncherFrameSp from \"./previewLauncherFrameSp\";\r\n\r\nnamespace BuildUtil {\r\n\r\n    export type RunParticleProps = {\r\n        /** フレームの上限（過ぎると停止） */\r\n        limitFrame: number,\r\n        /** パーティクル数の上限（超えると停止） */\r\n        limitParticle: number,\r\n        /** 最低保証フレーム */\r\n        guaranteeFrame?: number,\r\n        /** 1フレーム経過ごとに実行する処理のコールバック */\r\n        doIterate: (frame: number, owner: Particle.Instance[]) => void,\r\n        /** 最終フレーム（ループから抜けた直後）に実行する処理のコールバック */\r\n        doEnd?: (frame: number, owner: Particle.Instance[]) => void\r\n    };\r\n\r\n    export type DivideProps = {\r\n        num: number;\r\n        standbyEvent: () => void;\r\n        countUpEvent: () => void;\r\n    }\r\n\r\n    export const run = (props: RunParticleProps) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        const owner: Particle.Instance[] = [];\r\n        let frame = 0;\r\n\r\n        while (true) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) break;\r\n            frame++;\r\n        };\r\n\r\n        if (props.doEnd != undefined) {\r\n            props.doEnd(frame, owner);\r\n        }\r\n    }\r\n\r\n    export const runPaging = (props: RunParticleProps, owner: Particle.Instance[], beginFrame: number, advanceFrame: number) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        // const owner: Particle.Instance[] = [];\r\n\r\n        let frame = beginFrame;\r\n        while (frame - beginFrame < advanceFrame) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            // if (frame > props.limitFrame ||\r\n            //     owner.length > props.limitParticle ||\r\n            //     frame > minFrame && owner.length === 0\r\n            // ) {\r\n            //     if (props.doEnd != undefined) {\r\n            //         props.doEnd(frame, owner);\r\n            //     }\r\n            //     break;\r\n            // }\r\n            frame++;\r\n        };\r\n    }\r\n\r\n    const PROGRESS_VAL = 1;\r\n\r\n    type StoryPreviewProps = {\r\n        sceens: string[];\r\n        useFrame: number;\r\n    }\r\n\r\n    export type PagingField = {\r\n        useFrame: number;\r\n        curFrame: number;\r\n        sceens: string[];\r\n        owner: Particle.Instance[];\r\n    }\r\n\r\n    export const BuildFrame = (props: {\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n        const [buildCache, setBuildCache] = useState<PagingField>({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n        useEffect(() => {\r\n            // プログレスバーが100％になったら処理される\r\n            if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n                setStoryPreviewProps({\r\n                    sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                });\r\n                return;\r\n            }\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n\r\n            if (buildCache.useFrame === 0) {\r\n                BuildUtil.run({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n                    },\r\n                    doEnd: (frame) => {\r\n                        buildCache.useFrame = frame;\r\n                    }\r\n                });\r\n                setBuildCache({ ...buildCache });\r\n            } else {\r\n                runPaging({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n\r\n                        buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        }));\r\n                    },\r\n                    // doEnd: () => {\r\n                    //     setStoryPreviewProps({\r\n                    //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                    //     });\r\n                    // }\r\n                }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n                buildCache.curFrame += PROGRESS_VAL;\r\n                if (buildCache.curFrame > buildCache.useFrame) {\r\n                    buildCache.curFrame = buildCache.useFrame;\r\n                }\r\n                setBuildCache({ ...buildCache });\r\n            }\r\n        }, [buildCache]);\r\n\r\n        useEffect(() => {\r\n            if (storyPreviewProps != null) {\r\n                store.system.dialog = <PreviewLauncherFrameSp.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                    closeAction={props.closeAction}\r\n                />;\r\n                dispatcher.updateStore();\r\n            }\r\n        }, [storyPreviewProps]);\r\n\r\n\r\n        const getJsx = () => {\r\n            if (storyPreviewProps == null) {\r\n                if (buildCache == null) return <></>;\r\n                const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                const isStandby = buildCache.useFrame === 0;\r\n                return (\r\n                    <_Blind>\r\n                        <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                        <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                    </_Blind>\r\n                );\r\n            }\r\n            return <></>;\r\n        }\r\n\r\n        return getJsx();\r\n    }\r\n}\r\n\r\nexport default BuildUtil;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ReactLoading from 'react-loading';\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\nimport BuildUtil from \"./buildUtil\";\r\n\r\nnamespace PreviewLogicFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n        closeButtonAction: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [progress, setProgress] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const [sendingValueMap, setSendingValueMap] = useState<((() => PreviewUtil.ValueMap[]) | null)>(null);\r\n        const [sendingArrayMap, setSendingArrayMap] = useState<((() => PreviewUtil.ArrayMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        useEffect(() => {\r\n            if (isBuild) build();\r\n        }, [isBuild]);\r\n\r\n        const build = () => {\r\n            if (sendingValueMap == null) return;\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            BuildUtil.run({\r\n                limitFrame: 500,\r\n                limitParticle: 3000,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        const getOrigin = () => {\r\n                            if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                            else {\r\n                                const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                                const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                        owner.push(new Particle.Instance(\r\n                            PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any, sendingArrayMap as any)\r\n                        ));\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n\r\n                        // 経過フレーム、要素数の表示\r\n                        ctx.globalAlpha = 1;\r\n                        ctx.font = '16pt Arial';\r\n                        ctx.fillStyle = '#ffffff';\r\n                        ctx.fillText(`${frame}`, 6, 24);\r\n                        ctx.fillStyle = '#ffec5c';\r\n                        ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                        // ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    setFrameCnt(frame);\r\n                    setSceens(sceens);\r\n\r\n                    setBuild(false);\r\n                    setTabIndex(1);\r\n                }\r\n            });\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_Blind isEnable={isBuild}>\r\n                    {/* <ReactLoading type='spinningBubbles' /> */}\r\n                    <_Msg>Now building...</_Msg>\r\n                </_Blind>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                setBuild(true);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={props.closeButtonAction}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLogicFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;\r\n\r\n\r\nconst _Blind = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: ${props => !props.isEnable ? 'none;' : 'inline-block;'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000552cd;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Msg = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    margin: 240px 0 0 110px;\r\n    /* background-color: #26f055cd; */\r\n    color: white;\r\n    font-size: 56px;\r\n    font-weight: 600;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport assert from \"assert\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number,\r\n        source?: string,\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject: StoreCloud.Project = {\r\n                    seq: Number(maxSeq + 1),\r\n                    name: name.value,\r\n                    source: props.source as string,\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM libdvtbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO libdvtbl(seq, owner, name, version, outline, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${'1.0'}', '', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update libdvtbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport PreviewLogicFrame from \"../preview/previewLogicFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.libraryData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <PreviewLogicFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n                closeButtonAction={() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c9;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #ccd2d3;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\n\r\nnamespace ShareCloudUtil {\r\n\r\n    export const uploadShareScenario = async (project: StoreLocalStrage.Project) => {\r\n\r\n        let cloudSeq = project.cloudSeq;\r\n        let isExists = false;\r\n\r\n        if (cloudSeq === -1) {\r\n            cloudSeq = await getNextSeq();\r\n        } else {\r\n            isExists = await isExistsAlreadySameSeq(cloudSeq);\r\n        }\r\n\r\n        const sourcePlain = JSON.stringify(project.scenarioData);\r\n        const sourceZip = DataUtil.gZip(sourcePlain);\r\n        const libhash = DataUtil.getSHA256Hash(JSON.stringify(project.libraryData));\r\n\r\n        // 既に登録されている場合は上書きする\r\n        if (isExists) {\r\n            await overwriteSnrshRecord(cloudSeq, project.name, sourceZip)\r\n        } else {\r\n            await insertSnrshRecord(cloudSeq, project.name, libhash, sourceZip);\r\n\r\n            const existsHash = await isExistsSameHash(libhash);\r\n            // ハッシュがなければ登録する\r\n            if (!existsHash) {\r\n                const libSourcePlain = JSON.stringify(project.libraryData);\r\n                const libSourceZip = DataUtil.gZip(libSourcePlain);\r\n                const owner = -1;\r\n                await insertLibhsRecord(libhash, project.libName, libSourceZip, owner);\r\n            }\r\n        }\r\n\r\n        console.log('cloudSeq: ' + cloudSeq);\r\n        return cloudSeq;\r\n    }\r\n\r\n    export const deleteShareScenario = async (cloudSeq: number) => {\r\n\r\n        await deleteSnrshRecord(cloudSeq);\r\n\r\n        // 同じライブラリのハッシュを使っているシナリオがあるか\r\n        // const existsUseHash = await isExistsSameHash(libhash);\r\n        // // ハッシュがなければ登録する\r\n        // if (!existsHash) {\r\n        //     const libSource = JSON.stringify(project.libraryData);\r\n        //     const owner = -1;\r\n        //     await insertlibhsRecord(libhash, project.libName, libSource, owner);\r\n        // }\r\n    }\r\n\r\n    const getNextSeq = async () => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) as m FROM snrshtbl`);\r\n        const results = await response.json();\r\n        const records = results as { m: number }[];\r\n        return records.length === 0 ? 0 : (records[0].m + 1);\r\n    };\r\n\r\n    const insertSnrshRecord = async (seq: number, name: string, libhash: string, source: string) => {\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `INSERT INTO snrshtbl(seq, name, libhash, source, lastmod)\r\n            VALUES(${seq}, '${name}', '${libhash}', '${source}', datetime ('now'))`\r\n        );\r\n    }\r\n\r\n    const overwriteSnrshRecord = async (seq: number, name: string, source: string) => {\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE snrshtbl SET name = '${name}', source = '${source}', lastmod = datetime ('now')\r\n            WHERE seq = ${seq}`\r\n        );\r\n    }\r\n\r\n    const isExistsAlreadySameSeq = async (cloudSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as c FROM snrshtbl where seq = ${cloudSeq}`);\r\n        const results = await response.json();\r\n        const records = results as { c: number }[];\r\n        return records[0].c > 0;\r\n    };\r\n\r\n    const deleteSnrshRecord = async (seq: number) => {\r\n        DataUtil.sendQueryRequestToAPI('update', `DELETE FROM snrshtbl where seq = ${seq}`);\r\n    }\r\n\r\n    const isExistsSameHash = async (hash: string) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as c FROM libhstbl where hash = '${hash}'`);\r\n        const results = await response.json();\r\n        const records = results as { c: number }[];\r\n        return records[0].c > 0;\r\n    };\r\n\r\n    const insertLibhsRecord = async (hash: string, name: string, source: string, owner: number) => {\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `INSERT INTO libhstbl(hash, name, source, owner)\r\n            VALUES('${hash}', '${name}', '${source}', ${owner})`\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareCloudUtil;","import assert from \"assert\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\nimport NewProjectDialog from \"./newProjectDialog\";\r\nimport NewProjectDialogStoryOnly from \"./newProjectDialogStoryOnly\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n            >\r\n                <_Name>{project.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        if (store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [elementSize, developCnt, privateCnt, releaseCnt, logicCnt, fuseCnt] = useMemo(() => {\r\n        if (store.libraryData == null) return [0, 0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        let fuseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n\r\n        if (store.storyData != null) {\r\n            fuseCnt = store.storyData.fuseList.length;\r\n        }\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length, fuseCnt];\r\n    }, [store.libraryData]);\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const source = DataUtil.gZip(JSON.stringify(store.libraryData));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(store.libraryData));\r\n        updateProjectSource(curPrj.seq, source).then(() => {\r\n            curPrj.source = source;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        store.libraryData = data;\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    const saveLocalFile = () => {\r\n        DataUtil.saveLibraryFile(store, setStore);\r\n    }\r\n\r\n    const getNewSaveButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Upload cloud',\r\n                width: 210,\r\n                isEnable: hasData && store.cloud != null,\r\n                callback: uploadCloud\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Save file',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle == null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const getOverwriteButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: fcsListIdx != -1 && hasData,\r\n                callback: overwriteCloudFile\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle != null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const cloudJsx = (<_ContDiv isEnable={store.cloud != null}>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                    callback: cloneCloudFile\r\n                },\r\n                {\r\n                    label: 'Rename',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialog.Component\r\n                            targetSeq={projects[fcsListIdx].seq}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                            store.system.dialog = <ConfirmDialog.Component\r\n                                message=\"Delete project succesful!\"\r\n                            />;\r\n                            projects.splice(fcsListIdx, 1);\r\n                            setFcsListIdx(fcsListIdx - 1);\r\n                            setStore({ ...store });\r\n                        });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n        <_ListDiv>\r\n            {listItemJsx}\r\n        </_ListDiv>\r\n    </_ContDiv>);\r\n\r\n    const localJsx = (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    width: 100,\r\n                    isEnable: !hasData,\r\n                    callback: () => { DataUtil.loadFile(store, setStore) }\r\n                },\r\n                {\r\n                    label: 'Disconnect',\r\n                    width: 160,\r\n                    isEnable: store.fileHandle != null,\r\n                    callback: () => {\r\n                        store.fileHandle = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n    </>);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n                            store.libraryData = LogicElementUtil.getInitialData();\r\n                            // store.system.dialog = <NewProjectDialog.Component />;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Clear',\r\n                        width: 100,\r\n                        isEnable: hasData,\r\n                        callback: () => {\r\n                            store.libraryData = null;\r\n                            store.storyData = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={true}>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'Cloud', enable: true, cont: cloudJsx },\r\n                        { name: 'Local', enable: true, cont: localJsx },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getNewSaveButton(),\r\n                        getOverwriteButton()\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Elements\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : elementSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    // width={340}\r\n                                    isRecordItem\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Fuses\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : fuseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.BorderPanel\r\n                    title=\"File\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                /> */}\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update libdvtbl set source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from libdvtbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #ffe3fb53; */\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ContDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane, TabElements } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'scenario';\r\n        return str;\r\n    };\r\n    const projectType = getProjectType();\r\n\r\n    const tabElements: TabElements[] = [];\r\n    tabElements.push({ name: 'Manage', enable: true, cont: <ManageTab /> });\r\n    tabElements.push({ name: 'Library', enable: projectType === 'library', cont: <LogicMainteTab /> });\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={tabElements}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const download = (plainData: string) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        window.showSaveFilePicker(options).then((handle) => {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await handle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"Successfully download!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        }).catch(() => {\r\n            console.log('キャンセルされました');\r\n        });\r\n    }\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName onClick={() => {\r\n                        download(JSON.stringify(lib.rootData));\r\n                    }}>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        let labelName = seed.name;\r\n                        if (seed.disp != undefined) labelName = seed.disp;\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <PreviewLogicFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                        closeButtonAction={() => {\r\n                                            store.system.dialog = null;\r\n                                            setStore({ ...store });\r\n                                        }}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{labelName}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = lib.owner) as owner, source, lastmod\r\n        FROM libdvtbl lib\r\n        WHERE source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #6d7a86;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #b9b9b9, #e2e2e2, #b9b9b9);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #c7c7c7;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 60px);\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    margin: 0 0 0 30px;\r\n    background-color: #b1b1b1;\r\n    /* border-radius: 0 0 2px 2px; */\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    clip-path: polygon(7.5% 100%, 0% 0%, 100% 0%, 92.5% 100%);\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    \r\n    &:hover {\r\n        color: #db3333;\r\n    }\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport releaseNote from \"../../resource/release_note.json\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        // fetch('assets/release_note.json')\r\n        //     .then(response => response.json()) // (2) レスポンスデータを取得\r\n        //     .then(json => { // (3)レスポンスデータを処理\r\n        //         const list = json as NotePorp[];\r\n        //         setJsx(list.map((item, i) => {\r\n        //             const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n        //             return (\r\n        //                 <_Item key={i}>\r\n        //                     <_Header>v{item.version} ({item.date})</_Header>\r\n        //                     <_Detail>{record}</_Detail>\r\n        //                 </_Item>\r\n        //             );\r\n        //         }));\r\n        //     });\r\n\r\n        const list = releaseNote as NotePorp[];\r\n        setJsx(list.map((item, i) => {\r\n            const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n            return (\r\n                <_Item key={i}>\r\n                    <_Header>v{item.version} ({item.date})</_Header>\r\n                    <_Detail>{record}</_Detail>\r\n                </_Item>\r\n            );\r\n        }));\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} libruary have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                    { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel /> },\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport CanvasUtil from '../../utils/canvasUtil';\r\nimport DataUtil from '../../utils/dataUtil';\r\nimport SystemConst from '../../utils/systemConst';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getTitleURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <_Logo src={logo} />\r\n                </_Title>\r\n                <_VERSION>{SystemConst.APP_VERSION}</_VERSION>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2023 Pixel Flare All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#858892, #8e99b6);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    /* color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-shadow: 1px 2px 22px #0000003d; */\r\n    text-align: center;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    /* & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    } */\r\n`;\r\n\r\nconst _VERSION = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 240px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #ebe7ab;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* height: 200%; */\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useState } from \"react\";\r\nimport { initialStore } from \"../../redux/store/store\";\r\nimport styled from \"styled-components\";\r\nimport GloballDialog from \"../dialog/globalDialog\";\r\nimport TotalHeader from \"./totalHeader\";\r\nimport MainFrame from \"./mainFrame\";\r\nimport ModeSelectDialog from \"./modeSelectDialog\";\r\nimport Splash from \"./splash\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\n\r\nconst PCRoot = () => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <Splash\r\n            remove={() => {\r\n                store.system.isSplash = false;\r\n                // store.system.dialog = <ModeSelectDialog />\r\n                setStore({ ...store });\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (<>\r\n        {splashJsx}\r\n        < _Wrap\r\n            bgColor={store.design.base1}\r\n        >\r\n            <GloballDialog />\r\n            <TotalHeader />\r\n            <_MainDiv>\r\n                <MainFrame />\r\n            </_MainDiv>\r\n        </_Wrap >\r\n    </>);\r\n}\r\n\r\nexport default PCRoot;\r\n\r\nconst _Wrap = styled.div<{\r\n    bgColor: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    min-width: 1200px;\r\n    min-height: 900px;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #a3c1c7; */\r\n    /* background-color: ${props => props.bgColor}; */\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import DataUtil from \"../utils/dataUtil\";\r\nimport PreviewLogicFrame from \"../contents/create/preview/previewLogicFrame\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../contents/create/factory/util/logicElementUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../utils/form/formUtiil\";\r\nimport CanvasUtil from \"../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../contents/create/preview/previewLauncherFrame\";\r\nimport BuildUtil from \"../contents/create/preview/buildUtil\";\r\nimport Particle from \"../contents/graphic/particle\";\r\nimport { VscSettingsGear } from \"react-icons/vsc\";\r\nimport PreviewLauncherFrameSp from \"../contents/create/preview/previewLauncherFrameSp\";\r\nimport SystemConst from \"../utils/systemConst\";\r\nimport { SPUtil } from \"./spUtil\";\r\n\r\ntype StoryProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    libraryData: LogicUtil.WrapElement;\r\n    scenarioData: StoryUtil.StoryData;\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\ntype StoryPreviewProps = {\r\n    sceens: string[];\r\n    useFrame: number;\r\n}\r\n\r\nexport type PagingField = {\r\n    useFrame: number;\r\n    curFrame: number;\r\n    sceens: string[];\r\n    owner: Particle.Instance[];\r\n}\r\n\r\nconst PROGRESS_VAL = 1;\r\n\r\nconst DirectLinkManager = (props: {\r\n    scenarioSeq: number;\r\n}) => {\r\n    const [storyData, setStoryData] = useState<StoryProps | null>(null);\r\n    const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n    const [buildCache, setBuildCache] = useState<null | PagingField>(null);\r\n\r\n    const [titleURL, logoURL] = useMemo(() => {\r\n        return [CanvasUtil.getTitleURL(), CanvasUtil.getLogoURL()];\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        findScenarioData(props.scenarioSeq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const res = resList[0] as {\r\n                    ownerId: string; seq: number, name: string, scenario: string, library: string, lastmod: string\r\n                };\r\n                const seq = res.seq;\r\n                const name = res.name;\r\n                const ownerId = res.ownerId;\r\n                const lastmod = res.lastmod;\r\n                const library = JSON.parse(DataUtil.unZip(res.library));\r\n                const scenario = JSON.parse(DataUtil.unZip(res.scenario));\r\n\r\n                // const rootData = library as LogicUtil.WrapElement;\r\n                // const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                // const seedList: SeedProps[] = seedMng.defs\r\n                //     .filter(wrap => {\r\n                //         const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                //         return seed.permit === 'release';\r\n                //     })\r\n                //     .map(wrap => {\r\n                //         const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                //         const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                //         const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                //         return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                //     });\r\n                setStoryData({\r\n                    name, libraryData: library, scenarioData: scenario, lastmod, ownerId\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (buildCache == null || storyData == null) return;\r\n        if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n            setStoryPreviewProps({\r\n                sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n            });\r\n            return;\r\n        }\r\n\r\n        const fuseList = storyData.scenarioData.fuseList;\r\n        const limitFrame = storyData.scenarioData.limitFrame;\r\n        const limitParticle = storyData.scenarioData.limitParticle;\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = storyData.libraryData;\r\n        if (buildCache.useFrame === 0) {\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n                },\r\n                doEnd: (frame) => {\r\n                    buildCache.useFrame = frame;\r\n                }\r\n            });\r\n            setBuildCache({ ...buildCache });\r\n        } else {\r\n\r\n            BuildUtil.runPaging({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n\r\n                    buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                // doEnd: () => {\r\n                //     setStoryPreviewProps({\r\n                //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                //     });\r\n                // }\r\n            }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n            buildCache.curFrame += PROGRESS_VAL;\r\n            if (buildCache.curFrame > buildCache.useFrame) {\r\n                buildCache.curFrame = buildCache.useFrame;\r\n            }\r\n            setBuildCache({ ...buildCache });\r\n        }\r\n    }, [buildCache]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        setBuildCache({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n    }\r\n\r\n    const getJsx = () => {\r\n        let jsx = <></>;\r\n        if (storyData != null) {\r\n            if (storyPreviewProps == null) {\r\n                const getBlindJsx = () => {\r\n                    if (buildCache == null) return <></>;\r\n                    const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                    const isStandby = buildCache.useFrame === 0;\r\n                    return (\r\n                        <_Blind>\r\n                            <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                            <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                        </_Blind>\r\n                    );\r\n                }\r\n                jsx = <>\r\n                    {getBlindJsx()}\r\n                    <_Header>{storyData.name}</_Header>\r\n                    {/* <_Header>{storyData.name}</_Header>\r\n                    <_Header>{storyData.name}</_Header> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Start',\r\n                                icon: <VscSettingsGear />,\r\n                                width: 300,\r\n                                callback() {\r\n                                    openPreviewAllDialog();\r\n                                },\r\n                            }\r\n                        ]}\r\n                    />\r\n                    <_Banner onClick={() => window.location.replace(SystemConst.APP_SERVER_DOMAIN)} >\r\n                        <_Logo src={logoURL} />\r\n                        <_Title src={titleURL} />\r\n                    </_Banner>\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLauncherFrameSp.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                    closeAction={() => {\r\n                        setStoryPreviewProps(null);\r\n                        setBuildCache(null);\r\n                    }}\r\n                />\r\n            }\r\n        } else {\r\n            jsx = <FormUtil.Message message=\"This link is invalid.\" />;\r\n        }\r\n        return jsx;\r\n    }\r\n\r\n    return getJsx();\r\n}\r\n\r\nexport default DirectLinkManager;\r\n\r\n\r\nconst findScenarioData = async (seq: number) => {\r\n    const sql = `\r\n        SELECT snr.seq, snr.name,\r\n        (select id from user_tbl where seq = lib.owner) ownerId,\r\n        lib.source library,\r\n        snr.source scenario, snr.lastmod\r\n        FROM snrshtbl snr inner join libhstbl lib on snr.libhash = lib.hash\r\n        WHERE snr.seq = ${seq}\r\n    `;\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', sql);\r\n    console.log(sql);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background: linear-gradient(to bottom, #00215e5c, #00000067, #00215e5c); */\r\n\r\n    color: #001558;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Banner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 20px;\r\n    left: ${(SPUtil.SCREEN_WIDTH - 512) / 2}px;\r\n    width: 512px;\r\n    height: 512px;\r\n    background-color: #4b4b5a;\r\n    /* border: 1px solid #dadada; */\r\n    border-radius: 10px;\r\n`;\r\nconst _Logo = styled.img<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 10px;\r\n    left: ${(512 - 400) / 2}px;\r\n    width: 400px;\r\n    height: 400px;\r\n    /* background-color: #6767eb; */\r\n`;\r\nconst _Title = styled.img<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 15px;\r\n    left: ${(512 - 320) / 2}px;\r\n    width: 320px;\r\n    height: 70px;\r\n    /* background-color: #67eb844e; */\r\n`;\r\n\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #abc9e6;\r\n`;\r\n\r\nconst _ArgCnt = styled.span<{\r\n}>`\r\n    color: #fbffbf;\r\n`;","import PublishFrame from \"../../contents/home/publishFrame\";\r\n\r\nconst SPLibraryChannel = () => {\r\n\r\n    return (<PublishFrame setLibCnt={()=>{}}/>);\r\n}\r\n\r\nexport default SPLibraryChannel;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { MdOutlineCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\n\r\nimport { AiOutlineInstagram, AiOutlineTwitter, AiOutlineMail, AiOutlineFacebook } from \"react-icons/ai\";\r\nimport { BsLine } from \"react-icons/bs\";\r\n\r\nimport {\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    LineShareButton,\r\n    MailruShareButton,\r\n    TwitterShareButton,\r\n} from \"react-share\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport ShareCloudUtil from \"./shareCloudUtil\";\r\nimport SystemConst from \"../../../../utils/systemConst\";\r\nimport StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\nimport DrawUtil from \"../../../../contents/graphic/drawUtil\";\r\n\r\n\r\nnamespace ShareDialog {\r\n\r\n    export const Component = (props: {\r\n        project: StoreLocalStrage.Project;\r\n    }) => {\r\n        const width = 500;\r\n        const height = 276;\r\n\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n        const design = store.design;\r\n        const project = props.project;\r\n\r\n        const share = () => {\r\n            dispatcher.syncProccess(\r\n                ShareCloudUtil.uploadShareScenario(project).then((cloudSeq) => {\r\n                    project.isShared = true;\r\n                    project.cloudSeq = cloudSeq;\r\n                    const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString();\r\n                    localStorage.setItem(fileKey, JSON.stringify(project));\r\n                    dispatcher.updateStore();\r\n                })\r\n            );\r\n\r\n        }\r\n\r\n        useEffect(() => {\r\n            share();\r\n        }, []);\r\n\r\n        const getURL = () => {\r\n            let url = '';\r\n            if (project.cloudSeq !== -1) {\r\n                const hash = DataUtil.getHashedFromProjectSeq(project.cloudSeq);\r\n\r\n                url = `${SystemConst.APP_SERVER_DOMAIN}#/share?v=${hash}`;\r\n            }\r\n            return url;\r\n        };\r\n\r\n        const getURLAddQueryParam = () => {\r\n            return getURL() + '&openExternalBrowser=1';\r\n        }\r\n\r\n        return (\r\n            <_Frame width={width} height={height}\r\n                bgColor={DrawUtil.toWhite(design.sub1, 20)}\r\n            >\r\n                <FormUtil.Message\r\n                    message={'Share your digital art!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <_UrlDiv\r\n                    value={getURL()}\r\n                    isEnable={project.isShared}\r\n                    readOnly />\r\n                <_Record\r\n                    isEnable={project.isShared}\r\n                >\r\n                    <InstapaperShareButton\r\n                        url={getURL()}\r\n                        children={<_SnsIconFrame color=\"#a76f99\"><AiOutlineInstagram /></_SnsIconFrame>}\r\n                    />\r\n                    <TwitterShareButton\r\n                        url={getURL()}\r\n                        children={<_SnsIconFrame color=\"#2ba0a0\"><AiOutlineTwitter /></_SnsIconFrame>}\r\n                    />\r\n                    <MailruShareButton\r\n                        url={getURL()}\r\n                        children={<_SnsIconFrame color=\"#790e0e\"><AiOutlineMail /></_SnsIconFrame>}\r\n                    />\r\n                    <FacebookShareButton\r\n                        url={getURL()}\r\n                        children={<_SnsIconFrame color=\"#54618a\"><AiOutlineFacebook /></_SnsIconFrame>}\r\n                    />\r\n                    <LineShareButton\r\n                        url={getURL()}\r\n                        children={<_SnsIconFrame color=\"#6fa56e\"><BsLine /></_SnsIconFrame>}\r\n                    />\r\n                </_Record>\r\n                <FormUtil.Record\r\n                    marginTop={20}\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.SwitchTwoFace\r\n                            label1=\"Private\"\r\n                            label2=\"Shared\"\r\n                            rate1={50}\r\n                            rate2={50}\r\n                            width={320}\r\n                            isUse={project.isShared}\r\n                            callback={() => {\r\n                                if (!project.isShared) {\r\n                                    share();\r\n                                } else {\r\n                                    dispatcher.syncProccess(\r\n                                        ShareCloudUtil.deleteShareScenario(project.cloudSeq).then(() => {\r\n                                            project.isShared = false;\r\n                                            project.cloudSeq = -1;\r\n                                            const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString();\r\n                                            localStorage.setItem(fileKey, JSON.stringify(project));\r\n                                            dispatcher.updateStore();\r\n                                        })\r\n                                    );\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    bgColor: string;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: ${props => props.bgColor};\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 8px 0 0 0;\r\n    text-align: center;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _TextAreaDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 120px;\r\n    margin: 10px 0 0 4px;\r\n    border: 2px solid #3d3d3d;\r\n    box-sizing: border-box;\r\n`;\r\nconst _UrlDiv = styled.textarea<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 60px;\r\n    margin: 4px 0 0 4px;\r\n    border: 1px solid #3d3d3d;\r\n   background-color: #ebf5f557;\r\n   /* background-color: transparent; */\r\n   outline: none;\r\n   font-size: 18px;\r\n   color: #0041a3;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _SnsIconFrame = styled.div<{\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 8px;\r\n    width: 80px;\r\n    height: 80px;\r\n    border: 2px solid #555555;\r\n    /* background-color: #81818139; */\r\n    box-sizing: border-box;\r\n    font-size: 65px;\r\n    color: ${props => props.color};\r\n    margin: 0 4px;\r\n    &:hover {\r\n        background-color: #f0f0f0cc;\r\n    }\r\n`;","\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport libraries from \"../../../../resource/library/library.json\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\n\r\nnamespace LibraryLoader {\r\n\r\n    export type LibInfo = {\r\n        name: string;\r\n        version: string;\r\n        outline: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const getOfficialList = (): LibInfo[] => {\r\n        return libraries.map(lib => {\r\n            return {\r\n                name: lib.name,\r\n                version: lib.version,\r\n                outline: lib.outline,\r\n                rootData: JSON.parse(DataUtil.unZip(lib.source.toString())) as LogicUtil.WrapElement\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getExtendList = () => {\r\n        const list: LibInfo[] = [];\r\n\r\n\r\n        return list;\r\n    }\r\n}\r\n\r\nexport default LibraryLoader;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport StoreCloud from \"../../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../../redux/store/store\";\r\nimport { AiOutlineEnter, AiOutlineCheck } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LibraryLoader from \"./libraryLoader\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\n\r\nnamespace NewScenarioDialog {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n        defaultName: string;\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n        // const [scenarioName, setScenarioName] = useState<FormUtil.CheckableValue>({ value: 'new_project_0', errors: [] });\r\n        const [focusLibIndex, setFocusLibIndex] = useState<number>(0);\r\n        const [isExtend, setExtend] = useState<boolean>(false);\r\n\r\n        const width = 500;\r\n        const height = 618;\r\n\r\n        // useEffect(() => {\r\n        //     findAllReleaseProjectList().then(resList => {\r\n        //         setCloudLibs(resList.map(res => {\r\n        //             return {\r\n        //                 name: res.name,\r\n        //                 ownerId: res.owner,\r\n        //                 seq: res.seq,\r\n        //                 rootData: JSON.parse(DataUtil.unZip(res.source))\r\n        //             }\r\n        //         }));\r\n        //     });\r\n        // }, []);\r\n\r\n        const officialPackList = useMemo(() => {\r\n            return LibraryLoader.getOfficialList();\r\n        }, []);\r\n\r\n        const extendPackList = useMemo(() => {\r\n            return !isExtend ? [] : LibraryLoader.getExtendList();\r\n        }, [isExtend]);\r\n\r\n        const libPackJsxList = useMemo(() => {\r\n            return (!isExtend ? officialPackList : extendPackList).map((pack, i) => {\r\n                const isFocus = focusLibIndex === i;\r\n                return (\r\n                    <_LibItem key={i}\r\n                        isFocus={isFocus}\r\n                        onClick={() => {\r\n                            setFocusLibIndex(i);\r\n                        }}\r\n                    >\r\n                        <_CheckDiv>{isFocus ? <AiOutlineCheck /> : <></>}</_CheckDiv>\r\n                        <_LibInfo>\r\n                            <_LibName>{pack.name}</_LibName>\r\n                            <_LibVersion>{pack.version}</_LibVersion>\r\n                            <_LibOutline>{pack.outline}</_LibOutline>\r\n                        </_LibInfo>\r\n                    </_LibItem>\r\n                );\r\n            });\r\n        }, [isExtend, focusLibIndex]);\r\n\r\n        const getStoryLib = () => {\r\n            // let storyLib: LogicUtil.WrapElement | null = null;\r\n            // if (cloudLibs != null) {\r\n            //     const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n            //     if (lib != undefined) {\r\n            //         storyLib = lib.rootData;\r\n            //     }\r\n            // }\r\n            // return storyLib;\r\n            return (!isExtend ? officialPackList : extendPackList)[focusLibIndex];\r\n        }\r\n\r\n        // const usingHash = useMemo(() => {\r\n        //     let hash = '-';\r\n        //     const lib = getStoryLib();\r\n        //     if (lib != null) {\r\n        //         hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n        //     }\r\n        //     return hash;\r\n        // }, [selectedLib]);\r\n\r\n        // const isCreateEnabled = () => {\r\n        //     return usingHash !== '-';\r\n        // }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                icon: <MdCancelPresentation />,\r\n                width: 120,\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                icon: <AiOutlineEnter />,\r\n                width: 120,\r\n                callback: () => {\r\n                    const lib = getStoryLib();\r\n                    \r\n                    store.libraryData = lib.rootData;\r\n                    store.storyData = {\r\n                        limitFrame: 300,\r\n                        limitParticle: 3000,\r\n                        fuseList: []\r\n                    };\r\n                    store.system.dialog = null;\r\n\r\n                    const local = store.local;\r\n                    //ファイルキーを生成\r\n                    const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + local.maxSeq.toString();\r\n\r\n                    // プロジェクトファイルのインスタンスを作成\r\n                    const project: StoreLocalStrage.Project = {\r\n                        name: props.defaultName,\r\n                        libraryData: lib.rootData,\r\n                        libName: `${lib.name} ${lib.version}`,\r\n                        localSeq: local.maxSeq,\r\n                        scenarioData: store.storyData,\r\n                        lastmod: DataUtil.getStringFromDate(new Date()),\r\n                        cloudSeq: -1,\r\n                        isShared: false\r\n                    };\r\n                    // ローカルストレージに新しいファイルキーでデータを作成\r\n                    localStorage.setItem(fileKey, JSON.stringify(project));\r\n                    // 画面のリストに即時反映するためにstoreにも追加\r\n                    local.projects.push(project);\r\n\r\n                    // 編集中のシーケンスとして設定\r\n                    store.editing.localSeq = local.maxSeq;\r\n                    store.editing.libName = `${lib.name} ${lib.version}`;\r\n\r\n                    // シーケンスの最大値を加算\r\n                    local.maxSeq ++;\r\n                    // ローカルストレージのシーケンスを更新\r\n                    localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_SEQ, local.maxSeq.toString());\r\n                    setStore({ ...store });\r\n                    if (props.extendAction != undefined) props.extendAction();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select library!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    marginBottom={10}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={320}\r\n                            checkable={scenarioName}\r\n                            setCheckable={setScenarioName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => !existNameList.includes(value),\r\n                                //     errorType: \"relation\"\r\n                                // }\r\n                            ]}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.SwitchTwoFace\r\n                            label1=\"Official\"\r\n                            label2=\"Extend\"\r\n                            rate1={50}\r\n                            rate2={50}\r\n                            width={320}\r\n                            isUse={isExtend}\r\n                            isEditable={false}\r\n                            callback={() => {\r\n                                setExtend(!isExtend);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n\r\n                <FormUtil.BorderPanel\r\n                    title=\"Library\"\r\n                    height={422}\r\n                    // isDisable={store.cloud == null}\r\n                    backgroundColor=\"#ffffff26\"\r\n                    innerJsx={<>\r\n                        {libPackJsxList}\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Library\"\r\n                    isEnabled={cloudLibs != null}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedLib}\r\n                            width={278}\r\n                            setCheckable={setSelectedLib}\r\n                            list={(cloudLibs ?? []).map((item) => {\r\n                                // const disp = `${item.ownerId}: ${item.name}`;\r\n                                return { value: item.seq.toString(), labelText: item.name };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewScenarioDialog;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\n\r\nconst _LibItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: 100px;\r\n    margin: 0 0 4px 4px;\r\n    background-color: #d3d3d3df;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #e4ec9996;\r\n    `}\r\n    border: 1px solid #8f8f8f;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _CheckDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 60px;\r\n    height: 60px;\r\n    margin: 20px 0 0 4px;\r\n    background-color: #e7e7e765;\r\n    border: 1px solid #8f8f8fac;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    font-size: 55px;\r\n    font-weight: 600;\r\n    color: #02db02;\r\n`;\r\n\r\nconst _LibInfo = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 5px;\r\n    position: relative;\r\n    width: calc(100% - 74px);\r\n    vertical-align: top;\r\n    /* background-color: #3fda6129; */\r\n`;\r\n\r\n\r\nconst _LibName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    max-width: calc(100% - 40px);\r\n    height: 50px;\r\n    margin-right: 6px;\r\n    /* background-color: #da3f3f64; */\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #435688;\r\n    overflow-x: hidden;\r\n    line-height: 48px;\r\n`;\r\n\r\nconst _LibVersion = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 34px;\r\n    height: 50px;\r\n    /* background-color: #3f68da63; */\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c7454c;\r\n    vertical-align: top;\r\n    line-height: 58px;\r\n`;\r\n\r\nconst _LibOutline = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #3fda6129; */\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #6a6d75;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport assert from \"assert\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport StoreCloud from \"../../../../redux/store/storeCloud\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport NewScenarioDialog from \"./newScenarioDialog\";\r\n\r\nnamespace NameDefDialogLocal {\r\n\r\n    export const Component = (props: {\r\n        focusIndex: number;\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 170;\r\n\r\n        const local = store.local;\r\n\r\n        // ローカルのシーケンス最大値と同じ場合はこれから作成するものなのでcreate\r\n        const isCreate = props.focusIndex === -1;\r\n\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            if (isCreate) {\r\n                let num = 0;\r\n                while (true) {\r\n                    const checkName = `${LocalStorageUtil.DEFAULT_FILE_NAME_PREFIX}${num}`;\r\n                    if (local.projects.find(p => p.name === checkName) == undefined) {\r\n                        return checkName;\r\n                    }\r\n                    num++;\r\n                }\r\n            } else {\r\n                const curProject = local.projects[props.focusIndex];\r\n                return curProject.name;\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                local.projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n\r\n        const registCreate = () => {\r\n        }\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Cancel',\r\n                            icon: <MdCancelPresentation />,\r\n                            width: 130,\r\n                            callback: () => {\r\n                                store.system.dialog = null;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: isCreate ? 'Regist' : 'Update',\r\n                            icon: <AiOutlineEnter />,\r\n                            width: 130,\r\n                            isEnable: name.errors.length === 0,\r\n                            callback: () => {\r\n                                if (isCreate) {\r\n                                    store.system.dialog = <NewScenarioDialog.Component\r\n                                        defaultName={name.value}\r\n                                        extendAction={props.extendAction}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                                else {\r\n                                    const curProject = local.projects[props.focusIndex];\r\n                                    curProject.name = name.value;\r\n                                    const key = `${LocalStorageUtil.KEY_SCENARIO_PREFIX}${curProject.localSeq}`;\r\n                                    localStorage.setItem(key, JSON.stringify(curProject));\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                };\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialogLocal;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { BsFillShareFill } from 'react-icons/bs';\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport assert from \"assert\";\r\nimport ShareDialog from \"./shareDialog\";\r\n\r\nnamespace SaveOptionDIalog {\r\n\r\n    export const Component = (props: {\r\n    }) => {\r\n\r\n        const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n        const width = 500;\r\n        const height = 130;\r\n\r\n        const project = store.local.projects.find(p => p.localSeq === store.editing.localSeq);\r\n        assert(project != undefined, 'project is undefined.');\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message=\"Save project successful.\"\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Share',\r\n                            icon: <BsFillShareFill />,\r\n                            width: 200,\r\n                            callback: () => {\r\n                                localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString(), JSON.stringify(project));\r\n                                store.system.dialog = <ShareDialog.Component\r\n                                    project={project}\r\n                                />;\r\n                                store.system.canDialogClose = true;\r\n                                dispatcher.updateStore();\r\n                            }\r\n                        }\r\n                    ]} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SaveOptionDIalog;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../../../contents/dialog/confirmDialog\";\r\nimport NewProjectDialogStoryOnly from \"../../../contents/create/manage/newProjectDialogStoryOnly\";\r\nimport NameDefDialog from \"../../../contents/create/manage/nameDefDialog\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport LogicUtil from \"../../../contents/create/factory/util/logicUtil\";\r\nimport { BsFillShareFill } from 'react-icons/bs';\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { FiUpload, FiDownload } from \"react-icons/fi\";\r\nimport { IoCreateOutline } from \"react-icons/io5\";\r\nimport { ImCopy } from \"react-icons/im\";\r\nimport { MdClear, MdOutlineDriveFileRenameOutline } from \"react-icons/md\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\n\r\nimport ShareDialog from \"./etc/shareDialog\";\r\nimport { setuid } from \"process\";\r\nimport NewScenarioDialog from \"./etc/newScenarioDialog\";\r\nimport LocalStorageUtil from \"../../../utils/localStorageUtil\";\r\nimport assert from \"assert\";\r\nimport StoreLocalStrage from \"../../../redux/store/storeLocalStrage\";\r\nimport NameDefDialogLocal from \"./etc/nameDefDialogLocal\";\r\n\r\nconst SPManageFrame = (props: {\r\n    isEdit: boolean;\r\n    setEdit: (isEdit: boolean) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const [update, setUpdate] = useState({});\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.local.projects;\r\n\r\n    useEffect(() => {\r\n        store.system.logoutActions.push(() => {\r\n            setFcsListIdx(-1);\r\n        });\r\n        // dispatcher.updateStore();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        if (!hasData) return null;\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        };\r\n        return data;\r\n    }\r\n\r\n    const projectItemJsxList = projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    if (fcsListIdx === i) setFcsListIdx(-1);\r\n                    else setFcsListIdx(i);\r\n                    // console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    // store.system.dialog = <ConfirmDialog.Component\r\n                    //     message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    // />;\r\n                    // setStore({ ...store });\r\n                }}\r\n            >\r\n                {/* <_Status type={project.type}>[{project.type}] </_Status> */}\r\n                <_Name>{project.name}</_Name>\r\n                <_Share\r\n                    onClick={() => {\r\n                        localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString(), JSON.stringify(project));\r\n                        store.system.dialog = <ShareDialog.Component\r\n                            project={project}\r\n                        />;\r\n                        store.system.canDialogClose = true;\r\n                        dispatcher.updateStore();\r\n                    }}\r\n                ><_Icon isShare={project.isShared}><BsFillShareFill /></_Icon></_Share>\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const thumbJsxList = useMemo(() => {\r\n        const storyData = store.storyData;\r\n        if (storyData == null) return [];\r\n        const thumbJsx: JSX.Element[] = [];\r\n        storyData.fuseList.forEach((fuse) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            if (cache != undefined) {\r\n                cache.thumbList.forEach((thumb) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_Img src={thumb.url} />;\r\n                    thumbJsx.push(\r\n                        <_SampleDiv key={thumbJsx.length}>\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n        });\r\n        return thumbJsx.filter((thumn, i) => i < 30);\r\n    }, [props.isEdit, update]);\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        // const curPrj = projects[fcsListIdx];\r\n        // const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        // updateProjectSource(curPrj.seq, 'story', source).then(() => {\r\n        //     curPrj.source = source;\r\n        //     curPrj.type = 'story';\r\n        //     store.system.dialog = <ConfirmDialog.Component\r\n        //         message=\"Update project succesful!\"\r\n        //     />;\r\n        //     setStore({ ...store });\r\n        // });\r\n    }\r\n\r\n    /**\r\n     * 選択中のローカルのファイルを読み込む\r\n     */\r\n    const loadLocalFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        store.libraryData = curPrj.libraryData;\r\n        store.storyData = curPrj.scenarioData;\r\n        const fuseList = store.storyData.fuseList;\r\n\r\n        // const isLoad = fuseList.length > 0 && store.fuseCacheList.length === 0;\r\n        // if (!isLoad) return;\r\n        fuseList.forEach(fuse => {\r\n            const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n            store.fuseCacheList.push(cache);\r\n            dispatcher.story.updateCache(fuse, cache);\r\n        });\r\n        setUpdate({});\r\n\r\n        store.editing.localSeq = curPrj.localSeq;\r\n        store.editing.libName = curPrj.libName;\r\n\r\n        // props.setEdit(true);\r\n        dispatcher.updateStore();\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            isIconButton\r\n            buttons={[\r\n                !hasData ? {\r\n                    label: 'New Project',\r\n                    width: 300,\r\n                    icon: <IoCreateOutline />,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialogLocal.Component\r\n                            focusIndex={-1}\r\n                            extendAction={() => {\r\n                                props.setEdit(true);\r\n                            }}\r\n                        />\r\n                        setStore({ ...store });\r\n                    }\r\n                } : {\r\n                    label: 'Close',\r\n                    width: 200,\r\n                    icon: <MdClear />,\r\n                    callback: () => {\r\n                        store.libraryData = null;\r\n                        store.storyData = null;\r\n                        store.fuseCacheList.length = 0;\r\n\r\n                        store.editing.localSeq = -1;\r\n                        dispatcher.updateStore();\r\n                        setUpdate({});\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Project\"\r\n            height={170}\r\n            // isDisable={!hasData}\r\n            isEnable={hasData}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Upload',\r\n                            width: 210,\r\n                            icon: <FiUpload />,\r\n                            isEnable: hasData && store.cloud != null,\r\n                            callback: uploadCloud\r\n                        },\r\n                        {\r\n                            label: 'Overwrite',\r\n                            width: 210,\r\n                            icon: <FaRegSave />,\r\n                            isEnable: fcsListIdx != -1 && hasData,\r\n                            callback: overwriteCloudFile\r\n                        }\r\n                    ]}\r\n                /> */}\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Library\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            // width={340}\r\n                            isRecordItem\r\n                            value={!hasData ? '-' : store.editing.libName}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Fuses\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={!hasData ? '-' : store.fuseCacheList.length.toString()}\r\n                        />\r\n                    }\r\n                />\r\n                {thumbJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Files\"\r\n            height={448}\r\n            isEnable={store.editing.localSeq == -1}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Load',\r\n                            width: 130,\r\n                            icon: <FiDownload />,\r\n                            isEnable: fcsListIdx !== -1 && store.editing.localSeq == -1,\r\n                            callback: loadLocalFile\r\n                        },\r\n                        {\r\n                            label: 'Copy',\r\n                            width: 130,\r\n                            icon: <ImCopy />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                const local = store.local;\r\n                                const project = local.projects[fcsListIdx];\r\n                                //ファイルキーを生成\r\n                                const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + local.maxSeq.toString();\r\n\r\n                                const newProject: StoreLocalStrage.Project = JSON.parse(JSON.stringify(project));\r\n                                newProject.localSeq = local.maxSeq;\r\n                                newProject.name += '_copy';\r\n                                // ローカルストレージに新しいファイルキーでデータを作成\r\n                                localStorage.setItem(fileKey, JSON.stringify(newProject));\r\n                                // 画面のリストに即時反映するためにstoreにも追加\r\n                                local.projects.push(newProject);\r\n\r\n                                // シーケンスの最大値を加算\r\n                                local.maxSeq++;\r\n                                // ローカルストレージのシーケンスを更新\r\n                                localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_SEQ, local.maxSeq.toString());\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Copy project succesful!\"\r\n                                />;\r\n                                dispatcher.updateStore();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Rename',\r\n                            width: 130,\r\n                            icon: <MdOutlineDriveFileRenameOutline />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialogLocal.Component\r\n                                    focusIndex={fcsListIdx}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Delete',\r\n                            width: 130,\r\n                            icon: <RiDeleteBinLine />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                const local = store.local;\r\n                                const project = local.projects[fcsListIdx];\r\n                                //ファイルキーを生成\r\n                                const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString();\r\n\r\n                                // ローカルストレージにから削除\r\n                                localStorage.removeItem(fileKey);\r\n                                // 画面のリストに即時反映するためにstoreからも削除\r\n                                local.projects.splice(fcsListIdx, 1);\r\n\r\n                                setFcsListIdx(-1);\r\n\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Delete project succesful!\"\r\n                                />;\r\n                                dispatcher.updateStore();\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {projectItemJsxList}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default SPManageFrame;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 55px;\r\n    /* background-color: #004df390; */\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    line-height: 64px;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\n\r\nconst _Share = styled.span<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 1px;\r\n    /* background-color: #00eb6a76; */\r\n`;\r\n\r\nconst _Icon = styled.div<{\r\n    isShare: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 40px;\r\n    height: 55px;\r\n    /* background-color: #eb000076; */\r\n    font-size: 30px;\r\n    color: #75757592;\r\n    ${props => !props.isShare ? '' : css`\r\n        color: #eb032a;\r\n    `}\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst WND_SIZE = 40;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    /* margin: 0 0 0 2px; */\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LogicFormUtil from \"../../../../contents/create/factory/util/logicFormUtil\";\r\nimport LogicElementUtil from \"../../../../contents/create/factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../../utils/canvasUtil\";\r\nimport BuildUtil from \"../../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport DrawUtil from \"../../../../contents/graphic/drawUtil\";\r\n\r\nconst FuseMainteDialog = (props: {\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n    seedId?: string;\r\n    frame?: number;\r\n    // isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [preset, setPreset] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n    useEffect(() => {\r\n        // シードセレクトダイアログからの遷移\r\n        if (props.focus === -1 && props.seedId != undefined && props.frame != undefined) {\r\n            setSeed({...seed, value: props.seedId});\r\n            setNewFrame({...newFrame, value: props.frame.toString()});\r\n        }\r\n    }, []);\r\n\r\n    const mapping = () => {\r\n        if (props.focus === -1) return;\r\n        const curFuse = fuseList[props.focus];\r\n        setNewFrame({ ...newFrame, value: curFuse.frame.toString() });\r\n        setSeed({ ...seed, value: curFuse.seedId.toString() });\r\n        setFormList(curFuse.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.focus !== -1) mapping();\r\n    }, []);\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                isVisible={store.local.isDispPreset}\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={preset}\r\n                            setCheckable={setPreset}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: preset.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(preset.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        false, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [preset, formList]);\r\n\r\n    return (\r\n        <_Frame\r\n            width={600}\r\n            height={872}\r\n            bgColor={DrawUtil.toWhite(store.design.accent1, -80)}\r\n        >\r\n            <_Main\r\n                scrollLock={store.env.scrollLock}\r\n            ><FormUtil.BorderPanel\r\n                    title=\"Base\"\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Frame\"\r\n                            jsx={\r\n                                <FormUtil.TextField\r\n                                    width={100}\r\n                                    isNumber\r\n                                    checkable={newFrame}\r\n                                    setCheckable={setNewFrame}\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        },\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                            errorType: \"value\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Seed\"\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={seed}\r\n                                    setCheckable={(checkable) => {\r\n                                        initFormList(checkable.value);\r\n                                        setSeed({ ...checkable });\r\n                                    }}\r\n                                    list={props.seedList.map(seed => {\r\n                                        return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                {propertiesFormJsx}\r\n            </_Main>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        icon: <MdCancelPresentation />,\r\n                        width: 120,\r\n                        // isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            // setPreset({ ...preset, value: '' });\r\n                            // mapping();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Regist',\r\n                        icon: <AiOutlineEnter />,\r\n                        width: 120,\r\n                        isEnable: isInputOK,\r\n                        callback: () => {\r\n                            let fuse: StoryUtil.Fuse | null = null;\r\n                            let cache: StoryUtil.Cache | null = null;\r\n                            if (props.focus === -1) {\r\n                                fuse = { seq: createSeq(), frame: 0, seedId: '', values: [] };\r\n                                fuseList.push(fuse);\r\n\r\n                                cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                                store.fuseCacheList.push(cache);\r\n                            } else {\r\n                                fuse = fuseList[props.focus];\r\n                                const fuseSeq = fuse.seq;\r\n                                cache = store.fuseCacheList.find(cache => cache.seq === fuseSeq) as StoryUtil.Cache;\r\n                            }\r\n\r\n                            fuse.frame = Number(newFrame.value);\r\n                            fuse.seedId = seed.value;\r\n                            const activeSeed = props.seedList.find(item => {\r\n                                return item.name === seed.value;\r\n                            });\r\n                            // fuse.dispName = activeSeed?.disp;\r\n                            fuse.values = formList.map(form => form.value);\r\n                            dispatcher.story.updateCache(fuse, cache);\r\n                            (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                            store.system.dialog = null;\r\n                            dispatcher.updateStore();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default FuseMainteDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    bgColor: string;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: ${props => props.bgColor};\r\n    border: 1px solid #474747;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    scrollLock: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 70px);\r\n    overflow-y: ${props => !props.scrollLock ? 'auto' : 'hidden'};\r\n`;","import styled, { css, keyframes } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { GrView } from \"react-icons/gr\";\r\nimport { ImCopy } from \"react-icons/im\";\r\nimport assert from \"assert\";\r\n\r\nconst COL_WIDTH_LIST = [48, 252, 150];\r\n\r\nconst OPTION_BUTTON_WIDTH = 112;\r\n\r\nconst FuseList = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const design = store.design;\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const createSeq = () => {\r\n        return storyData.fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const recordJsxList = useMemo(() => {\r\n        return storyData.fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            const curSeed = props.seedList.find(item => {\r\n                return item.name === fuse.seedId;\r\n            });\r\n            assert(curSeed != undefined, 'curSeed is undefined.');\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_Img src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>\r\n                            {/* <_SampleName>{thumb.name}</_SampleName> */}\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            const isFocus = props.focus === i;\r\n            return (<_RecordWrap key={i}\r\n                isFocus={isFocus}\r\n            >\r\n                <_RecordCont\r\n                    onClick={() => {\r\n                        if (props.focus !== i) {\r\n                            props.setFocus(i);\r\n                        } else if (props.focus === i) {\r\n                            props.setFocus(-1);\r\n                        }\r\n                    }}\r\n                >\r\n                    <_ColWrap width={COL_WIDTH_LIST[0]}><_TextItem>{fuse.frame}</_TextItem></_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[1]}>\r\n                        <_TextItem>[{fuse.seq}] {curSeed.disp ?? fuse.seedId}</_TextItem>\r\n                        {/* <_FrameForm\r\n                            type=\"number\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        />\r\n                        <_FrameSlider\r\n                            type=\"range\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        /> */}\r\n                    </_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[2]}><_ImageItem>{thumbJsx}</_ImageItem></_ColWrap>\r\n                </_RecordCont>\r\n                <_Option isFocus={isFocus}>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Edit',\r\n                                icon: <FiEdit />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                // isEnable: props.isModify,\r\n                                callback: () => {\r\n                                    store.system.dialog = <FuseMainteDialog\r\n                                        focus={props.focus}\r\n                                        seedList={props.seedList}\r\n                                        cancelAction={() => {\r\n                                        }}\r\n                                        modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        }}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Copy',\r\n                                icon: <ImCopy />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(storyData.fuseList[props.focus])) as StoryUtil.Fuse;\r\n                                    cloneFuse.seq = createSeq();\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    const cloneCache = JSON.parse(JSON.stringify(store.fuseCacheList[index])) as StoryUtil.Cache;\r\n                                    cloneCache.seq = cloneFuse.seq;\r\n                                    storyData.fuseList.push(cloneFuse);\r\n                                    storyData.fuseList = storyData.fuseList.slice();\r\n                                    store.fuseCacheList.push(cloneCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                icon: <RiDeleteBinLine />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    storyData.fuseList.splice(props.focus, 1);\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    store.fuseCacheList.splice(index, 1);\r\n                                    setStore({ ...store });\r\n                                    props.setFocus(props.focus - 1);\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Test',\r\n                                icon: <GrView />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    dispatcher.story.openPreviewSoloDialog(props.focus);\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_Option>\r\n            </_RecordWrap>);\r\n        });\r\n    }, [storyData.fuseList, props.focus]);\r\n\r\n    return (<>\r\n        <_HeaderDiv\r\n            bgColor={design.accent2}\r\n        >\r\n            <_HeaderItem width={COL_WIDTH_LIST[0]}>F</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[1]}>[Seq] Seed</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[2]}>Snapshot</_HeaderItem>\r\n        </_HeaderDiv>\r\n        <_BodyScrollDiv\r\n            bgColor={design.accent3}\r\n        >\r\n            {recordJsxList}\r\n        </_BodyScrollDiv>\r\n    </>);\r\n}\r\n\r\nexport default FuseList;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n    bgColor: string;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: ${props => props.bgColor};\r\n  /* background: linear-gradient(to bottom, #99a5b9, #c3cee4, #99a5b9); */\r\n  width: calc(100% - 30px);\r\n  height: 36px;\r\n  margin: 0 0 0 5px;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px 2px 0 0;\r\n`;\r\n\r\nconst _HeaderItem = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #feffff36;\r\n  width: ${props => props.width}px;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  font-style: italic;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n`;\r\n\r\nconst _BodyScrollDiv = styled.div<{\r\n    bgColor: string;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: ${props => props.bgColor};\r\n  width: calc(100% - 10px);\r\n  height: calc(100% - 36px);\r\n  margin: 0 0 0 5px;\r\n  overflow-y: auto;\r\n`;\r\nconst fadeIn = keyframes`\r\n  from {\r\n    background-color: #bb6f6fa0;\r\n  }\r\n  to {\r\n    background-color: #fabebe58;\r\n  }\r\n`;\r\nconst _RecordWrap = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffff37;\r\n  ${props => !props.isFocus ? '' : css`\r\n      animation: ${fadeIn} 1.2s linear infinite;\r\n  `}\r\n  width: 100%;\r\n  margin: 1px 0 0 0;\r\n  border-radius: 0 0 8px 8px;\r\n`;\r\nconst _RecordCont = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 20px); */\r\n  width: 100%;\r\n  height: 56px;\r\n  margin: 1px 0 0 0;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n`;\r\nconst _Option = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ebffe6f9; */\r\n  width: 100%;\r\n  height: ${props => props.isFocus ? '68' : '0'}px;\r\n  /* height: 0; */\r\n  margin: 1px 0 0 0;\r\n  overflow-y: hidden;\r\n  transition: height 0.1s;\r\n`;\r\n\r\nconst _ColWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  width: ${props => props.width}px;\r\n  margin: 0 2px;\r\n  /* background-color: #ff0000bb; */\r\n  vertical-align: middle;\r\n`;\r\nconst _TextItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffffbc;\r\n  width: 100%;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  padding-left: 6px;\r\n  border-radius: 4px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  /* font-style: italic; */\r\n  color: #7c0025;\r\n  text-align: left;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  /* margin: 8px 2px; */\r\n`;\r\nconst _FrameForm = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #628cffb9; */\r\n  border: 1px solid #242424;\r\n  border-radius: 2px;\r\n  width: 46px;\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n  font-weight: 600;\r\n  color: #180085;\r\n`;\r\nconst _FrameSlider = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffd562ba;\r\n  width: calc(100% - 50px);\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst _ImageItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ffffffbc; */\r\n  width: 100%;\r\n  height: 50px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  /* border-radius: 4px; */\r\n  color: #000850;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n  vertical-align: middle;\r\n  text-align: left;\r\n`;\r\n\r\nconst WND_SIZE = 50;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    /* margin: 0 0 0 2px; */\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport DrawUtil from \"../../../../contents/graphic/drawUtil\";\r\n\r\nexport const FRAME_LINE_WIDTH = 107;\r\n\r\nconst FrameLine = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const design = store.design;\r\n    const screenRate = store.env.screenRate;\r\n\r\n    const [startY, setStartY] = useState<null | number>(null);\r\n    const [startX, setStartX] = useState<null | number>(null);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n\r\n    const frameRateJsxList = useMemo(() => {\r\n        if (ref.current == null) return <></>;\r\n        const clientWidth = ref.current.clientWidth - 10;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        return fuseList.map((fuse, i) => {\r\n            let left: undefined | number = undefined;\r\n            const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n            const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n            if (posXIndex !== -1) {\r\n                const arg = seed.args[posXIndex];\r\n                const min = arg.min as number;\r\n                const max = arg.max as number;\r\n                const range = max - min;\r\n                const val = Number(fuse.values[posXIndex]) - min;\r\n                const rate = val / range;\r\n                left = Math.floor(clientWidth * rate);\r\n            }\r\n            const top = Math.floor(fuse.frame / limitFrame * clientHeight);\r\n            return <_FrameRate key={i}\r\n                isCurr={i === props.focus}\r\n                top={top}\r\n                left={left}\r\n            />\r\n        });\r\n    }, [fuseList, props.focus]);\r\n\r\n    const putAction = (x: number, y: number) => {\r\n        if (props.focus === -1) return;\r\n        setStartY(y);\r\n        setStartX(x);\r\n    }\r\n\r\n    const moveAction = (x: number, y: number) => {\r\n        if (startY == null || startX == null || ref.current == null) return;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        const fuse = fuseList[props.focus];\r\n\r\n        // フレームの移動\r\n        const rate = limitFrame / clientHeight * 2;\r\n        // console.log('read ' + start);\r\n        fuse.frame += Math.floor((y - startY) / screenRate * rate);\r\n        if (fuse.frame < 0) fuse.frame = 0;\r\n        else if (fuse.frame > limitFrame) fuse.frame = limitFrame;\r\n        const prevFocusSeq = fuseList[props.focus].seq;\r\n        fuseList.sort((a, b) => a.frame - b.frame);\r\n        const nowFocusSeq = fuseList[props.focus].seq;\r\n        if (prevFocusSeq !== nowFocusSeq) {\r\n            props.setFocus(fuseList.findIndex(fuse => fuse.seq === prevFocusSeq) as number);\r\n        }\r\n\r\n        // X座標の移動\r\n        const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n        const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n        if (posXIndex !== -1) {\r\n            const arg = seed.args[posXIndex];\r\n            const min = arg.min as number;\r\n            const max = arg.max as number;\r\n            const range = max - min;\r\n            const clientWidth = (ref.current as HTMLDivElement).clientWidth - 10;\r\n            const rate = range / clientWidth * 2;\r\n            let value = Number(fuse.values[posXIndex]);\r\n            value += Math.floor((x - startX) / screenRate * rate);\r\n            // 範囲外に出た場合\r\n            if (value < min) value = min;\r\n            else if (value > max) value = max;\r\n            fuse.values[posXIndex] = value.toString();\r\n            setStartX(x);\r\n        }\r\n\r\n        storyData.fuseList = fuseList.slice();\r\n        setStartY(y);\r\n        // console.log('set ' + start);\r\n        dispatcher.updateStore();\r\n    }\r\n\r\n    const releaseAction = () => {\r\n        setStartY(null);\r\n        setStartX(null);\r\n    }\r\n\r\n    return (\r\n        <_FrameLineDiv ref={ref}\r\n            bgColor={design.accent2}\r\n            isEdit={startY != null}\r\n            onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n            onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n            onMouseUp={releaseAction}\r\n            onMouseLeave={releaseAction}\r\n            onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchEnd={releaseAction}\r\n            onTouchCancel={releaseAction}\r\n        >\r\n            {frameRateJsxList}\r\n        </_FrameLineDiv>\r\n    );\r\n}\r\n\r\nexport default FrameLine;\r\n\r\n\r\n\r\nconst _FrameLineDiv = styled.div<{\r\n    isEdit: boolean;\r\n    bgColor: string;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${FRAME_LINE_WIDTH}px;\r\n  height: calc(100% - 36px);\r\n  background-color: ${props => props.bgColor};\r\n  ${props => !props.isEdit ? '' : css`\r\n    background-color: ${DrawUtil.toWhite(props.bgColor, 40)};\r\n  `}\r\n  border: 1px solid #5a0000b8;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  vertical-align: top;\r\n  margin-top: 36px;\r\n`;\r\n\r\nconst _FrameRate = styled.div<{\r\n    isCurr: boolean;\r\n    top: number;\r\n    left?: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  left: 0;\r\n  top: ${props => props.top}px;\r\n  width: 100%;\r\n  ${props => props.left == undefined ? '' : css`\r\n      width: 10px;\r\n      left: ${props.left}px;\r\n  `}\r\n  height: 10px;\r\n  background-color: #627cc5;\r\n  border-radius: 4px;\r\n  border: 1px solid #00000061;\r\n  box-sizing: border-box;\r\n  ${props => !props.isCurr ? '' : css`\r\n      background-color: #e20000;\r\n      z-index: 10;\r\n  `}\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport StoreCloud from \"../../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../../redux/store/store\";\r\nimport { AiOutlineEnter, AiOutlineCheck } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\n\r\nnamespace SeedSelectDialog {\r\n\r\n    export const Component = (props: {\r\n        seedList: FuseBean[];\r\n        addSeed: (seedId: string, seq: number, frame: number) => void;\r\n        newSeq: number;\r\n        newFrame: number;\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, dispatcher } = useContext(GlobalContext);\r\n        const [focusIndex, setFocusIndex] = useState<number>(0);\r\n        const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n\r\n        const storyData = store.storyData as StoryUtil.StoryData;\r\n        const width = 550;\r\n        const height = 758;\r\n\r\n        useEffect(() => {\r\n            newFrame.value = props.newFrame.toString();\r\n            setNewFrame({...newFrame});\r\n        }, []);\r\n\r\n        const seedJsxList = useMemo(() => {\r\n            return props.seedList.map((seed, i) => {\r\n                const isFocus = focusIndex === i;\r\n                return (\r\n                    <_LibItem key={i}\r\n                        isFocus={isFocus}\r\n                        onClick={() => {\r\n                            setFocusIndex(i);\r\n                        }}\r\n                    >\r\n                        <_CheckDiv>{isFocus ? <AiOutlineCheck /> : <></>}</_CheckDiv>\r\n                        <_LibInfo>\r\n                            <_LibName>{seed.disp ?? seed.name}</_LibName>\r\n                            <_LibVersion>{seed.args.length}params</_LibVersion>\r\n                            <_LibOutline>bbb</_LibOutline>\r\n                        </_LibInfo>\r\n                    </_LibItem>\r\n                );\r\n            });\r\n        }, [focusIndex]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                icon: <MdCancelPresentation />,\r\n                width: 120,\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    dispatcher.updateStore();\r\n                }\r\n            },\r\n            {\r\n                label: 'Regist',\r\n                icon: <AiOutlineEnter />,\r\n                width: 120,\r\n                callback: () => {\r\n                    const seed = props.seedList[focusIndex];\r\n                    const isFullParam = seed.args.find(arg => arg.defval == undefined) == undefined;\r\n                    if (!isFullParam) {\r\n                        store.system.dialog = <FuseMainteDialog\r\n                            focus={-1}\r\n                            seedList={props.seedList}\r\n                            seedId={props.seedList[focusIndex].name}\r\n                            frame={Number(newFrame.value)}\r\n                            cancelAction={() => {\r\n                            }}\r\n                            modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                            }}\r\n                        />;\r\n                    } else {\r\n                        props.addSeed(seed.name, props.newSeq, Number(newFrame.value));\r\n                        store.system.dialog = null;\r\n                    }\r\n                    dispatcher.updateStore();\r\n                    if (props.extendAction != undefined) props.extendAction();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select seed!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isNumber\r\n                            checkable={newFrame}\r\n                            setCheckable={setNewFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.SwitchTwoFace\r\n                            label1=\"Seed\"\r\n                            label2=\"Preset\"\r\n                            rate1={50}\r\n                            rate2={50}\r\n                            width={320}\r\n                            isUse={isExtend}\r\n                            isEditable={false}\r\n                            callback={() => {\r\n                                setExtend(!isExtend);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n\r\n                <FormUtil.BorderPanel\r\n                    title=\"Seed\"\r\n                    height={562}\r\n                    // isDisable={store.cloud == null}\r\n                    backgroundColor=\"#ffffff26\"\r\n                    innerJsx={<>\r\n                        {seedJsxList}\r\n                    </>}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SeedSelectDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\n\r\nconst _LibItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: 100px;\r\n    margin: 0 0 4px 4px;\r\n    background-color: #d3d3d3df;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #e4ec9996;\r\n    `}\r\n    border: 1px solid #8f8f8f;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _CheckDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 60px;\r\n    height: 60px;\r\n    margin: 20px 0 0 4px;\r\n    background-color: #e7e7e765;\r\n    border: 1px solid #8f8f8fac;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    font-size: 55px;\r\n    font-weight: 600;\r\n    color: #02db02;\r\n`;\r\n\r\nconst _LibInfo = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 5px;\r\n    position: relative;\r\n    width: calc(100% - 74px);\r\n    vertical-align: top;\r\n    /* background-color: #3fda6129; */\r\n`;\r\n\r\n\r\nconst _LibName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    max-width: calc(100% - 40px);\r\n    height: 50px;\r\n    margin-right: 6px;\r\n    /* background-color: #da3f3f64; */\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #435688;\r\n    overflow-x: hidden;\r\n    line-height: 48px;\r\n`;\r\n\r\nconst _LibVersion = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 34px;\r\n    height: 50px;\r\n    /* background-color: #3f68da63; */\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c7454c;\r\n    vertical-align: top;\r\n    line-height: 58px;\r\n`;\r\n\r\nconst _LibOutline = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 48px;\r\n    background-color: #3fda6129;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\n\r\nnamespace PreviewLauncherFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Play', enable: true, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aec7d8df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { useContext, useMemo, useState, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport FuseList from \"./fuseList\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../../../../contents/create/factory/util/logicElementUtil\";\r\nimport BuildUtil from \"../../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineAppstoreAdd } from \"react-icons/ai\";\r\nimport { FaSortAmountDownAlt } from \"react-icons/fa\";\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { IoSaveOutline } from \"react-icons/io5\";\r\nimport { IoSave } from \"react-icons/io5\";\r\n\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport FrameLine, { FRAME_LINE_WIDTH } from \"./frameLine\";\r\nimport assert from \"assert\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../../../../contents/dialog/confirmDialog\";\r\nimport SaveOptionDIalog from \"../etc/saveOptionDIalog\";\r\nimport SeedSelectDialog from \"./seedSelectDialog\";\r\nimport DrawUtil from \"../../../../contents/graphic/drawUtil\";\r\n\r\nconst SPEditStoryFrame = () => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const design = store.design;\r\n\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    const [isPreview, setPreview] = useState<boolean>(false);\r\n    // const [seedId, setSeedId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [presetIndex, setPresetIndex] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [interval, setInterval] = useState<FormUtil.CheckableValue>({ value: store.local.putInterval.toString(), errors: [] });\r\n\r\n    const putInterval = store.local.putInterval;\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [seedList, presetList]: [FuseBean[], StoryUtil.PresetBean[]] = useMemo(() => {\r\n        // if (store.libraryData == null) throw assert('store.libraryDataがnullです。');\r\n        assert(store.libraryData != null);\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n\r\n        const seedList: FuseBean[] = [];\r\n        const presetList: StoryUtil.PresetBean[] = [];\r\n        seedWrapList.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            if (seed.permit === 'release') {\r\n                seedList.push({\r\n                    name: seed.name,\r\n                    disp: seed.disp,\r\n                    args, formgrps, presets\r\n                });\r\n\r\n                presets.forEach(preset => {\r\n                    const dispName = (seed.disp ?? seed.name) + ': ' + preset.name;\r\n                    presetList.push({\r\n                        seedId: seed.name,\r\n                        dispName,\r\n                        values: preset.values\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        return [seedList, presetList];\r\n    }, [store.libraryData]);\r\n\r\n    // useEffect(() => {\r\n    //     const isLoad = fuseList.length > 0 && store.fuseCacheList.length === 0;\r\n    //     if (!isLoad) return;\r\n    //     fuseList.forEach(fuse => {\r\n    //         const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n    //         store.fuseCacheList.push(cache);\r\n    //         dispatcher.story.updateCache(fuse, cache);\r\n    //     });\r\n    //     storyData.fuseList = fuseList.slice();\r\n    //     dispatcher.updateStore();\r\n    // }, [fuseList, store.fuseCacheList]);\r\n\r\n    const getNewFuseProps = (): {\r\n        newSeq: number;\r\n        newFrame: number;\r\n    } => {\r\n        const newSeq = fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n        const newFrame = fuseList.length === 0 ? 0 : fuseList[fuseList.length - 1].frame + putInterval;\r\n        return { newSeq, newFrame };\r\n    }\r\n\r\n    const addSeed = (seedId: string, seq: number, frame: number) => {\r\n        const fuse: StoryUtil.Fuse = {\r\n            seq, frame, seedId: '', values: []\r\n        };\r\n        const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n\r\n        fuseList.push(fuse);\r\n        store.fuseCacheList.push(cache);\r\n\r\n        const seed = seedList.find(s => s.name === seedId);\r\n        assert(seed != null, 'seed is null.');\r\n        fuse.seedId = seedId;\r\n        fuse.values = seed.args.map(arg => {\r\n            let val = arg.defval ?? '0';\r\n            return val;\r\n        });\r\n        dispatcher.story.updateCache(fuse, cache);\r\n        (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"left\"\r\n            isIconButton\r\n            buttons={[\r\n                {\r\n                    label: 'Preview',\r\n                    width: 140,\r\n                    icon: <VscPreview />,\r\n                    isEnable: fuseList.length > 0,\r\n                    callback: () => {\r\n                        fuseList.sort((a, b) => {\r\n                            return a.frame - b.frame;\r\n                        });\r\n                        storyData.fuseList = fuseList.slice();\r\n                        // dispatcher.updateStore();\r\n                        setPreview(true);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Save',\r\n                    width: 140,\r\n                    icon: <IoSaveOutline />,\r\n                    isEnable: true,\r\n                    callback: () => {\r\n                        const local = store.local;\r\n                        const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + store.editing.localSeq.toString();\r\n                        const editingDataVal = localStorage.getItem(fileKey);\r\n                        assert(editingDataVal != null, 'editingData is null.');\r\n                        const editingData = JSON.parse(editingDataVal) as StoreLocalStrage.Project;\r\n                        editingData.lastmod = DataUtil.getStringFromDate(new Date());\r\n                        assert(store.storyData != null, 'store.storyData is null.');\r\n                        editingData.scenarioData = JSON.parse(JSON.stringify(store.storyData));\r\n                        localStorage.setItem(fileKey, JSON.stringify(editingData));\r\n\r\n                        // セーブ完了のダイアログを表示\r\n                        store.system.canDialogClose = true;\r\n                        store.system.dialog = <SaveOptionDIalog.Component />;\r\n                        dispatcher.updateStore();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"fuse\"\r\n            height={644}\r\n            backgroundColor={DrawUtil.toWhite(design.accent1, -70)}\r\n            innerJsx={<>\r\n                <_SeedDiv>\r\n                    <FormUtil.ButtonItem\r\n                        button={\r\n                            {\r\n                                label: 'Add',\r\n                                width: 150,\r\n                                icon: <AiOutlineAppstoreAdd />,\r\n                                callback: () => {\r\n                                    if (presetIndex.value === '') {\r\n\r\n                                        const newFuse = getNewFuseProps();\r\n                                        store.system.dialog = <SeedSelectDialog.Component\r\n                                            seedList={seedList}\r\n                                            addSeed={addSeed}\r\n                                            newSeq={newFuse.newSeq}\r\n                                            newFrame={newFuse.newFrame}\r\n                                        />;\r\n\r\n                                        // store.system.dialog = <FuseMainteDialog\r\n                                        //     focus={-1}\r\n                                        //     seedList={seedList}\r\n                                        //     cancelAction={() => {\r\n                                        //     }}\r\n                                        //     modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        //     }}\r\n                                        // />;\r\n                                        dispatcher.updateStore();\r\n                                    } else {\r\n                                        const preset = presetList[Number(presetIndex.value)];\r\n                                        console.log(preset);\r\n                                        const seedId = preset.seedId;\r\n                                        const seed = seedList.find(seed => seed.name === seedId) as FuseBean;\r\n                                        const newFuseProps = getNewFuseProps();\r\n                                        const fuse: StoryUtil.Fuse = {\r\n                                            seq: newFuseProps.newSeq,\r\n                                            frame: newFuseProps.newFrame,\r\n                                            seedId: '',\r\n                                            values: []\r\n                                        };\r\n                                        const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n\r\n                                        fuseList.push(fuse);\r\n                                        store.fuseCacheList.push(cache);\r\n\r\n                                        fuse.seedId = seedId;\r\n                                        // fuse.dispName = seed.disp;\r\n                                        fuse.values = preset.values.slice();\r\n                                        dispatcher.story.updateCache(fuse, cache);\r\n                                        (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                                        store.system.dialog = null;\r\n                                        dispatcher.updateStore();\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    />\r\n                    {/* <_FormDiv isDisp={store.local.isDispPreset}>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Preset\"\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={presetIndex}\r\n                                    setCheckable={setPresetIndex}\r\n                                    list={presetList.map((preset, i) => {\r\n                                        return { value: i.toString(), labelText: preset.dispName }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={340}\r\n                                // validates={\r\n                                //     [\r\n                                //         {\r\n                                //             checker: (value) => ValidateUtil.checkRequired(value),\r\n                                //             errorType: \"required\"\r\n                                //         }\r\n                                //     ]\r\n                                // }\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Interval\"\r\n                            jsx={\r\n                                <FormUtil.TextField\r\n                                    width={100}\r\n                                    isNumber\r\n                                    checkable={interval}\r\n                                    setCheckable={setInterval}\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        },\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                            errorType: \"value\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                    </_FormDiv> */}\r\n                </_SeedDiv>\r\n                <_MainDiv>\r\n                    <FrameLine\r\n                        focus={focus}\r\n                        setFocus={setFocus}\r\n                        seedList={seedList}\r\n                    />\r\n                    <_FuseListFrame>\r\n                        <FuseList\r\n                            focus={focus}\r\n                            setFocus={setFocus}\r\n                            seedList={seedList}\r\n                        />\r\n                    </_FuseListFrame>\r\n                </_MainDiv>\r\n            </>}\r\n        />\r\n        {!isPreview ? <></> : <BuildUtil.BuildFrame closeAction={() => {\r\n            setPreview(false);\r\n        }} />}\r\n    </>);\r\n}\r\n\r\nexport default SPEditStoryFrame;\r\n\r\n\r\nconst _SeedDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 84px;\r\n  /* background-color: #be97ca; */\r\n  vertical-align: top;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isDisp: boolean;\r\n}>`\r\n  display: inline-block;\r\n  ${props => !props.isDisp ? '' : css`\r\n      display: none;\r\n  `}\r\n  position: relative;\r\n  width: 492px;\r\n  vertical-align: top;\r\n  /* background-color: #09fc3e; */\r\n  margin: 0 0 0 4px;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100% - 84px);\r\n  /* background-color: #c2ca97; */\r\n`;\r\n\r\nconst _FuseListFrame = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: calc(100% - ${FRAME_LINE_WIDTH}px);\r\n  height: 100%;\r\n  /* background-color: #f80707; */\r\n  vertical-align: top;\r\n`;","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./sPManageFrame\";\r\nimport SPEditStoryFrame from \"./edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\n\r\nconst SPCreateChannel = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isEdit, setEdit] = useState<boolean>(false);\r\n    const hasData = store.libraryData != null;\r\n\r\n    return (<>\r\n        <_SwitchWrap>\r\n            <FormUtil.SwitchTwoFace\r\n                label1=\"Manage\"\r\n                label2=\"Edit\"\r\n                rate1={50}\r\n                rate2={50}\r\n                isUse={isEdit}\r\n                width={550}\r\n                isEditable={hasData}\r\n                isLarge={true}\r\n                callback={() => {\r\n                    setEdit(!isEdit);\r\n                }}\r\n            />\r\n        </_SwitchWrap>\r\n        <_MainDiv>\r\n            {!isEdit ? <SPManageFrame isEdit={isEdit} setEdit={setEdit} /> : <SPEditStoryFrame />}\r\n        </_MainDiv>\r\n    </>);\r\n}\r\n\r\nexport default SPCreateChannel;\r\n\r\nconst _SwitchWrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  text-align: center;\r\n  margin-bottom: 6px;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 60px);\r\n`;","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./create/sPManageFrame\";\r\nimport SPEditStoryFrame from \"./create/edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\nimport LocalStorageUtil from \"../../utils/localStorageUtil\";\r\nimport { MdOutlineCleaningServices } from \"react-icons/md\";\r\nimport ConfirmDialog from \"../../contents/dialog/confirmDialog\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\n\r\nconst SPPropertyChannel = () => {\r\n  const { store, dispatcher } = useContext(GlobalContext);\r\n  const [interval, setInterval] = useState<FormUtil.CheckableValue>({ value: \"\", errors: [] });\r\n  const [isDispPreset, setDispPreset] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (store.system.channelIndex == 3) {\r\n      reload();\r\n      dispatcher.updateStore();\r\n    }\r\n  }, [store.system.channelIndex]);\r\n\r\n  const reload = () => {\r\n    interval.value = localStorage.getItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL) as string;\r\n    setInterval({ ...interval });\r\n    setDispPreset(localStorage.getItem(LocalStorageUtil.KEY_DISP_PRESET) === '0');\r\n\r\n    store.local.putInterval = Number(interval.value);\r\n    console.log(store.local.putInterval);\r\n    store.local.isDispPreset = isDispPreset;\r\n  }\r\n\r\n  return (<>\r\n    <FormUtil.BorderPanel\r\n      title=\"Properties\"\r\n      height={155}\r\n      innerJsx={<>\r\n        <FormUtil.FormRecord\r\n          titleLabel=\"Interval\"\r\n          jsx={\r\n            <FormUtil.TextField\r\n              width={100}\r\n              isNumber\r\n              checkable={interval}\r\n              setCheckable={setInterval}\r\n              validates={[\r\n                {\r\n                  checker: (value) => ValidateUtil.checkRequired(value),\r\n                  errorType: \"required\"\r\n                },\r\n                {\r\n                  checker: (value) => ValidateUtil.checkNumberRange(value, 0, 100),\r\n                  errorType: \"value\"\r\n                }\r\n              ]}\r\n            />\r\n          }\r\n        />\r\n        <FormUtil.FormRecord\r\n          titleLabel=\"Preset\"\r\n          jsx={\r\n            <FormUtil.SwitchTwoFace\r\n              label1=\"Off\"\r\n              label2=\"On\"\r\n              rate1={50}\r\n              rate2={50}\r\n              width={220}\r\n              isUse={isDispPreset}\r\n              callback={() => {\r\n                setDispPreset(!isDispPreset);\r\n              }}\r\n            />\r\n          }\r\n        />\r\n        <FormUtil.ButtonRecord\r\n          align=\"left\"\r\n          buttons={[\r\n            {\r\n              label: 'Save',\r\n              width: 200,\r\n              icon: <MdOutlineCleaningServices />,\r\n              callback: () => {\r\n                store.local.putInterval = Number(interval.value);\r\n                store.local.isDispPreset = isDispPreset;\r\n                localStorage.setItem(LocalStorageUtil.KEY_DISP_PRESET, store.local.isDispPreset ? '0' : '1');\r\n                localStorage.setItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL, interval.value);\r\n\r\n                // 更新完了のダイアログを表示\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                  message=\"Save succesful!\"\r\n                />;\r\n                dispatcher.updateStore();\r\n              }\r\n            },\r\n            {\r\n              label: 'Load',\r\n              width: 200,\r\n              icon: <MdOutlineCleaningServices />,\r\n              callback: () => {\r\n                reload();\r\n                // 読み込み完了のダイアログを表示\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                  message=\"Load succesful!\"\r\n                />;\r\n                dispatcher.updateStore();\r\n              }\r\n            }\r\n          ]} />\r\n      </>}\r\n    />\r\n    <FormUtil.ButtonRecord\r\n      align=\"left\"\r\n      buttons={[\r\n        {\r\n          label: 'Local storage all clear',\r\n          width: 300,\r\n          icon: <MdOutlineCleaningServices />,\r\n          callback: () => {\r\n            localStorage.removeItem(LocalStorageUtil.KEY_LOGIN_HASH);\r\n            localStorage.removeItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL);\r\n            const seqMax = Number(localStorage.getItem(LocalStorageUtil.KEY_SCENARIO_SEQ));\r\n            for (let i = 0; i <= seqMax; i++) {\r\n              localStorage.removeItem(LocalStorageUtil.KEY_SCENARIO_PREFIX + i.toString());\r\n            }\r\n            localStorage.removeItem(LocalStorageUtil.KEY_SCENARIO_SEQ);\r\n\r\n            const local = store.local;\r\n            local.maxSeq = 0;\r\n            local.projects = [];\r\n            store.editing.localSeq = -1;\r\n\r\n            // 削除完了のダイアログを表示\r\n            store.system.dialog = <ConfirmDialog.Component\r\n              message=\"All clear succesful!\"\r\n            />;\r\n            dispatcher.updateStore();\r\n          }\r\n        }\r\n      ]} />\r\n  </>);\r\n}\r\n\r\nexport default SPPropertyChannel;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n`;","import ReleaseNote from \"../../contents/home/releaseNote\";\r\n\r\nconst SPInforChannel = () => {\r\n\r\n    return (<ReleaseNote />);\r\n}\r\n\r\nexport default SPInforChannel;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { Audio, ThreeDots } from 'react-loader-spinner'\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\n\r\n\r\nconst SyncBlind = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n\r\n    return (<_Blind isDisp={store.system.isSync}>\r\n        <_Animation>\r\n            <ThreeDots\r\n                height=\"200\"\r\n                width=\"200\"\r\n                color=\"#4c7cc5\"\r\n            />\r\n        </_Animation>\r\n        <_Message>Now loading...</_Message>\r\n    </_Blind>);\r\n}\r\n\r\nexport default SyncBlind;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisp: boolean;\r\n}>`\r\n    display: block;\r\n    ${props => props.isDisp ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #fefeffa1;\r\n    z-index: 12;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Animation = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 260px;\r\n    /* width: calc(100% - 100px);\r\n    height: 100px; */\r\n    /* background-color: #1313775c; */\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: relative;\r\n    /* margin-top: 10px; */\r\n    /* width: calc(100% - 100px);\r\n    height: 100px; */\r\n    /* background-color: #0505dab5; */\r\n    color: #4c7cc5;\r\n    font-weight: 600;\r\n    font-size: 60px;\r\n    text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./create/sPManageFrame\";\r\nimport SPEditStoryFrame from \"./create/edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\nimport LocalStorageUtil from \"../../utils/localStorageUtil\";\r\nimport { MdOutlineCleaningServices } from \"react-icons/md\";\r\nimport ConfirmDialog from \"../../contents/dialog/confirmDialog\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\n\r\nconst SPDesignChannel = () => {\r\n  const { store, dispatcher } = useContext(GlobalContext);\r\n  const [interval, setInterval] = useState<FormUtil.CheckableValue>({ value: \"\", errors: [] });\r\n  const [isDispPreset, setDispPreset] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (store.system.channelIndex == 3) {\r\n      reload();\r\n      dispatcher.updateStore();\r\n    }\r\n  }, [store.system.channelIndex]);\r\n\r\n  const reload = () => {\r\n    interval.value = localStorage.getItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL) as string;\r\n    setInterval({ ...interval });\r\n    setDispPreset(localStorage.getItem(LocalStorageUtil.KEY_DISP_PRESET) === '0');\r\n\r\n    store.local.putInterval = Number(interval.value);\r\n    console.log(store.local.putInterval);\r\n    store.local.isDispPreset = isDispPreset;\r\n  }\r\n\r\n  return (<>\r\n    <FormUtil.BorderPanel\r\n      title=\"Properties\"\r\n      height={155}\r\n      innerJsx={<>\r\n        <FormUtil.FormRecord\r\n          titleLabel=\"Interval\"\r\n          jsx={\r\n            <FormUtil.TextField\r\n              width={100}\r\n              isNumber\r\n              checkable={interval}\r\n              setCheckable={setInterval}\r\n              validates={[\r\n                {\r\n                  checker: (value) => ValidateUtil.checkRequired(value),\r\n                  errorType: \"required\"\r\n                },\r\n                {\r\n                  checker: (value) => ValidateUtil.checkNumberRange(value, 0, 100),\r\n                  errorType: \"value\"\r\n                }\r\n              ]}\r\n            />\r\n          }\r\n        />\r\n        <FormUtil.FormRecord\r\n          titleLabel=\"Preset\"\r\n          jsx={\r\n            <FormUtil.SwitchTwoFace\r\n              label1=\"Off\"\r\n              label2=\"On\"\r\n              rate1={50}\r\n              rate2={50}\r\n              width={220}\r\n              isUse={isDispPreset}\r\n              callback={() => {\r\n                setDispPreset(!isDispPreset);\r\n              }}\r\n            />\r\n          }\r\n        />\r\n        <FormUtil.ButtonRecord\r\n          align=\"left\"\r\n          buttons={[\r\n            {\r\n              label: 'Save',\r\n              width: 200,\r\n              icon: <MdOutlineCleaningServices />,\r\n              callback: () => {\r\n                store.local.putInterval = Number(interval.value);\r\n                store.local.isDispPreset = isDispPreset;\r\n                localStorage.setItem(LocalStorageUtil.KEY_DISP_PRESET, store.local.isDispPreset ? '0' : '1');\r\n                localStorage.setItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL, interval.value);\r\n\r\n                // 更新完了のダイアログを表示\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                  message=\"Save succesful!\"\r\n                />;\r\n                dispatcher.updateStore();\r\n              }\r\n            },\r\n            {\r\n              label: 'Load',\r\n              width: 200,\r\n              icon: <MdOutlineCleaningServices />,\r\n              callback: () => {\r\n                reload();\r\n                // 読み込み完了のダイアログを表示\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                  message=\"Load succesful!\"\r\n                />;\r\n                dispatcher.updateStore();\r\n              }\r\n            }\r\n          ]} />\r\n      </>}\r\n    />\r\n    <FormUtil.ButtonRecord\r\n      align=\"left\"\r\n      buttons={[\r\n        {\r\n          label: 'Local storage all clear',\r\n          width: 300,\r\n          icon: <MdOutlineCleaningServices />,\r\n          callback: () => {\r\n            localStorage.removeItem(LocalStorageUtil.KEY_LOGIN_HASH);\r\n            localStorage.removeItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL);\r\n            const seqMax = Number(localStorage.getItem(LocalStorageUtil.KEY_SCENARIO_SEQ));\r\n            for (let i = 0; i <= seqMax; i++) {\r\n              localStorage.removeItem(LocalStorageUtil.KEY_SCENARIO_PREFIX + i.toString());\r\n            }\r\n            localStorage.removeItem(LocalStorageUtil.KEY_SCENARIO_SEQ);\r\n\r\n            const local = store.local;\r\n            local.maxSeq = 0;\r\n            local.projects = [];\r\n            store.editing.localSeq = -1;\r\n\r\n            // 削除完了のダイアログを表示\r\n            store.system.dialog = <ConfirmDialog.Component\r\n              message=\"All clear succesful!\"\r\n            />;\r\n            dispatcher.updateStore();\r\n          }\r\n        }\r\n      ]} />\r\n  </>);\r\n}\r\n\r\nexport default SPDesignChannel;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\nimport { SPUtil } from \"./spUtil\";\r\nimport { initialStore } from \"../redux/store/store\";\r\nimport Splash from \"../contents/entry/splash\";\r\nimport { ChannelPane } from \"../base/components/tab/channelPane\";\r\n\r\nimport { VscGitPullRequestCreate } from \"react-icons/vsc\";\r\nimport { BiInfoSquare } from \"react-icons/bi\";\r\nimport { VscSymbolProperty } from 'react-icons/vsc';\r\nimport { MdOutlineInvertColors } from 'react-icons/md';\r\nimport { TbLogicAnd } from \"react-icons/tb\";\r\nimport SPLibraryChannel from \"./contents/sPLibraryChannel\";\r\nimport GloballDialog from \"../contents/dialog/globalDialog\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../utils/systemConst\";\r\nimport SPCreateChannel from \"./contents/create/sPCreateChannel\";\r\nimport TotalHeader from \"../contents/entry/totalHeader\";\r\nimport SPPropertyChannel from \"./contents/sPPropertyChannel\";\r\nimport SPInforChannel from \"./contents/sPInfoChannel\";\r\nimport { GlobalContext } from \"../contents/entry/systemEntry\";\r\nimport SyncBlind from \"../contents/dialog/syncBlind\";\r\nimport SPDesignChannel from \"./contents/sPDesignChannel\";\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\nconst SPRoot = (props: {\r\n    hashKey?: string;\r\n}) => {\r\n    // const [store, setStore] = useState(initialStore);\r\n  const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const design = store.design;\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <_SplashDiv>\r\n            <Splash\r\n                remove={() => {\r\n                    store.system.isSplash = false;\r\n                    dispatcher.updateStore();\r\n                }}\r\n            />\r\n        </_SplashDiv>\r\n    );\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = SPUtil.SCREEN_WIDTH;\r\n            const ch = SPUtil.SCREEN_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n            store.env.screenRate = rate;\r\n            dispatcher.updateStore();\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        store.system.isSPMode = true;\r\n        dispatcher.updateStore();\r\n\r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', () => {\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        let mainJsx = <></>;\r\n        if (props.hashKey != undefined) {\r\n            const projectSeq = DataUtil.getDecryptionedProjectSeq(props.hashKey);\r\n            mainJsx = <DirectLinkManager scenarioSeq={projectSeq} />;\r\n        } else {\r\n            mainJsx = (\r\n                <ChannelPane\r\n                    isLandscape={false}\r\n                    tabElements={[\r\n                        { name: 'Info', icon: <BiInfoSquare />, isEnable: true, cont: <SPInforChannel /> },\r\n                        { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <SPCreateChannel /> },\r\n                        { name: 'Library', icon: <TbLogicAnd />, isEnable: true, cont: <SPLibraryChannel /> },\r\n                        // { name: 'Library', icon: <TbLogicAnd />, isEnable: false, cont: <></>},\r\n                        { name: 'Property', icon: <VscSymbolProperty />, isEnable: true, cont: <SPPropertyChannel /> },\r\n                        { name: 'Design', icon: <MdOutlineInvertColors />, isEnable: false, cont: <SPDesignChannel /> },\r\n                    ]}\r\n                    activeNo={store.system.channelIndex}\r\n                    selectTabIndex={(index: number) => {\r\n                        store.system.channelIndex = index;\r\n                        dispatcher.updateStore();\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        jsx = (\r\n            <_Contents>\r\n                {splashJsx}\r\n                <GloballDialog />\r\n                <SyncBlind />\r\n                <TotalHeader />\r\n                <_ChannelWrap backgroundColor={design.sub1}>\r\n                    {mainJsx}\r\n                </_ChannelWrap>\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SPRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _ChannelWrap = styled.div<{\r\n    backgroundColor: string;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: ${props => props.backgroundColor};\r\n  width: 100%;\r\n  height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${SPUtil.SCREEN_WIDTH}px;\r\n  height: ${SPUtil.SCREEN_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _SplashDiv = styled.div`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 50%;\r\n    top: 400px;\r\n    transform-origin: center;\r\n    transform: scale(0.7);\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport BuildUtil from \"../../contents/create/preview/buildUtil\";\r\nimport PreviewLauncherFrame from \"../../contents/create/preview/previewLauncherFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport { Store } from \"../store/store\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private setStore: (store: Store) => void;\r\n\r\n    constructor(store: Store, setStore: (store: Store) => void) {\r\n        this.store = store;\r\n        this.setStore = setStore;\r\n    }\r\n\r\n    public updateStore = () => {\r\n        this.setStore({ ...this.store });\r\n    }\r\n\r\n    public syncProccess = (proc: Promise<void>) => {\r\n        const sys = this.store.system;\r\n        sys.isSync = true;\r\n        this.updateStore();\r\n        proc.then(()=>{\r\n            sys.isSync = false;\r\n            this.updateStore();\r\n        });\r\n    }\r\n\r\n    public system = {\r\n        // setUserEnv: (userEnv: UserEnv) => {\r\n        // },\r\n    }\r\n    public story = {\r\n\r\n        /**\r\n         * プレビューオールダイアログを表示する\r\n         */\r\n        openPreviewAllDialog: () => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(def => {\r\n                        if (def.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                        } else if (def.frame > frame) return 1;\r\n                    });\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n        /**\r\n         * プレビューソロダイアログを表示する\r\n         */\r\n        openPreviewSoloDialog: (focus: number) => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    const def = fuseList[focus];\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n\r\n        updateCache: (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n\r\n            cache.thumbList = [];\r\n            cache.useFrame = 0;\r\n            const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                    }\r\n\r\n                    const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                    if (thumb != undefined) {\r\n                        const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        });\r\n                        cache.thumbList.push({ name: thumb.name, url });\r\n                    }\r\n                },\r\n                doEnd: (frame) => {\r\n                    cache.useFrame = frame;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport MobileRoot from '../../sp/mobileRoot';\r\nimport PCRoot from './pCRoot';\r\nimport SPRoot from '../../sp/sPRoot';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport DataUtil from '../../utils/dataUtil';\r\nimport SystemConst from '../../utils/systemConst';\r\nimport LocalStorageUtil from '../../utils/localStorageUtil';\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    // const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    const dispatcher = new Dispatcher(store, setStore);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    useEffect(() => {\r\n        // ローカルストレージから情報取得\r\n        LocalStorageUtil.load(store, dispatcher.updateStore);\r\n        dispatcher.updateStore();\r\n    }, []);\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore, dispatcher }}>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    {/* <PCRoot /> */}\r\n                    {!SystemConst.IS_SP ? <PCRoot /> : <SPRoot />}\r\n                </Route>\r\n                {/* <Route path=\"/sp\" exact >\r\n                    <SPRoot />\r\n                </Route> */}\r\n                {/* <Route path=\"/library\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route> */}\r\n                <Route path=\"/share\" exact >\r\n                    <SPRoot hashKey={str} />\r\n                </Route>\r\n            </Switch>\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\nimport DrawUtil from \"../../contents/graphic/drawUtil\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    const DEFAULT_LABEL_WIDTH = 140;\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnabled?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        const lablelWidth = props.labelWidth ?? DEFAULT_LABEL_WIDTH;\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnabled ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={lablelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n        isRecordItem?: boolean;\r\n    }) => {\r\n        let width: string | undefined = undefined;\r\n        if (props.isRecordItem) width = `calc(100% - ${DEFAULT_LABEL_WIDTH + 16}px)`;\r\n        if (props.width != undefined) width = props.width + 'px';\r\n        return (\r\n            <_FixedLabel width={width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const isEnabled = props.isEnabled ?? true;\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            if (!isEnabled) props.checkable.errors.length = 0;\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={!isEnabled || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            // isEnable={isEnable}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        const isEnabled = props.isEnabled ?? true;\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            if (!isEnabled) props.checkable.errors.length = 0;\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={!isEnabled || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export const TextArea = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n    }) => {\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemnTextArea\r\n                value={value}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                }}\r\n                // errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        icon?: JSX.Element;\r\n        interval?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        isIconButton?: boolean;\r\n        interval?: number;\r\n    }) => {\r\n        const { store } = useContext(GlobalContext);\r\n        const design = store.design;\r\n        const align = props.align ?? 'right';\r\n        const interval = props.interval ?? 4;\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n                height={!props.isIconButton ? 40 : 68}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    if (button.icon == undefined) {\r\n                        return (\r\n                            <_Button\r\n                                key={i}\r\n                                grad1={design.accent1}\r\n                                grad2={DrawUtil.toWhite(design.accent1, 30)}\r\n                                textColor={design.text1}\r\n                                borderColor={design.text1}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                interval={interval}\r\n                                onClick={button.callback}\r\n                            >{button.label}</_Button>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <_IconButton\r\n                                key={i}\r\n                                grad1={design.accent1}\r\n                                grad2={DrawUtil.toWhite(design.accent1, 30)}\r\n                                textColor={design.text1}\r\n                                borderColor={design.text1}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                interval={interval}\r\n                                onClick={button.callback}\r\n                            >{button.icon}<br />{button.label}</_IconButton>\r\n                        );\r\n                    }\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        const { store } = useContext(GlobalContext);\r\n        const design = store.design;\r\n        const button = props.button;\r\n        const interval = button.interval ?? 4;\r\n        if (button.icon == undefined) {\r\n            return (\r\n                <_Button\r\n                    grad1={design.accent1}\r\n                    grad2={DrawUtil.toWhite(design.accent1, 30)}\r\n                    textColor={design.text1}\r\n                    borderColor={design.text1}\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    interval={interval}\r\n                    onClick={button.callback}\r\n                >{button.label}</_Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <_IconButton\r\n                    isCenter={false}\r\n                    grad1={design.accent1}\r\n                    grad2={DrawUtil.toWhite(design.accent1, 30)}\r\n                    textColor={design.text1}\r\n                    borderColor={design.text1}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    interval={interval}\r\n                    onClick={button.callback}\r\n                >{button.icon}<br />{button.label}</_IconButton>\r\n            );\r\n        }\r\n        // return (\r\n        //     <_Button\r\n        //         isCenter={false}\r\n        //         isEnable={props.button.isEnable ?? true}\r\n        //         width={props.button.width}\r\n        //         onClick={props.button.callback}\r\n        //     >{props.button.label}</_Button>\r\n        // );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        isVisible?: boolean;\r\n        height?: number;\r\n        backgroundColor?: string;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        const { store } = useContext(GlobalContext);\r\n        // const title = props.title ?? 'title pl';\r\n        const isVisible = props.isVisible ?? true;\r\n        const isEnable = props.isEnable ?? true;\r\n        const backgroundColor = props.backgroundColor ?? '#cedadd';\r\n        return (<>\r\n            {!isVisible ? <></> : <_BorderText\r\n                textColor={store.design.text4}\r\n            >{props.title}</_BorderText>}\r\n            <_BorderPanel\r\n                isEnable={isEnable}\r\n                isVisible={isVisible}\r\n                height={props.height}\r\n                backgroundColor={backgroundColor}\r\n            >{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const SwitchTwoFace = (props: {\r\n        label1: string;\r\n        label2: string;\r\n        width: number;\r\n        rate1: number;\r\n        rate2: number;\r\n        isUse: boolean;\r\n        isEditable?: boolean;\r\n        isEnable?: boolean;\r\n        isLarge?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const { store } = useContext(GlobalContext);\r\n        const design = store.design;\r\n        const isEnable = props.isEnable ?? true;\r\n        const isEditable = props.isEditable ?? true;\r\n        return (<_SwitchTwoFace\r\n            isEnable={isEnable}\r\n            isEditable={isEditable}\r\n            width={props.width}\r\n            isLarge={props.isLarge ?? false}\r\n            onClick={props.callback}\r\n        >\r\n            <_SwitchItem\r\n                isUse={isEnable && !props.isUse}\r\n                rate={props.rate1}\r\n                isLeft={true}\r\n                isEditable={isEditable}\r\n                isLarge={props.isLarge ?? false}\r\n                bgColor={DrawUtil.toWhite(design.accent2, -60)}\r\n                activeColor={design.accent2}\r\n            >{props.label1}</_SwitchItem>\r\n            <_SwitchItem\r\n                isUse={isEnable && props.isUse}\r\n                rate={props.rate2}\r\n                isLeft={false}\r\n                isEditable={isEditable}\r\n                isLarge={props.isLarge ?? false}\r\n                bgColor={DrawUtil.toWhite(design.accent2, -60)}\r\n                activeColor={design.accent2}\r\n            >{props.label2}</_SwitchItem>\r\n        </_SwitchTwoFace>);\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n    height?: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: ${props => props.height ?? '40'}px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #b4c0c7fa, #d8d8d8, #b4c0c7fa);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: string;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a32323;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width};\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n    // isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    grad1: string;\r\n    grad2: string;\r\n    textColor: string;\r\n    borderColor: string;\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n    interval: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    ${props => css`\r\n        background: linear-gradient(to bottom, ${props.grad1}, ${props.grad2}, ${props.grad1});\r\n        border: 1px solid ${props.borderColor};\r\n    `}\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 ${props => props.interval}px;\r\n    ${props => !props.isCenter ? css<{ interval: number }>`\r\n        margin-left: ${props => props.interval}px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _IconButton = styled.div<{\r\n    grad1: string;\r\n    grad2: string;\r\n    textColor: string;\r\n    borderColor: string;\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n    interval: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    height: 58px;\r\n    padding: 4px 0 0 0;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    ${props => css`\r\n        background: linear-gradient(to bottom, ${props.grad1}, ${props.grad2}, ${props.grad1});\r\n        border: 1px solid ${props.borderColor};\r\n    `}\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 ${props => props.interval}px;\r\n    ${props => !props.isCenter ? css<{ interval: number }>`\r\n        margin-left: ${props => props.interval}px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _SwitchTwoFace = styled.div<{\r\n    isEnable: boolean;\r\n    isEditable: boolean;\r\n    width: number;\r\n    isLarge: boolean;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    ${props => !props.isLarge ? css`\r\n        ${Styles.CSS_LABEL_MIDIUM}\r\n    ` : css`\r\n        ${Styles.CSS_LABEL_LARGE}\r\n    `}\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEditable ? '' : css`    \r\n        pointer-events: none;\r\n    `}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* opacity: 0.7; */\r\n    }\r\n`;\r\n\r\nconst _SwitchItem = styled.div<{\r\n    isUse: boolean;\r\n    rate: number;\r\n    isLeft: boolean;\r\n    isEditable: boolean;\r\n    isLarge: boolean;\r\n    bgColor: string;\r\n    activeColor: string;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* line-height: 25px; */\r\n    border-top: 1px solid #747474;\r\n    border-bottom: 1px solid #747474;\r\n    text-align: ${props => props.isLeft ? css`\r\n        border-left: 1px solid #747474;\r\n    ` : css`\r\n        border-right: 1px solid #747474;\r\n    `};\r\n    text-align: ${props => props.isLeft ? 'right' : 'left'};\r\n    box-sizing: border-box;\r\n    background-color: ${props => props.bgColor};\r\n    color: #515151;\r\n    ${props => !props.isLarge ? css<{ isLeft: boolean }>`\r\n        padding: 0 10px;\r\n        font-size: 16px;\r\n        border-radius: ${props => props.isLeft ? '8px 0 0 8px' : '0 8px 8px 0'};\r\n    ` : css<{ isLeft: boolean }>`\r\n        font-size: 22px;\r\n        padding: 10px 10px;\r\n        border-radius: ${props => props.isLeft ? '22px 0 0 22px' : '0 22px 22px 0'};\r\n    `}\r\n    ${props => props.isEditable ? css`\r\n        ${!props.isUse ? '' : css<{ isLarge: boolean; activeColor: string; }>`\r\n            color: #b30000;\r\n            ${props => !props.isLarge ? css`\r\n                font-size: 22px;\r\n            ` : css`\r\n                font-size: 28px;\r\n            `}\r\n            background-color: ${props => props.activeColor};\r\n            ${props => !props.isLarge ? css`\r\n                font-size: 22px;\r\n            ` : css`\r\n                font-size: 28px;\r\n            `}\r\n        `}\r\n    ` : css`\r\n        ${!props.isUse ? '' : css<{ isLarge: boolean; activeColor: string; }>`\r\n            color: #663e3e;\r\n            ${props => !props.isLarge ? css`\r\n                font-size: 22px;\r\n            ` : css`\r\n                font-size: 28px;\r\n            `}\r\n            background-color: ${props => props.activeColor};\r\n        `};\r\n    `}\r\n    vertical-align: top;\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n    textColor: string;\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: ${props => props.textColor};\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    height?: number;\r\n    backgroundColor: string;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    ${props => props.height == undefined ? '' : css`\r\n        height: ${props.height}px;\r\n    `}\r\n    background-color: ${props => props.backgroundColor};\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    overflow-y: auto;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;\r\n\r\n\r\nconst _ItemnTextArea = styled.textarea<{\r\n\r\n}>`\r\n   display: inline-block;\r\n   width: 100%;\r\n   height: 100%;\r\n   background-color: #ebf5f5;\r\n   font-size: 18px;\r\n   color: black;\r\n   border: none;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n`;","import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { ProjectType, Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const DATABASE_NAME = 'pf2';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pf-webcache', 16);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        let decryptioned = -1;\r\n        try {\r\n            decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        } catch (e) {\r\n            console.error('decode error');\r\n        }\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pf', 8);\r\n    }\r\n\r\n    export const getHashedFromProjectSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedProjectSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    // export const getPreviewURL = (scoreSeq: number) => {\r\n    //     const hashedKey = getHashedFromProjectSeq(scoreSeq);\r\n    //     const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n    //     return url;\r\n    // }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: DATABASE_NAME })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findUserLibdvList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI(\r\n            'select',\r\n            `SELECT owner, seq, name, source, lastmod FROM libdvtbl WHERE owner = ${userSeq} order by seq`\r\n        );\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle = fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            const data = JSON.parse(text);\r\n            // シナリオであるかどうかの判定\r\n            if (!data.hasOwnProperty('scenarioData')) {\r\n                store.libraryData = data;\r\n            } else {\r\n                const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioProps.libraryData;\r\n                store.storyData = scenarioProps.scenarioData;\r\n            }\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFileBak = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const saveLibraryFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        const plainData = JSON.stringify(rootData);\r\n        saveFile(store, setStore, plainData, 'plgc');\r\n    }\r\n\r\n    export const saveScenarioFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        }\r\n        const plainData = JSON.stringify(data);\r\n        saveFile(store, setStore, plainData, 'pstr');\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>, plainData: string, extension: string) => {\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': [`.${extension}`],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    // export const getDirectUrl = (seq: number) => {\r\n    //     return `${APP_SERVER_DOMAIN}/#/story?v=${getHashedFromProjectSeq(seq)}`;\r\n    // }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}